[00:00:00.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:00:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:00:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:00:00.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:00.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:00:17.484] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:00:17.485] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:17.485] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:17.485] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:00:17.485] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:00:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:00:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:00:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:00:40.368] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:00:40.368] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:00:40.368] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:00:47.489] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:00:47.489] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:00:47.490] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:00:47.490] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:00:47.490] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:01:00.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:01:00.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:01:00.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:01:00.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:01:00.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:01:17.494] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:01:17.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:17.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:17.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:01:17.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:01:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:01:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:01:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:01:40.369] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:01:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:01:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:01:47.498] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:01:47.498] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:01:47.498] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:01:47.498] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:01:47.498] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:02:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:02:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:02:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:02:17.503] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:02:17.503] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:17.503] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:17.503] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:02:17.503] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:02:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:02:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:02:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:02:40.369] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:02:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:02:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:02:47.507] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:02:47.507] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:02:47.507] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:02:47.507] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:02:47.507] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:03:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:03:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:03:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:03:17.510] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:03:17.510] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:17.510] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:17.510] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:03:17.511] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:03:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:03:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:03:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:03:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:03:40.369] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:03:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:03:40.369] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:03:47.515] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:03:47.515] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:03:47.515] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:03:47.515] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:03:47.515] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:04:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:04:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:04:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:04:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:04:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:04:17.518] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:04:17.519] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:17.519] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:17.519] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:04:17.519] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:04:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:04:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:04:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:04:39.973] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:04:39.973] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:04:40.370] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:04:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:04:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:04:47.524] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:04:47.524] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:04:47.524] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:04:47.524] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:04:47.524] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:05:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:05:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:05:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:05:17.527] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:05:17.527] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:17.527] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:17.527] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:05:17.527] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:05:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:05:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:05:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:05:40.370] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:05:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:05:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:05:47.531] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:05:47.531] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:05:47.531] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:05:47.531] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:05:47.531] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:06:00.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:06:00.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:06:00.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:06:17.536] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:06:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:06:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:06:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:06:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:06:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:06:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:06:40.370] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:06:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:06:40.370] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:06:47.540] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:06:47.540] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:06:47.540] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:06:47.540] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:06:47.540] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:07:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:07:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:07:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:07:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:07:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:07:17.543] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:07:17.543] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:17.543] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:17.543] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:07:17.543] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:07:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:07:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:07:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:07:40.371] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:07:40.371] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:07:40.371] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:07:47.547] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:07:47.547] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:07:47.547] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:07:47.547] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:07:47.547] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:08:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:08:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:08:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:08:17.552] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:08:17.552] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:17.553] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:17.553] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:08:17.553] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:08:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:08:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:08:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:08:40.371] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:08:40.371] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:08:40.371] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:08:47.556] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:08:47.556] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:08:47.556] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:08:47.556] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:08:47.556] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:09:00.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:09:00.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:09:00.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:09:17.561] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:09:17.561] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:17.561] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:17.561] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:09:17.561] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:09:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:09:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:09:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:09:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:09:39.948] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[00:09:40.372] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[00:09:40.372] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:09:40.372] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:09:47.566] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:09:47.566] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:09:47.566] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:09:47.566] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:09:47.566] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:10:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:10:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:10:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:10:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:10:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:10:17.569] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:10:17.569] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:17.569] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:17.569] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:10:17.569] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:10:30.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:10:30.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:10:30.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:10:40.372] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:10:40.372] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:10:40.372] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:10:47.574] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:10:47.574] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:10:47.574] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:10:47.574] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:10:47.574] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:11:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:11:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:11:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:11:17.578] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:11:17.578] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:17.578] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:17.578] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:11:17.579] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:11:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:11:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:11:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:11:40.373] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:11:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:11:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:11:47.585] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:11:47.585] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:11:47.585] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:11:47.585] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:11:47.585] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:12:00.477] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:12:00.477] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:12:00.477] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:12:17.588] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:12:17.588] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:17.589] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:17.589] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:12:17.589] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:12:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:12:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:12:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:12:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:12:40.373] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:12:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:12:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:12:47.592] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:12:47.592] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:12:47.592] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:12:47.592] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:12:47.592] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:13:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:13:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:13:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:13:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:13:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:13:17.596] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:13:17.596] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:17.596] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:17.597] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:13:17.597] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:13:30.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:13:30.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:13:30.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:13:40.373] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:13:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:13:40.373] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:13:47.600] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:13:47.600] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:13:47.600] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:13:47.600] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:13:47.600] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:14:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:14:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:14:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:14:17.605] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:14:17.605] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:17.605] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:17.605] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:14:17.605] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:14:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:14:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:14:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:14:39.975] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:14:39.975] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:14:40.374] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:14:40.374] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:14:40.374] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:14:47.608] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:14:47.608] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:14:47.608] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:14:47.608] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:14:47.609] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:15:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:15:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:15:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:15:17.612] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:15:17.612] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:17.612] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:17.612] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:15:17.612] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:15:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:15:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:15:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:15:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:15:40.374] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:15:40.374] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:15:40.374] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:15:47.616] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:15:47.616] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:15:47.617] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:15:47.617] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:15:47.617] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:16:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:16:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:16:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:16:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:16:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:16:17.621] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:16:17.621] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:17.621] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:17.621] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:16:17.621] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:16:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:16:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:16:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:16:40.375] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:16:40.375] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:16:40.375] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:16:47.626] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:16:47.626] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:16:47.626] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:16:47.626] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:16:47.626] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:17:00.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:17:00.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:17:00.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:17:17.631] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:17:17.631] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:17:17.631] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:17:17.631] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:17:17.631] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:17:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:17:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:17:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:17:40.376] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:17:40.376] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:17:40.376] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:17:47.636] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:17:47.636] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:17:47.636] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:17:47.636] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:17:47.636] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:18:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:18:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:18:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:18:17.641] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:18:17.641] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:18:17.641] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:18:17.641] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:18:17.641] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:18:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:18:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:18:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:18:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:18:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:18:40.377] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:18:40.377] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:18:40.377] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:18:47.647] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:18:47.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:18:47.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:18:47.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:18:47.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:19:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:19:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:19:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:19:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:19:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:19:17.651] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:19:17.651] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:19:17.651] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:19:17.651] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:19:17.652] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:19:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:19:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:19:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:19:40.377] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[00:19:40.377] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:19:40.377] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:19:47.656] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:19:47.656] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:19:47.656] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:19:47.656] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:19:47.656] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:20:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:20:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:20:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:20:17.660] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:20:17.660] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:20:17.660] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:20:17.660] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:20:17.660] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:20:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:20:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:20:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:20:40.378] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:20:40.378] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:20:40.378] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:20:47.664] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:20:47.664] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:20:47.664] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:20:47.665] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:20:47.665] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:21:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:21:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:21:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:21:17.670] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:21:17.670] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:21:17.670] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:21:17.670] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:21:17.670] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:21:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:21:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:21:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:21:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:21:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:21:40.378] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:21:40.378] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:21:40.378] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:21:47.676] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:21:47.676] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:21:47.676] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:21:47.676] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:21:47.677] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:22:00.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:22:00.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:22:00.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:22:00.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:22:00.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:22:17.681] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:22:17.681] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:22:17.681] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:22:17.681] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:22:17.681] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:22:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:22:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:22:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:22:40.379] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:22:40.379] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:22:40.379] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:22:47.683] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:22:47.683] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:22:47.683] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:22:47.683] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:22:47.684] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:23:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:23:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:23:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:23:17.690] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:23:17.690] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:23:17.690] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:23:17.690] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:23:17.690] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:23:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:23:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:23:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:23:40.379] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:23:40.379] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:23:40.379] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:23:47.694] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:23:47.694] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:23:47.694] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:23:47.694] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:23:47.694] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:24:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:24:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:24:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:24:17.697] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:24:17.697] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:24:17.697] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:24:17.698] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:24:17.698] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:24:30.488] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:24:30.488] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:24:30.488] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:24:30.488] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:24:30.488] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:24:39.948] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[00:24:39.976] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:24:39.976] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:24:40.380] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:24:40.380] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:24:40.380] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:24:47.700] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:24:47.700] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:24:47.701] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:24:47.701] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:24:47.701] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:25:00.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:25:00.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:25:00.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:25:00.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:25:00.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:25:17.707] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:25:17.707] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:25:17.707] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:25:17.707] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:25:17.707] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:25:30.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:25:30.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:25:30.489] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:25:40.380] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:25:40.380] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:25:40.380] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:25:47.711] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:25:47.712] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:25:47.712] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:25:47.712] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:25:47.712] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:26:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:26:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:26:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:26:17.716] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:26:17.716] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:26:17.716] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:26:17.716] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:26:17.716] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:26:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:26:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:26:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:26:40.381] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:26:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:26:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:26:47.721] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:26:47.721] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:26:47.721] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:26:47.721] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:26:47.721] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:27:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:27:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:27:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:27:17.724] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:27:17.724] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:27:17.724] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:27:17.724] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:27:17.724] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:27:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:27:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:27:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:27:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:27:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:27:40.381] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:27:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:27:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:27:47.731] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:27:47.731] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:27:47.731] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:27:47.731] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:27:47.731] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:28:00.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:28:00.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:28:00.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:28:00.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:28:00.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:28:17.735] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:28:17.735] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:28:17.735] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:28:17.735] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:28:17.736] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:28:30.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:28:30.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:28:30.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:28:40.381] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:28:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:28:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:28:47.739] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:28:47.739] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:28:47.740] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:28:47.740] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:28:47.740] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:29:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:29:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:29:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:29:17.743] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:29:17.743] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:29:17.743] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:29:17.744] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:29:17.744] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:29:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:29:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:29:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:29:40.381] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:29:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:29:40.381] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:29:47.745] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:29:47.745] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:29:47.745] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:29:47.745] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:29:47.745] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:30:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:30:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:30:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:30:17.749] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:30:17.749] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:30:17.749] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:30:17.749] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:30:17.749] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:30:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:30:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:30:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:30:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:30:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:30:40.382] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:30:40.382] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:30:40.382] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:30:47.752] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:30:47.752] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:30:47.752] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:30:47.752] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:30:47.752] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:31:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:31:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:31:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:31:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:31:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:31:17.758] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:31:17.758] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:31:17.758] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:31:17.758] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:31:17.758] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:31:30.495] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:31:30.495] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:31:30.495] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:31:40.382] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:31:40.382] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:31:40.382] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:31:47.762] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:31:47.762] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:31:47.762] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:31:47.762] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:31:47.762] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:32:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:32:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:32:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:32:17.767] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:32:17.767] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:32:17.767] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:32:17.767] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:32:17.767] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:32:30.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:32:30.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:32:30.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:32:40.383] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:32:40.383] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:32:40.383] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:32:47.770] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:32:47.771] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:32:47.771] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:32:47.771] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:32:47.771] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:33:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:33:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:33:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:33:17.775] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:33:17.775] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:33:17.775] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:33:17.775] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:33:17.775] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:33:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:33:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:33:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:33:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:33:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:33:40.383] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:33:40.383] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:33:40.383] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:33:47.780] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:33:47.780] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:33:47.780] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:33:47.780] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:33:47.780] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:34:00.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:34:00.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:34:00.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:34:00.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:34:00.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:34:17.784] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:34:17.784] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:34:17.784] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:34:17.784] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:34:17.784] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:34:30.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:34:30.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:34:30.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:34:39.977] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:34:39.977] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:34:40.384] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:34:40.384] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:34:40.384] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:34:47.787] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:34:47.787] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:34:47.787] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:34:47.788] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:34:47.788] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:35:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:35:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:35:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:35:17.790] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:35:17.790] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:35:17.790] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:35:17.790] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:35:17.791] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:35:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:35:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:35:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:35:40.385] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:35:40.385] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:35:40.385] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:35:47.796] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:35:47.796] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:35:47.796] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:35:47.796] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:35:47.796] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:36:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:36:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:36:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:36:17.800] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:36:17.800] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:36:17.800] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:36:17.800] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:36:17.800] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:36:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:36:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:36:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:36:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:36:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:36:40.386] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:36:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:36:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:36:47.805] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:36:47.805] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:36:47.805] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:36:47.805] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:36:47.805] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:37:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:37:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:37:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:37:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:37:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:37:17.807] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:37:17.807] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:37:17.807] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:37:17.807] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:37:17.808] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:37:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:37:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:37:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:37:40.386] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:37:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:37:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:37:47.812] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:37:47.812] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:37:47.812] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:37:47.812] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:37:47.812] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:38:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:38:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:38:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:38:17.817] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:38:17.817] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:38:17.817] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:38:17.817] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:38:17.817] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:38:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:38:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:38:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:38:40.386] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:38:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:38:40.386] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:38:47.820] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:38:47.821] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:38:47.821] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:38:47.821] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:38:47.821] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:39:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:39:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:39:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:39:17.825] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:39:17.825] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:39:17.825] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:39:17.825] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:39:17.825] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:39:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:39:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:39:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:39:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:39:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:39:39.949] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[00:39:40.387] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:39:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:39:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:39:47.829] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:39:47.829] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:39:47.829] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:39:47.830] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:39:47.830] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:40:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:40:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:40:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:40:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:40:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:40:17.833] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:40:17.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:40:17.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:40:17.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:40:17.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:40:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:40:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:40:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:40:40.387] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:40:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:40:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:40:47.836] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:40:47.836] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:40:47.836] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:40:47.836] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:40:47.836] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:41:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:41:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:41:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:41:17.842] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:41:17.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:41:17.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:41:17.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:41:17.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:41:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:41:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:41:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:41:40.387] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:41:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:41:40.387] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:41:47.846] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:41:47.847] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:41:47.847] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:41:47.847] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:41:47.847] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:42:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:42:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:42:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:42:17.851] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:42:17.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:42:17.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:42:17.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:42:17.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:42:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:42:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:42:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:42:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:42:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:42:40.388] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:42:40.388] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:42:40.388] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:42:47.855] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:42:47.855] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:42:47.855] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:42:47.855] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:42:47.855] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:43:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:43:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:43:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:43:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:43:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:43:17.858] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:43:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:43:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:43:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:43:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:43:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:43:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:43:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:43:40.388] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:43:40.388] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:43:40.388] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:43:47.862] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:43:47.862] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:43:47.862] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:43:47.862] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:43:47.862] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:44:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:44:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:44:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:44:17.866] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:44:17.866] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:44:17.866] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:44:17.866] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:44:17.866] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:44:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:44:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:44:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:44:39.978] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:44:39.978] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:44:40.389] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:44:40.389] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:44:40.389] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:44:47.869] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:44:47.869] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:44:47.869] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:44:47.869] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:44:47.869] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:45:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:45:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:45:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:45:17.872] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:45:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:45:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:45:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:45:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:45:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:45:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:45:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:45:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:45:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:45:40.390] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2005ms
[00:45:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:45:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:45:45.871] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:45:45.871] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:45:45.871] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:45:45.871] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:45:45.872] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:46:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:46:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:46:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:46:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:46:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:46:15.876] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:46:15.876] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:46:15.876] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:46:15.876] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:46:15.876] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:46:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:46:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:46:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:46:40.390] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:46:40.390] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:46:40.390] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:46:45.879] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:46:45.879] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:46:45.880] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:46:45.880] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:46:45.880] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:47:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:47:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:47:00.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:47:15.883] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:47:15.883] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:47:15.883] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:47:15.883] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:47:15.883] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:47:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:47:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:47:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:47:40.391] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:47:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:47:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:47:45.888] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:47:45.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:47:45.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:47:45.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:47:45.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:48:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:48:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:48:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:48:15.892] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:48:15.892] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:48:15.892] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:48:15.892] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:48:15.892] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:48:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:48:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:48:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:48:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:48:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:48:40.391] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:48:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:48:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:48:45.896] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:48:45.896] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:48:45.896] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:48:45.896] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:48:45.896] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:49:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:49:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:49:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:49:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:49:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:49:15.900] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:49:15.900] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:49:15.900] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:49:15.900] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:49:15.900] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:49:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:49:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:49:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:49:40.391] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:49:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:49:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:49:45.904] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:49:45.904] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:49:45.905] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:49:45.905] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:49:45.905] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:50:00.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:50:00.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:50:00.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:50:15.909] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:50:15.909] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:50:15.910] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:50:15.910] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:50:15.910] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:50:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:50:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:50:30.511] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:50:40.391] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:50:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:50:40.391] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:50:45.914] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:50:45.914] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:50:45.914] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:50:45.914] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:50:45.914] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:51:00.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:51:00.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:51:00.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:51:15.918] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:51:15.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:51:15.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:51:15.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:51:15.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:51:30.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:51:30.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:51:30.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:51:30.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:51:30.512] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:51:40.392] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:51:40.392] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:51:40.392] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:51:45.922] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:51:45.922] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:51:45.922] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:51:45.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:51:45.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:52:00.513] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:52:00.513] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:52:00.513] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:52:00.513] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:52:00.513] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:52:15.926] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:52:15.926] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:52:15.926] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:52:15.926] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:52:15.926] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:52:30.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:52:30.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:52:30.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:52:40.392] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:52:40.392] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:52:40.392] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:52:45.931] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:52:45.931] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:52:45.931] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:52:45.931] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:52:45.931] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:53:00.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:53:00.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:53:00.514] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:53:15.934] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:53:15.935] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:53:15.935] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:53:15.935] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:53:15.935] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:53:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:53:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:53:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:53:40.393] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:53:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:53:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:53:45.939] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:53:45.940] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:53:45.940] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:53:45.940] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:53:45.940] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:54:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:54:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:54:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:54:15.945] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:54:15.946] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:54:15.946] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:54:15.946] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:54:15.946] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:54:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:54:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:54:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:54:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:54:30.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:54:37.974] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[00:54:37.974] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[00:54:39.951] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[00:54:40.393] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:54:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:54:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:54:45.950] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:54:45.950] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:54:45.950] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:54:45.950] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:54:45.950] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:55:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:55:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:55:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:55:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:55:00.515] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:55:15.955] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:55:15.955] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:55:15.955] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:55:15.955] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:55:15.955] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:55:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:55:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:55:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:55:40.393] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:55:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:55:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:55:45.959] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:55:45.959] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:55:45.959] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:55:45.959] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:55:45.959] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:56:00.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:56:00.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:56:00.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:56:15.962] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:56:15.962] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:56:15.962] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:56:15.962] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:56:15.962] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:56:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:56:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:56:30.516] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:56:40.393] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:56:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:56:40.393] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:56:45.967] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:56:45.967] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:56:45.967] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:56:45.967] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:56:45.967] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:57:00.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:57:00.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:57:00.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:57:15.970] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:57:15.970] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:57:15.971] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:57:15.971] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:57:15.971] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:57:30.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:57:30.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:57:30.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:57:30.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:57:30.517] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[00:57:40.394] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:57:40.394] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:57:40.394] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:57:45.973] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:57:45.973] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:57:45.973] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:57:45.973] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:57:45.974] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:58:00.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:58:00.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:58:00.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[00:58:00.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[00:58:00.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:58:15.978] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:58:15.978] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:58:15.978] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:58:15.978] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:58:15.978] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:58:30.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:58:30.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:58:30.518] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:58:40.395] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[00:58:40.395] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:58:40.395] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:58:45.981] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:58:45.981] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:58:45.982] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:58:45.982] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:58:45.982] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:59:00.519] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:59:00.519] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:59:00.519] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:59:15.986] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:59:15.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:59:15.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:59:15.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:59:15.987] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[00:59:30.520] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[00:59:30.520] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[00:59:30.520] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[00:59:40.396] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[00:59:40.396] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[00:59:40.396] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[00:59:45.990] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[00:59:45.990] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[00:59:45.990] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[00:59:45.991] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[00:59:45.991] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:00:00.521] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:00:00.521] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:00:00.521] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:00:15.994] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:00:15.994] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:00:15.994] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:00:15.994] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:00:15.995] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:00:30.522] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:00:30.522] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:00:30.522] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:00:30.522] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:00:30.522] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:00:40.397] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:00:40.397] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:00:40.397] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:00:45.999] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:00:45.999] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:00:45.999] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:00:46.000] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:00:46.000] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:01:00.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:01:00.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:01:00.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:01:00.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:01:00.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:01:16.003] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:01:16.003] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:01:16.004] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:01:16.004] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:01:16.004] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:01:30.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:01:30.523] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:01:30.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:01:40.397] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:01:40.397] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:01:40.397] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:01:46.008] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:01:46.008] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:01:46.008] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:01:46.008] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:01:46.008] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:02:00.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:02:00.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:02:00.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:02:16.012] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:02:16.012] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:02:16.012] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:02:16.012] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:02:16.012] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:02:30.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:02:30.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:02:30.524] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:02:40.398] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:02:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:02:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:02:46.015] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:02:46.015] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:02:46.015] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:02:46.015] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:02:46.016] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:03:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:03:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:03:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:03:16.019] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:03:16.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:03:16.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:03:16.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:03:16.020] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:03:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:03:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:03:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:03:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:03:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:03:40.398] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:03:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:03:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:03:46.024] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:03:46.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:03:46.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:03:46.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:03:46.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:04:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:04:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:04:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:04:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:04:00.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:04:16.028] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:04:16.028] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:04:16.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:04:16.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:04:16.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:04:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:04:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:04:30.525] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:04:37.975] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:04:37.975] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:04:40.398] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:04:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:04:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:04:46.031] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:04:46.031] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:04:46.031] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:04:46.031] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:04:46.031] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:05:00.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:05:00.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:05:00.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:05:16.035] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:05:16.035] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:05:16.035] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:05:16.036] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:05:16.036] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:05:30.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:05:30.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:05:30.526] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:05:40.398] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:05:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:05:40.398] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:05:46.039] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:05:46.039] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:05:46.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:05:46.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:05:46.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:06:00.527] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:06:00.527] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:06:00.527] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:06:16.045] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:06:16.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:06:16.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:06:16.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:06:16.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:06:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:06:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:06:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:06:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:06:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:06:40.399] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:06:40.399] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:06:40.399] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:06:46.050] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:06:46.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:06:46.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:06:46.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:06:46.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:07:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:07:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:07:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:07:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:07:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:07:16.053] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:07:16.053] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:07:16.053] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:07:16.053] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:07:16.053] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:07:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:07:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:07:30.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:07:40.400] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:07:40.400] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:07:40.400] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:07:46.059] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:07:46.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:07:46.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:07:46.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:07:46.059] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:08:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:08:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:08:00.528] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:08:16.062] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:08:16.062] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:08:16.062] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:08:16.062] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:08:16.062] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:08:30.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:08:30.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:08:30.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:08:40.400] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:08:40.400] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:08:40.400] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:08:46.067] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:08:46.068] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:08:46.068] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:08:46.068] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:08:46.068] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:09:00.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:09:00.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:09:00.529] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:09:16.071] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:09:16.071] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:09:16.071] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:09:16.071] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:09:16.072] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:09:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:09:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:09:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:09:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:09:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:09:39.951] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[01:09:40.401] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:09:40.401] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:09:40.401] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:09:46.076] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:09:46.076] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:09:46.076] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:09:46.076] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:09:46.076] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:10:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:10:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:10:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:10:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:10:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:10:16.080] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:10:16.080] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:10:16.080] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:10:16.080] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:10:16.080] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:10:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:10:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:10:30.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:10:40.402] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:10:40.402] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:10:40.402] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:10:46.084] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:10:46.084] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:10:46.084] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:10:46.084] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:10:46.084] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:11:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:11:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:11:00.530] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:11:16.088] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:11:16.088] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:11:16.088] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:11:16.089] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:11:16.089] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:11:30.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:11:30.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:11:30.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:11:40.402] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:11:40.402] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:11:40.402] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:11:46.096] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:11:46.096] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:11:46.096] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:11:46.096] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:11:46.096] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:12:00.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:12:00.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:12:00.531] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:12:16.101] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:12:16.101] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:12:16.101] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:12:16.102] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:12:16.102] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:12:30.532] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:12:30.532] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:12:30.532] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:12:30.532] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:12:30.532] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:12:40.403] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:12:40.403] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:12:40.403] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:12:46.104] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:12:46.105] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:12:46.105] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:12:46.105] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:12:46.105] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:13:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:13:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:13:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:13:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:13:00.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:13:16.109] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:13:16.110] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:13:16.110] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:13:16.110] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:13:16.110] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:13:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:13:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:13:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:13:40.404] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:13:40.404] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:13:40.404] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:13:46.114] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:13:46.115] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:13:46.115] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:13:46.115] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:13:46.115] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:14:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:14:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:14:00.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:14:16.121] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:14:16.121] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:14:16.121] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:14:16.121] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:14:16.121] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:14:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:14:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:14:30.533] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:14:37.977] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:14:37.977] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:14:40.404] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:14:40.404] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:14:40.404] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:14:46.127] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:14:46.127] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:14:46.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:14:46.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:14:46.128] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:15:00.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:15:00.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:15:00.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:15:16.132] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:15:16.132] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:15:16.132] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:15:16.132] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:15:16.132] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:15:30.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:15:30.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:15:30.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:15:30.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:15:30.534] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:15:40.405] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:15:40.413] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:15:40.413] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:15:46.136] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:15:46.136] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:15:46.137] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:15:46.137] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:15:46.137] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:16:00.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:16:00.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:16:00.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:16:00.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:16:00.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:16:16.141] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:16:16.141] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:16:16.141] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:16:16.141] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:16:16.141] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:16:30.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:16:30.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:16:30.535] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:16:40.405] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:16:40.405] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:16:40.405] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:16:46.144] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:16:46.144] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:16:46.144] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:16:46.144] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:16:46.144] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:17:00.536] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:17:00.536] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:17:00.536] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:17:16.146] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:17:16.146] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:17:16.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:17:16.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:17:16.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:17:30.537] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:17:30.537] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:17:30.537] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:17:40.406] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:17:40.406] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:17:40.406] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:17:46.149] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:17:46.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:17:46.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:17:46.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:17:46.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:18:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:18:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:18:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:18:16.152] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:18:16.152] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:18:16.152] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:18:16.152] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:18:16.152] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:18:30.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:18:30.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:18:30.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:18:30.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:18:30.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:18:40.407] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:18:40.407] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:18:40.407] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:18:46.156] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:18:46.156] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:18:46.156] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:18:46.157] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:18:46.157] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:19:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:19:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:19:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:19:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:19:00.538] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:19:16.161] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:19:16.162] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:19:16.162] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:19:16.162] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:19:16.162] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:19:30.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:19:30.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:19:30.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:19:40.407] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:19:40.407] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:19:40.407] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:19:46.165] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:19:46.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:19:46.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:19:46.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:19:46.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:20:00.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:20:00.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:20:00.539] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:20:16.169] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:20:16.169] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:20:16.169] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:20:16.169] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:20:16.169] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:20:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:20:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:20:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:20:40.408] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:20:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:20:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:20:46.173] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:20:46.174] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:20:46.174] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:20:46.174] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:20:46.174] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:21:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:21:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:21:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:21:16.177] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:21:16.177] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:21:16.178] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:21:16.178] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:21:16.178] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:21:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:21:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:21:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:21:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:21:30.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:21:40.408] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:21:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:21:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:21:46.180] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:21:46.180] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:21:46.180] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:21:46.180] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:21:46.180] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:22:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:22:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:22:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:22:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:22:00.540] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:22:16.185] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:22:16.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:22:16.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:22:16.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:22:16.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:22:30.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:22:30.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:22:30.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:22:40.408] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:22:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:22:40.408] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:22:46.189] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:22:46.189] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:22:46.189] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:22:46.189] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:22:46.189] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:23:00.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:23:00.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:23:00.541] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:23:16.194] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:23:16.194] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:23:16.194] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:23:16.194] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:23:16.194] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:23:30.542] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:23:30.542] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:23:30.542] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:23:40.409] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:23:40.409] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:23:40.409] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:23:46.214] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:23:46.214] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:23:46.214] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:23:46.214] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:23:46.214] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:24:00.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:24:00.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:24:00.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:24:16.218] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:24:16.218] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:24:16.218] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:24:16.219] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:24:16.219] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:24:30.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:24:30.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:24:30.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:24:30.543] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:24:30.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:24:37.979] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:24:37.979] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:24:39.952] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[01:24:40.409] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:24:40.409] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:24:40.409] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:24:46.224] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:24:46.224] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:24:46.224] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:24:46.224] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:24:46.224] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:25:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:25:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:25:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:25:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:25:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:25:16.228] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:25:16.228] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:25:16.229] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:25:16.229] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:25:16.229] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:25:30.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:25:30.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:25:30.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:25:40.410] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:25:40.410] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:25:40.410] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:25:46.233] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:25:46.233] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:25:46.233] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:25:46.233] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:25:46.233] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:26:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:26:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:26:00.544] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:26:16.238] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:26:16.238] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:26:16.238] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:26:16.238] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:26:16.238] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:26:30.545] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:26:30.545] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:26:30.545] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:26:40.410] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:26:40.410] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:26:40.410] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:26:46.243] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:26:46.243] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:26:46.243] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:26:46.243] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:26:46.243] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:27:00.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:27:00.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:27:00.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:27:16.247] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:27:16.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:27:16.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:27:16.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:27:16.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:27:30.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:27:30.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:27:30.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:27:30.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:27:30.546] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:27:40.411] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:27:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:27:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:27:46.253] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:27:46.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:27:46.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:27:46.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:27:46.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:28:00.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:28:00.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:28:00.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:28:00.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:28:00.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:28:16.257] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:28:16.257] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:28:16.257] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:28:16.257] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:28:16.257] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:28:30.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:28:30.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:28:30.547] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:28:40.411] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:28:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:28:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:28:46.260] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:28:46.260] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:28:46.260] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:28:46.260] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:28:46.260] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:29:00.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:29:00.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:29:00.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:29:16.264] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:29:16.264] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:29:16.264] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:29:16.264] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:29:16.264] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:29:30.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:29:30.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:29:30.548] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:29:40.411] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:29:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:29:40.411] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:29:46.267] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:29:46.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:29:46.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:29:46.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:29:46.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:30:00.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:30:00.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:30:00.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:30:16.271] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:30:16.271] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:30:16.271] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:30:16.271] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:30:16.271] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:30:30.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:30:30.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:30:30.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:30:30.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:30:30.549] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:30:40.412] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:30:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:30:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:30:46.276] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:30:46.276] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:30:46.276] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:30:46.276] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:30:46.276] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:31:00.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:31:00.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:31:00.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:31:00.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:31:00.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:31:16.279] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:31:16.280] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:31:16.280] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:31:16.280] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:31:16.280] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:31:30.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:31:30.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:31:30.550] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:31:40.412] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:31:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:31:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:31:46.284] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:31:46.285] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:31:46.285] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:31:46.285] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:31:46.285] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:32:00.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:32:00.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:32:00.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:32:16.288] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:32:16.288] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:32:16.289] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:32:16.289] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:32:16.289] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:32:30.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:32:30.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:32:30.551] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:32:40.412] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:32:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:32:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:32:46.291] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:32:46.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:32:46.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:32:46.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:32:46.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:33:00.552] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:33:00.552] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:33:00.552] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:33:16.297] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:33:16.297] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:33:16.297] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:33:16.297] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:33:16.297] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:33:30.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:33:30.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:33:30.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:33:30.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:33:30.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:33:40.412] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:33:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:33:40.412] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:33:46.300] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:33:46.300] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:33:46.300] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:33:46.300] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:33:46.300] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:34:00.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:34:00.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:34:00.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:34:00.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:34:00.553] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:34:16.305] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:34:16.305] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:34:16.305] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:34:16.305] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:34:16.305] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:34:30.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:34:30.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:34:30.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:34:37.980] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:34:37.980] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:34:40.413] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:34:40.413] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:34:40.413] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:34:46.310] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:34:46.310] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:34:46.310] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:34:46.310] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:34:46.310] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:35:00.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:35:00.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:35:00.554] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:35:16.313] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:35:16.313] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:35:16.313] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:35:16.313] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:35:16.313] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:35:30.555] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:35:30.555] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:35:30.555] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:35:40.414] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:35:40.414] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:35:40.414] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:35:46.317] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:35:46.317] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:35:46.317] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:35:46.317] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:35:46.317] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:36:00.556] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:36:00.556] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:36:00.556] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:36:16.322] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:36:16.322] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:36:16.323] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:36:16.323] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:36:16.323] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:36:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:36:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:36:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:36:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:36:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:36:40.415] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:36:40.415] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:36:40.415] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:36:46.327] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:36:46.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:36:46.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:36:46.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:36:46.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:37:00.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:37:00.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:37:00.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:37:00.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:37:00.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:37:16.332] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:37:16.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:37:16.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:37:16.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:37:16.332] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:37:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:37:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:37:30.557] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:37:40.415] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:37:40.415] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:37:40.415] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:37:46.337] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:37:46.337] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:37:46.337] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:37:46.337] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:37:46.337] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:38:00.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:38:00.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:38:00.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:38:16.341] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:38:16.341] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:38:16.341] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:38:16.341] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:38:16.341] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:38:30.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:38:30.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:38:30.558] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:38:40.416] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:38:40.416] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:38:40.416] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:38:46.343] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:38:46.343] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:38:46.344] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:38:46.344] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:38:46.344] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:39:00.559] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:39:00.559] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:39:00.559] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:39:16.347] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:39:16.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:39:16.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:39:16.348] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:39:16.348] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:39:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:39:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:39:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:39:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:39:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:39:39.952] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[01:39:40.417] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:39:40.417] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:39:40.417] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:39:46.352] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:39:46.352] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:39:46.353] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:39:46.353] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:39:46.353] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:40:00.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:40:00.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:40:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:40:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:40:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:40:16.356] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:40:16.356] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:40:16.356] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:40:16.356] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:40:16.356] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:40:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:40:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:40:30.560] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:40:40.418] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[01:40:40.418] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:40:40.418] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:40:46.360] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:40:46.360] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:40:46.360] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:40:46.360] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:40:46.360] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:41:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:41:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:41:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:41:16.364] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:41:16.364] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:41:16.365] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:41:16.365] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:41:16.365] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:41:30.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:41:30.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:41:30.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:41:40.418] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:41:40.418] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:41:40.418] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:41:46.369] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:41:46.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:41:46.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:41:46.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:41:46.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:42:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:42:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:42:00.561] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:42:16.373] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:42:16.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:42:16.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:42:16.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:42:16.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:42:30.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:42:30.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:42:30.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:42:30.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:42:30.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:42:40.419] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:42:40.419] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:42:40.419] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:42:46.378] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:42:46.379] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:42:46.379] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:42:46.379] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:42:46.379] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:43:00.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:43:00.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:43:00.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:43:00.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:43:00.562] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:43:16.382] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:43:16.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:43:16.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:43:16.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:43:16.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:43:30.563] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:43:30.563] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:43:30.563] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:43:40.420] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:43:40.420] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:43:40.420] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:43:46.388] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:43:46.388] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:43:46.388] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:43:46.388] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:43:46.388] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:44:00.564] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:44:00.564] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:44:00.564] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:44:16.393] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:44:16.393] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:44:16.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:44:16.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:44:16.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:44:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:44:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:44:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:44:37.982] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:44:37.982] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:44:40.420] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:44:40.420] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:44:40.420] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:44:46.397] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:44:46.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:44:46.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:44:46.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:44:46.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:45:00.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:45:00.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:45:00.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:45:16.402] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:45:16.402] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:45:16.402] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:45:16.402] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:45:16.402] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:45:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:45:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:45:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:45:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:45:30.565] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:45:40.421] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[01:45:40.421] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:45:40.421] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:45:46.406] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:45:46.406] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:45:46.406] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:45:46.406] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:45:46.406] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:46:00.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:46:00.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:46:00.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:46:00.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:46:00.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:46:16.409] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:46:16.409] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:46:16.409] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:46:16.409] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:46:16.409] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:46:30.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:46:30.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:46:30.566] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:46:40.422] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:46:40.422] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:46:40.422] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:46:46.412] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:46:46.412] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:46:46.413] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:46:46.413] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:46:46.413] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:47:00.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:47:00.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:47:00.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:47:16.416] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:47:16.416] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:47:16.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:47:16.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:47:16.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:47:30.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:47:30.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:47:30.567] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:47:40.423] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:47:40.423] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:47:40.423] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:47:46.419] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:47:46.419] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:47:46.419] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:47:46.419] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:47:46.419] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:48:00.568] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:48:00.568] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:48:00.568] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:48:16.422] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:48:16.422] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:48:16.422] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:48:16.422] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:48:16.422] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:48:30.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:48:30.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:48:30.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:48:30.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:48:30.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:48:40.424] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[01:48:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:48:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:48:46.424] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:48:46.424] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:48:46.424] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:48:46.425] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:48:46.425] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:49:00.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:49:00.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:49:00.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:49:00.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:49:00.569] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:49:16.427] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:49:16.427] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:49:16.428] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:49:16.428] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:49:16.428] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:49:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:49:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:49:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:49:40.424] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:49:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:49:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:49:46.431] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:49:46.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:49:46.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:49:46.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:49:46.432] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:50:00.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:50:00.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:50:00.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:50:16.436] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:50:16.436] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:50:16.436] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:50:16.436] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:50:16.437] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:50:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:50:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:50:30.570] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:50:40.424] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:50:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:50:40.424] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:50:46.440] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:50:46.440] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:50:46.440] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:50:46.440] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:50:46.440] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:51:00.571] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:51:00.571] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:51:00.571] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:51:16.443] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:51:16.443] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:51:16.444] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:51:16.444] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:51:16.444] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:51:30.572] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:51:30.572] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:51:30.572] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:51:30.572] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:51:30.572] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:51:40.425] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:51:40.425] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:51:40.425] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:51:46.446] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:51:46.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:51:46.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:51:46.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:51:46.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:52:00.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:52:00.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:52:00.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:52:00.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:52:00.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:52:16.450] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:52:16.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:52:16.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:52:16.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:52:16.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:52:30.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:52:30.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:52:30.573] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:52:40.426] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[01:52:40.426] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:52:40.426] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:52:46.454] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:52:46.454] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:52:46.454] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:52:46.454] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:52:46.454] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:53:00.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:53:00.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:53:00.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:53:16.461] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:53:16.462] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:53:16.462] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:53:16.462] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:53:16.462] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:53:30.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:53:30.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:53:30.574] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:53:40.427] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:53:40.427] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:53:40.427] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:53:46.466] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:53:46.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:53:46.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:53:46.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:53:46.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:54:00.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:54:00.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:54:00.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:54:16.469] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:54:16.469] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:54:16.469] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:54:16.469] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:54:16.469] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:54:30.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:54:30.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:54:30.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:54:30.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:54:30.575] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:54:37.983] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[01:54:37.983] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[01:54:39.952] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[01:54:40.428] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:54:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:54:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:54:46.473] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:54:46.473] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:54:46.473] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:54:46.473] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:54:46.473] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:55:00.576] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:55:00.576] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:55:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:55:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:55:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:55:16.477] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:55:16.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:55:16.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:55:16.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:55:16.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:55:30.576] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:55:30.576] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:55:30.576] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:55:40.428] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:55:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:55:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:55:46.480] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:55:46.480] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:55:46.480] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:55:46.480] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:55:46.480] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:56:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:56:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:56:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:56:16.483] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:56:16.483] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:56:16.483] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:56:16.483] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:56:16.484] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:56:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:56:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:56:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:56:40.428] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:56:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:56:40.428] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:56:46.488] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:56:46.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:56:46.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:56:46.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:56:46.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:57:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:57:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:57:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:57:16.491] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:57:16.491] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:57:16.491] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:57:16.491] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:57:16.491] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:57:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:57:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:57:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:57:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:57:30.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[01:57:40.429] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:57:40.429] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:57:40.429] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:57:46.495] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:57:46.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:57:46.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:57:46.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:57:46.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:58:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:58:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:58:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[01:58:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[01:58:00.577] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:58:16.498] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:58:16.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:58:16.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:58:16.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:58:16.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:58:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:58:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:58:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:58:40.429] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:58:40.429] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:58:40.429] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:58:46.502] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:58:46.502] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:58:46.502] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:58:46.502] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:58:46.502] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:59:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:59:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:59:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:59:16.507] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:59:16.507] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:59:16.507] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:59:16.507] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:59:16.507] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[01:59:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[01:59:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[01:59:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[01:59:40.430] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[01:59:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[01:59:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[01:59:46.512] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[01:59:46.512] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[01:59:46.512] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[01:59:46.512] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[01:59:46.512] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:00:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:00:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:00:00.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:00:16.515] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:00:16.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:00:16.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:00:16.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:00:16.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:00:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:00:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:00:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:00:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:00:30.578] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:00:40.430] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:00:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:00:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:00:46.520] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:00:46.520] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:00:46.520] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:00:46.520] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:00:46.520] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:01:00.579] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:01:00.579] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:01:00.579] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:01:00.579] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:01:00.579] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:01:16.523] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:01:16.523] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:01:16.523] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:01:16.523] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:01:16.523] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:01:30.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:01:30.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:01:30.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:01:40.430] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:01:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:01:40.430] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:01:46.527] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:01:46.527] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:01:46.527] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:01:46.527] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:01:46.527] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:02:00.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:02:00.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:02:00.580] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:02:16.531] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:02:16.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:02:16.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:02:16.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:02:16.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:02:30.581] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:02:30.581] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:02:30.581] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:02:40.431] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:02:40.431] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:02:40.431] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:02:46.535] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:02:46.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:02:46.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:02:46.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:02:46.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:03:00.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:03:00.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:03:00.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:03:16.539] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:03:16.540] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:03:16.540] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:03:16.540] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:03:16.540] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:03:30.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:03:30.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:03:30.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:03:30.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:03:30.582] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:03:40.432] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:03:40.432] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:03:40.432] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:03:46.543] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:03:46.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:03:46.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:03:46.544] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:03:46.544] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:04:00.583] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:04:00.583] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:04:00.583] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:04:00.583] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:04:00.583] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:04:16.549] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:04:16.549] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:04:16.549] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:04:16.549] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:04:16.549] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:04:30.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:04:30.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:04:30.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:04:37.985] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:04:37.985] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:04:40.433] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:04:40.433] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:04:40.433] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:04:46.552] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:04:46.552] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:04:46.552] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:04:46.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:04:46.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:05:00.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:05:00.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:05:00.584] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:05:16.558] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:05:16.558] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:05:16.558] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:05:16.558] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:05:16.558] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:05:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:05:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:05:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:05:40.433] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:05:40.433] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:05:40.433] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:05:46.561] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:05:46.562] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:05:46.562] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:05:46.562] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:05:46.562] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:06:00.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:06:00.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:06:00.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:06:16.565] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:06:16.565] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:06:16.565] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:06:16.565] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:06:16.565] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:06:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:06:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:06:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:06:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:06:30.585] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:06:40.434] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:06:40.434] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:06:40.434] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:06:46.568] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:06:46.568] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:06:46.568] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:06:46.568] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:06:46.568] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:07:00.586] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:07:00.586] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:07:00.586] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:07:00.586] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:07:00.586] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:07:16.573] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:07:16.573] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:07:16.573] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:07:16.573] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:07:16.573] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:07:30.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:07:30.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:07:30.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:07:40.435] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:07:40.435] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:07:40.435] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:07:46.577] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:07:46.578] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:07:46.578] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:07:46.578] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:07:46.578] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:08:00.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:08:00.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:08:00.587] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:08:16.582] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:08:16.582] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:08:16.582] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:08:16.582] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:08:16.582] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:08:30.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:08:30.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:08:30.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:08:40.436] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:08:40.436] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:08:40.436] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:08:46.586] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:08:46.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:08:46.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:08:46.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:08:46.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:09:00.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:09:00.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:09:00.588] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:09:16.591] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:09:16.591] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:09:16.591] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:09:16.591] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:09:16.591] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:09:30.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:09:30.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:09:30.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:09:30.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:09:30.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:09:39.953] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[02:09:40.436] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:09:40.436] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:09:40.436] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:09:46.597] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:09:46.597] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:09:46.597] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:09:46.597] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:09:46.597] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:10:00.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:10:00.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:10:00.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:10:00.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:10:00.589] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:10:16.602] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:10:16.603] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:10:16.603] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:10:16.603] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:10:16.603] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:10:30.590] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:10:30.590] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:10:30.590] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:10:40.437] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:10:40.437] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:10:40.437] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:10:46.607] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:10:46.607] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:10:46.607] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:10:46.607] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:10:46.607] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:11:00.591] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:11:00.591] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:11:00.591] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:11:16.609] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:11:16.609] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:11:16.609] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:11:16.609] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:11:16.610] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:11:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:11:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:11:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:11:40.437] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:11:40.437] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:11:40.437] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:11:46.615] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:11:46.615] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:11:46.615] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:11:46.615] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:11:46.615] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:12:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:12:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:12:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:12:16.619] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:12:16.619] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:12:16.619] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:12:16.619] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:12:16.619] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:12:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:12:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:12:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:12:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:12:30.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:12:40.438] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:12:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:12:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:12:46.622] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:12:46.622] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:12:46.622] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:12:46.622] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:12:46.622] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:13:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:13:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:13:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:13:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:13:00.592] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:13:16.627] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:13:16.627] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:13:16.627] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:13:16.627] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:13:16.627] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:13:30.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:13:30.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:13:30.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:13:40.438] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:13:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:13:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:13:46.630] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:13:46.630] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:13:46.630] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:13:46.631] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:13:46.631] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:14:00.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:14:00.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:14:00.593] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:14:16.633] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:14:16.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:14:16.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:14:16.634] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:14:16.634] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:14:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:14:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:14:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:14:37.986] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:14:37.986] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:14:40.438] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:14:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:14:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:14:46.639] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:14:46.639] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:14:46.639] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:14:46.639] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:14:46.639] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:15:00.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:15:00.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:15:00.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:15:16.643] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:15:16.643] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:15:16.643] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:15:16.643] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:15:16.643] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:15:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:15:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:15:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:15:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:15:30.594] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:15:40.438] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:15:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:15:40.438] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:15:46.644] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:15:46.644] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:15:46.644] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:15:46.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:15:46.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:16:00.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:16:00.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:16:00.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:16:00.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:16:00.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:16:16.648] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:16:16.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:16:16.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:16:16.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:16:16.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:16:30.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:16:30.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:16:30.595] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:16:40.439] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:16:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:16:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:16:46.652] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:16:46.652] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:16:46.652] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:16:46.652] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:16:46.653] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:17:00.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:17:00.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:17:00.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:17:16.659] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:17:16.659] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:17:16.659] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:17:16.659] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:17:16.659] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:17:30.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:17:30.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:17:30.596] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:17:40.439] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:17:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:17:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:17:46.660] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:17:46.660] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:17:46.660] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:17:46.660] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:17:46.661] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:18:00.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:18:00.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:18:00.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:18:16.665] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:18:16.665] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:18:16.665] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:18:16.665] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:18:16.665] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:18:30.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:18:30.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:18:30.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:18:30.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:18:30.597] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:18:40.439] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:18:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:18:40.439] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:18:46.668] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:18:46.668] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:18:46.669] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:18:46.669] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:18:46.669] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:19:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:19:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:19:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:19:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:19:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:19:16.673] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:19:16.673] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:19:16.673] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:19:16.673] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:19:16.673] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:19:30.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:19:30.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:19:30.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:19:40.440] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:19:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:19:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:19:46.677] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:19:46.677] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:19:46.677] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:19:46.677] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:19:46.677] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:20:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:20:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:20:00.598] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:20:16.681] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:20:16.681] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:20:16.681] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:20:16.681] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:20:16.681] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:20:30.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:20:30.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:20:30.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:20:40.441] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:20:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:20:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:20:46.684] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:20:46.684] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:20:46.684] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:20:46.684] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:20:46.684] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:21:00.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:21:00.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:21:00.599] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:21:16.687] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:21:16.687] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:21:16.687] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:21:16.687] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:21:16.687] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:21:30.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:21:30.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:21:30.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:21:30.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:21:30.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:21:40.441] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:21:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:21:40.441] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:21:46.691] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:21:46.691] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:21:46.691] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:21:46.691] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:21:46.691] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:22:00.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:22:00.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:22:00.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:22:00.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:22:00.600] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:22:16.696] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:22:16.696] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:22:16.696] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:22:16.696] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:22:16.696] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:22:30.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:22:30.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:22:30.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:22:40.442] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:22:40.442] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:22:40.442] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:22:46.700] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:22:46.700] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:22:46.701] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:22:46.701] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:22:46.701] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:23:00.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:23:00.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:23:00.601] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:23:16.706] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:23:16.706] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:23:16.706] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:23:16.706] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:23:16.706] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:23:30.602] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:23:30.602] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:23:30.602] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:23:40.443] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:23:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:23:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:23:46.710] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:23:46.710] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:23:46.710] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:23:46.711] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:23:46.711] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:24:00.603] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:24:00.603] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:24:00.603] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:24:16.715] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:24:16.715] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:24:16.715] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:24:16.715] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:24:16.715] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:24:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:24:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:24:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:24:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:24:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:24:37.988] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:24:37.988] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:24:39.953] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[02:24:40.443] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:24:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:24:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:24:46.719] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:24:46.720] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:24:46.720] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:24:46.720] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:24:46.720] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:25:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:25:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:25:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:25:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:25:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:25:16.723] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:25:16.723] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:25:16.723] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:25:16.723] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:25:16.723] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:25:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:25:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:25:30.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:25:40.443] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:25:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:25:40.443] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:25:46.725] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:25:46.725] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:25:46.725] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:25:46.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:25:46.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:26:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:26:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:26:00.604] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:26:16.729] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:26:16.730] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:26:16.730] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:26:16.730] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:26:16.730] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:26:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:26:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:26:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:26:40.444] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:26:40.444] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:26:40.444] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:26:46.735] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:26:46.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:26:46.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:26:46.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:26:46.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:27:00.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:27:00.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:27:00.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:27:16.739] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:27:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:27:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:27:16.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:27:16.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:27:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:27:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:27:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:27:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:27:30.605] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:27:40.444] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:27:40.444] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:27:40.444] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:27:46.743] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:27:46.743] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:27:46.743] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:27:46.743] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:27:46.743] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:28:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:28:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:28:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:28:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:28:00.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:28:16.748] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:28:16.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:28:16.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:28:16.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:28:16.749] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:28:30.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:28:30.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:28:30.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:28:40.445] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:28:40.445] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:28:40.445] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:28:46.751] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:28:46.751] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:28:46.751] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:28:46.751] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:28:46.752] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:29:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:29:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:29:00.606] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:29:16.757] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:29:16.757] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:29:16.758] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:29:16.758] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:29:16.758] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:29:30.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:29:30.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:29:30.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:29:40.446] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:29:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:29:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:29:46.761] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:29:46.761] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:29:46.762] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:29:46.762] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:29:46.762] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:30:00.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:30:00.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:30:00.607] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:30:16.765] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:30:16.765] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:30:16.765] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:30:16.765] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:30:16.765] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:30:30.608] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:30:30.608] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:30:30.608] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:30:30.608] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:30:30.608] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:30:40.446] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:30:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:30:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:30:46.769] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:30:46.769] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:30:46.769] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:30:46.769] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:30:46.769] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:31:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:31:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:31:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:31:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:31:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:31:16.773] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:31:16.773] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:31:16.774] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:31:16.774] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:31:16.774] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:31:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:31:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:31:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:31:40.446] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:31:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:31:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:31:46.777] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:31:46.778] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:31:46.778] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:31:46.778] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:31:46.778] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:32:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:32:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:32:00.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:32:16.780] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:32:16.780] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:32:16.780] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:32:16.780] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:32:16.780] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:32:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:32:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:32:30.609] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:32:40.446] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:32:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:32:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:32:46.783] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:32:46.784] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:32:46.784] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:32:46.784] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:32:46.784] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:33:00.610] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:33:00.610] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:33:00.610] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:33:16.788] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:33:16.788] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:33:16.788] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:33:16.788] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:33:16.788] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:33:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:33:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:33:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:33:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:33:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:33:40.446] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:33:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:33:40.446] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:33:46.793] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:33:46.793] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:33:46.793] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:33:46.793] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:33:46.793] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:34:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:34:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:34:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:34:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:34:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:34:16.796] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:34:16.796] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:34:16.796] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:34:16.796] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:34:16.796] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:34:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:34:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:34:30.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:34:37.989] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:34:37.989] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:34:40.447] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:34:40.447] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:34:40.447] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:34:46.800] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:34:46.800] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:34:46.801] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:34:46.801] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:34:46.801] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:35:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:35:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:35:00.611] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:35:16.804] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:35:16.804] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:35:16.804] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:35:16.804] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:35:16.804] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:35:30.612] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:35:30.612] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:35:30.612] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:35:40.448] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:35:40.448] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:35:40.448] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:35:46.808] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:35:46.808] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:35:46.808] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:35:46.808] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:35:46.808] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:36:00.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:36:00.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:36:00.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:36:16.812] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:36:16.812] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:36:16.812] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:36:16.812] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:36:16.812] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:36:30.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:36:30.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:36:30.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:36:30.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:36:30.613] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:36:40.448] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:36:40.448] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:36:40.448] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:36:46.815] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:36:46.815] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:36:46.816] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:36:46.816] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:36:46.816] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:37:00.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:37:00.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:37:00.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:37:00.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:37:00.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:37:16.818] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:37:16.818] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:37:16.818] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:37:16.818] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:37:16.818] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:37:30.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:37:30.614] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:37:30.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:37:40.449] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:37:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:37:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:37:46.821] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:37:46.821] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:37:46.821] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:37:46.821] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:37:46.821] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:38:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:38:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:38:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:38:16.825] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:38:16.825] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:38:16.825] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:38:16.825] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:38:16.825] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:38:30.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:38:30.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:38:30.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:38:40.449] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:38:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:38:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:38:46.829] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:38:46.829] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:38:46.829] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:38:46.829] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:38:46.829] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:39:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:39:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:39:00.615] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:39:16.833] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:39:16.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:39:16.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:39:16.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:39:16.833] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:39:30.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:39:30.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:39:30.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:39:30.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:39:30.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:39:39.953] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[02:39:40.449] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:39:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:39:40.449] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:39:46.836] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:39:46.837] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:39:46.837] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:39:46.837] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:39:46.837] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:40:00.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:40:00.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:40:00.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:40:00.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:40:00.616] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:40:16.839] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:40:16.840] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:40:16.840] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:40:16.840] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:40:16.840] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:40:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:40:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:40:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:40:40.450] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:40:40.450] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:40:40.450] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:40:46.845] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:40:46.845] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:40:46.845] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:40:46.845] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:40:46.845] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:41:00.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:41:00.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:41:00.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:41:16.851] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:41:16.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:41:16.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:41:16.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:41:16.851] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:41:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:41:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:41:30.617] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:41:40.451] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:41:40.451] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:41:40.451] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:41:46.857] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:41:46.857] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:41:46.857] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:41:46.857] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:41:46.857] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:42:00.618] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:42:00.618] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:42:00.618] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:42:16.864] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:42:16.864] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:42:16.864] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:42:16.864] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:42:16.864] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:42:30.618] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:42:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:42:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:42:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:42:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:42:40.452] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:42:40.452] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:42:40.452] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:42:46.868] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:42:46.869] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:42:46.869] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:42:46.869] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:42:46.869] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:43:00.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:43:00.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:43:00.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:43:00.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:43:00.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:43:16.873] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:43:16.873] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:43:16.873] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:43:16.873] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:43:16.873] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:43:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:43:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:43:30.619] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:43:40.452] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:43:40.452] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:43:40.452] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:43:46.878] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:43:46.878] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:43:46.879] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:43:46.879] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:43:46.884] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:44:00.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:44:00.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:44:00.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:44:16.890] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:44:16.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:44:16.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:44:16.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:44:16.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:44:30.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:44:30.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:44:30.620] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:44:37.990] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:44:37.990] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:44:40.453] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:44:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:44:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:44:46.892] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:44:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:44:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:44:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:44:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:45:00.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:45:00.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:45:00.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:45:16.897] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:45:16.897] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:45:16.897] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:45:16.897] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:45:16.897] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:45:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:45:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:45:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:45:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:45:30.621] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:45:40.453] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:45:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:45:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:45:46.976] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:45:46.976] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:45:46.976] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:45:46.976] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:45:46.976] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:46:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:46:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:46:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:46:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:46:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:46:16.980] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:46:16.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:46:16.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:46:16.982] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:46:16.982] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:46:30.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:46:30.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:46:30.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:46:40.453] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:46:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:46:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:46:46.987] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:46:46.987] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:46:46.987] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:46:46.987] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:46:46.987] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:47:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:47:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:47:00.622] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:47:16.995] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:47:16.995] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:47:16.995] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:47:16.995] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:47:16.995] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:47:30.623] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:47:30.623] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:47:30.623] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:47:40.453] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:47:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:47:40.453] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:47:47.001] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:47:47.001] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:47:47.002] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:47:47.002] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:47:47.002] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:48:00.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:48:00.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:48:00.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:48:17.009] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:48:17.009] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:48:17.009] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:48:17.009] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:48:17.009] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:48:30.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:48:30.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:48:30.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:48:30.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:48:30.624] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:48:40.454] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:48:40.454] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:48:40.454] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:48:47.013] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:48:47.013] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:48:47.013] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:48:47.013] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:48:47.013] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:49:00.625] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:49:00.625] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:49:00.625] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:49:00.625] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:49:00.625] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:49:17.018] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:49:17.018] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:49:17.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:49:17.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:49:17.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:49:30.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:49:30.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:49:30.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:49:40.454] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:49:40.454] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:49:40.454] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:49:47.025] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:49:47.025] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:49:47.025] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:49:47.025] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:49:47.025] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:50:00.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:50:00.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:50:00.626] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:50:17.028] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:50:17.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:50:17.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:50:17.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:50:17.029] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:50:30.627] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:50:30.627] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:50:30.627] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:50:40.455] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:50:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:50:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:50:47.034] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:50:47.034] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:50:47.034] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:50:47.034] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:50:47.035] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:51:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:51:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:51:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:51:17.038] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:51:17.038] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:51:17.039] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:51:17.041] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:51:17.041] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:51:30.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:51:30.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:51:30.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:51:30.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:51:30.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:51:40.455] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:51:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:51:40.455] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:51:47.045] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:51:47.045] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:51:47.045] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:51:47.045] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:51:47.045] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:52:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:52:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:52:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:52:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:52:00.628] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:52:17.047] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:52:17.047] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:52:17.049] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:52:17.049] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:52:17.049] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:52:30.629] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:52:30.629] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:52:30.629] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:52:40.455] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:52:40.456] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:52:40.456] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:52:47.056] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:52:47.056] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:52:47.056] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:52:47.056] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:52:47.056] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:53:00.630] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:53:00.630] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:53:00.630] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:53:17.067] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:53:17.067] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:53:17.067] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:53:17.067] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:53:17.067] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:53:30.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:53:30.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:53:30.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:53:40.456] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:53:40.456] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:53:40.456] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:53:47.073] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:53:47.073] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:53:47.073] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:53:47.073] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:53:47.075] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:54:00.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:54:00.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:54:00.631] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:54:17.081] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:54:17.081] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:54:17.081] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:54:17.081] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:54:17.081] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:54:30.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:54:30.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:54:30.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:54:30.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:54:30.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:54:37.992] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[02:54:37.992] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[02:54:39.954] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[02:54:40.456] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:54:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:54:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:54:47.084] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:54:47.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:54:47.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:54:47.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:54:47.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:55:00.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:55:00.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:55:00.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:55:00.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:55:00.632] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:55:17.087] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:55:17.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:55:17.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:55:17.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:55:17.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:55:30.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:55:30.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:55:30.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:55:40.457] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:55:40.457] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:55:40.457] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:55:47.092] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:55:47.092] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:55:47.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:55:47.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:55:47.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:56:00.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:56:00.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:56:00.633] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:56:17.096] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:56:17.096] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:56:17.096] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:56:17.096] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:56:17.096] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:56:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:56:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:56:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:56:40.458] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:56:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:56:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:56:47.103] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:56:47.103] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:56:47.103] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:56:47.103] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:56:47.103] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:57:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:57:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:57:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:57:17.107] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:57:17.107] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:57:17.107] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:57:17.107] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:57:17.107] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:57:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:57:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:57:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:57:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:57:30.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[02:57:40.458] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:57:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:57:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:57:47.113] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:57:47.113] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:57:47.113] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:57:47.113] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:57:47.113] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:58:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:58:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:58:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[02:58:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[02:58:00.634] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:58:17.119] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:58:17.120] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:58:17.120] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:58:17.120] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:58:17.120] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:58:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:58:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:58:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:58:40.458] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:58:40.458] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:58:40.503] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:58:47.124] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:58:47.124] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:58:47.125] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:58:47.125] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:58:47.125] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:59:00.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:59:00.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:59:00.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:59:17.132] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:59:17.132] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:59:17.133] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:59:17.133] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:59:17.133] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[02:59:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[02:59:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[02:59:30.635] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[02:59:40.459] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[02:59:40.459] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[02:59:40.459] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[02:59:47.137] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[02:59:47.137] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[02:59:47.137] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[02:59:47.137] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[02:59:47.137] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:00:00.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:00:00.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:00:00.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:00:17.143] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:00:17.143] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:00:17.143] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:00:17.143] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:00:17.143] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:00:30.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:00:30.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:00:30.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:00:30.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:00:30.636] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:00:40.460] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:00:40.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:00:40.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:00:47.150] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:00:47.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:00:47.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:00:47.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:00:47.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:01:00.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:01:00.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:01:00.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:01:00.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:01:00.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:01:17.153] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:01:17.153] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:01:17.153] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:01:17.153] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:01:17.154] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:01:30.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:01:30.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:01:30.637] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:01:40.460] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:01:40.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:01:40.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:01:47.156] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:01:47.156] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:01:47.156] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:01:47.156] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:01:47.156] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:02:00.638] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:02:00.638] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:02:00.638] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:02:17.159] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:02:17.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:02:17.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:02:17.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:02:17.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:02:30.639] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:02:30.639] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:02:30.639] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:02:40.460] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:02:40.460] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:02:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:02:47.162] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:02:47.162] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:02:47.162] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:02:47.162] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:02:47.162] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:03:00.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:03:00.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:03:00.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:03:17.165] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:03:17.165] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:03:17.165] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:03:17.166] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:03:17.166] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:03:30.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:03:30.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:03:30.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:03:30.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:03:30.640] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:03:40.461] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:03:40.461] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:03:40.461] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:03:47.168] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:03:47.168] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:03:47.168] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:03:47.168] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:03:47.168] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:04:00.641] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:04:00.641] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:04:00.641] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:04:00.641] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:04:00.641] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:04:17.172] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:04:17.172] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:04:17.172] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:04:17.172] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:04:17.173] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:04:30.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:04:30.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:04:30.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:04:37.993] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:04:37.993] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:04:40.462] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:04:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:04:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:04:47.178] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:04:47.178] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:04:47.178] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:04:47.178] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:04:47.178] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:05:00.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:05:00.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:05:00.642] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:05:17.181] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:05:17.181] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:05:17.181] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:05:17.181] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:05:17.181] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:05:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:05:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:05:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:05:40.462] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:05:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:05:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:05:47.186] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:05:47.186] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:05:47.186] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:05:47.186] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:05:47.186] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:06:00.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:06:00.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:06:00.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:06:17.189] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:06:17.189] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:06:17.189] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:06:17.189] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:06:17.189] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:06:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:06:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:06:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:06:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:06:30.643] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:06:40.462] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:06:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:06:40.462] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:06:47.194] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:06:47.194] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:06:47.194] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:06:47.194] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:06:47.194] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:07:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:07:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:07:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:07:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:07:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:07:17.197] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:07:17.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:07:17.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:07:17.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:07:17.197] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:07:30.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:07:30.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:07:30.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:07:40.463] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:07:40.463] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:07:40.463] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:07:47.200] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:07:47.200] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:07:47.200] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:07:47.200] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:07:47.200] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:08:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:08:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:08:00.644] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:08:17.202] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:08:17.203] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:08:17.205] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:08:17.205] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:08:17.205] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:08:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:08:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:08:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:08:40.464] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:08:40.466] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:08:40.466] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:08:47.207] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:08:47.207] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:08:47.207] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:08:47.207] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:08:47.207] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:09:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:09:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:09:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:09:17.211] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:09:17.211] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:09:17.211] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:09:17.211] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:09:17.211] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:09:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:09:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:09:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:09:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:09:30.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:09:39.954] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[03:09:40.464] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:09:40.464] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:09:40.464] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:09:47.214] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:09:47.214] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:09:47.214] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:09:47.215] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:09:47.215] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:10:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:10:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:10:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:10:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:10:00.645] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:10:17.217] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:10:17.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:10:17.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:10:17.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:10:17.218] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:10:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:10:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:10:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:10:40.465] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:10:40.465] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:10:40.465] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:10:47.223] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:10:47.223] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:10:47.223] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:10:47.224] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:10:47.224] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:11:00.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:11:00.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:11:00.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:11:17.232] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:11:17.233] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:11:17.233] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:11:17.233] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:11:17.233] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:11:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:11:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:11:30.646] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:11:40.465] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:11:40.465] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:11:40.465] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:11:47.237] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:11:47.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:11:47.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:11:47.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:11:47.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:12:00.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:12:00.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:12:00.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:12:17.240] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:12:17.240] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:12:17.241] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:12:17.241] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:12:17.241] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:12:30.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:12:30.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:12:30.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:12:30.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:12:30.647] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:12:40.466] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:12:40.466] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:12:40.466] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:12:47.244] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:12:47.245] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:12:47.245] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:12:47.245] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:12:47.245] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:13:00.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:13:00.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:13:00.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:13:00.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:13:00.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:13:17.252] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:13:17.253] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:13:17.253] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:13:17.253] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:13:17.253] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:13:30.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:13:30.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:13:30.648] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:13:40.467] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:13:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:13:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:13:47.255] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:13:47.255] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:13:47.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:13:47.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:13:47.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:14:00.649] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:14:00.649] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:14:00.649] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:14:17.259] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:14:17.259] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:14:17.259] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:14:17.259] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:14:17.259] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:14:30.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:14:30.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:14:30.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:14:37.994] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:14:37.994] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:14:40.467] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:14:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:14:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:14:47.264] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:14:47.264] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:14:47.264] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:14:47.264] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:14:47.264] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:15:00.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:15:00.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:15:00.650] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:15:17.267] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:15:17.267] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:15:17.267] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:15:17.267] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:15:17.267] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:15:30.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:15:30.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:15:30.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:15:30.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:15:30.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:15:40.467] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:15:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:15:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:15:47.271] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:15:47.271] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:15:47.271] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:15:47.271] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:15:47.271] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:16:00.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:16:00.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:16:00.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:16:00.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:16:00.651] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:16:17.275] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:16:17.275] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:16:17.275] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:16:17.275] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:16:17.275] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:16:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:16:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:16:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:16:40.467] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:16:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:16:40.467] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:16:47.279] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:16:47.280] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:16:47.280] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:16:47.280] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:16:47.280] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:17:00.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:17:00.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:17:00.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:17:17.281] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:17:17.281] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:17:17.281] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:17:17.281] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:17:17.281] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:17:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:17:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:17:30.652] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:17:40.468] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:17:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:17:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:17:47.285] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:17:47.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:17:47.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:17:47.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:17:47.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:18:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:18:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:18:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:18:17.288] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:18:17.288] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:18:17.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:18:17.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:18:17.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:18:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:18:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:18:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:18:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:18:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:18:40.468] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:18:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:18:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:18:47.292] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:18:47.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:18:47.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:18:47.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:18:47.292] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:19:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:19:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:19:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:19:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:19:00.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:19:17.297] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:19:17.297] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:19:17.297] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:19:17.297] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:19:17.297] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:19:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:19:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:19:30.653] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:19:40.468] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:19:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:19:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:19:47.300] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:19:47.300] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:19:47.300] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:19:47.300] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:19:47.300] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:20:00.654] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:20:00.654] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:20:00.654] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:20:17.303] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:20:17.303] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:20:17.303] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:20:17.303] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:20:17.303] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:20:30.655] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:20:30.655] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:20:30.655] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:20:40.468] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:20:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:20:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:20:47.307] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:20:47.308] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:20:47.308] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:20:47.308] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:20:47.308] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:21:00.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:21:00.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:21:00.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:21:17.312] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:21:17.312] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:21:17.312] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:21:17.312] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:21:17.312] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:21:30.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:21:30.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:21:30.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:21:30.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:21:30.656] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:21:40.468] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:21:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:21:40.468] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:21:47.316] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:21:47.316] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:21:47.316] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:21:47.316] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:21:47.317] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:22:00.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:22:00.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:22:00.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:22:00.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:22:00.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:22:17.319] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:22:17.319] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:22:17.319] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:22:17.319] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:22:17.319] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:22:30.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:22:30.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:22:30.657] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:22:40.469] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:22:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:22:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:22:47.322] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:22:47.323] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:22:47.323] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:22:47.323] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:22:47.323] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:23:00.658] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:23:00.658] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:23:00.658] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:23:17.325] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:23:17.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:23:17.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:23:17.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:23:17.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:23:30.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:23:30.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:23:30.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:23:40.469] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:23:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:23:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:23:47.330] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:23:47.330] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:23:47.330] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:23:47.330] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:23:47.330] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:24:00.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:24:00.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:24:00.659] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:24:17.335] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:24:17.335] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:24:17.335] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:24:17.335] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:24:17.335] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:24:30.660] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:24:30.660] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:24:30.660] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:24:30.660] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:24:30.660] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:24:37.996] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:24:37.996] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:24:39.955] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[03:24:40.469] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:24:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:24:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:24:47.338] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:24:47.338] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:24:47.338] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:24:47.338] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:24:47.338] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:25:00.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:25:00.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:25:00.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:25:00.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:25:00.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:25:17.342] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:25:17.342] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:25:17.342] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:25:17.342] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:25:17.342] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:25:30.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:25:30.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:25:30.661] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:25:40.469] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:25:40.471] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:25:40.471] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:25:47.347] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:25:47.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:25:47.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:25:47.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:25:47.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:26:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:26:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:26:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:26:17.349] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:26:17.349] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:26:17.349] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:26:17.350] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:26:17.350] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:26:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:26:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:26:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:26:40.469] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:26:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:26:40.469] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:26:47.354] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:26:47.354] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:26:47.354] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:26:47.354] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:26:47.354] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:27:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:27:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:27:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:27:17.359] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:27:17.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:27:17.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:27:17.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:27:17.360] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:27:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:27:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:27:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:27:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:27:30.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:27:40.470] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:27:40.470] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:27:40.470] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:27:47.362] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:27:47.362] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:27:47.362] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:27:47.362] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:27:47.363] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:28:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:28:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:28:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:28:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:28:00.662] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:28:17.370] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:28:17.370] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:28:17.370] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:28:17.370] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:28:17.370] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:28:30.663] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:28:30.663] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:28:30.663] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:28:40.470] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:28:40.470] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:28:40.470] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:28:47.373] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:28:47.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:28:47.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:28:47.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:28:47.373] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:29:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:29:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:29:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:29:17.379] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:29:17.379] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:29:17.379] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:29:17.379] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:29:17.379] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:29:30.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:29:30.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:29:30.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:29:40.472] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[03:29:40.473] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:29:40.473] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:29:47.383] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:29:47.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:29:47.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:29:47.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:29:47.383] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:30:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:30:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:30:00.664] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:30:17.386] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:30:17.386] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:30:17.386] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:30:17.387] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:30:17.387] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:30:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:30:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:30:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:30:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:30:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:30:40.472] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:30:40.472] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:30:40.472] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:30:47.394] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:30:47.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:30:47.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:30:47.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:30:47.394] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:31:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:31:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:31:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:31:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:31:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:31:17.396] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:31:17.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:31:17.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:31:17.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:31:17.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:31:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:31:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:31:30.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:31:40.473] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:31:40.473] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:31:40.473] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:31:47.400] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:31:47.400] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:31:47.401] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:31:47.401] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:31:47.401] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:32:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:32:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:32:00.665] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:32:17.402] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:32:17.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:32:17.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:32:17.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:32:17.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:32:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:32:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:32:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:32:40.474] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:32:40.474] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:32:40.474] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:32:47.405] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:32:47.405] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:32:47.405] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:32:47.405] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:32:47.405] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:33:00.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:33:00.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:33:00.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:33:17.411] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:33:17.411] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:33:17.411] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:33:17.411] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:33:17.411] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:33:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:33:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:33:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:33:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:33:30.666] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:33:40.474] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:33:40.474] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:33:40.474] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:33:47.414] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:33:47.414] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:33:47.414] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:33:47.414] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:33:47.414] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:34:00.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:34:00.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:34:00.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:34:00.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:34:00.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:34:17.419] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:34:17.419] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:34:17.419] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:34:17.419] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:34:17.419] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:34:30.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:34:30.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:34:30.667] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:34:37.997] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:34:37.997] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:34:40.475] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:34:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:34:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:34:47.421] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:34:47.421] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:34:47.421] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:34:47.421] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:34:47.421] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:35:00.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:35:00.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:35:00.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:35:17.425] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:35:17.425] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:35:17.425] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:35:17.425] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:35:17.425] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:35:30.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:35:30.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:35:30.668] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:35:40.475] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:35:40.475] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:35:40.475] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:35:47.429] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:35:47.429] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:35:47.429] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:35:47.429] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:35:47.429] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:36:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:36:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:36:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:36:17.433] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:36:17.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:36:17.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:36:17.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:36:17.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:36:30.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:36:30.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:36:30.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:36:30.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:36:30.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:36:40.476] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:36:40.476] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:36:40.476] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:36:47.437] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:36:47.437] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:36:47.437] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:36:47.437] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:36:47.437] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:37:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:37:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:37:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:37:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:37:00.669] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:37:17.442] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:37:17.442] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:37:17.443] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:37:17.443] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:37:17.443] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:37:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:37:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:37:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:37:40.476] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:37:40.476] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:37:40.476] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:37:47.448] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:37:47.448] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:37:47.448] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:37:47.448] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:37:47.448] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:38:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:38:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:38:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:38:17.453] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:38:17.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:38:17.454] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:38:17.454] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:38:17.454] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:38:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:38:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:38:30.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:38:40.477] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:38:40.477] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:38:40.477] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:38:47.459] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:38:47.459] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:38:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:38:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:38:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:39:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:39:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:39:00.670] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:39:17.463] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:39:17.463] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:39:17.464] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:39:17.464] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:39:17.464] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:39:30.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:39:30.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:39:30.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:39:30.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:39:30.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:39:39.955] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[03:39:40.477] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:39:40.477] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:39:40.477] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:39:47.466] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:39:47.466] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:39:47.466] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:39:47.466] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:39:47.467] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:40:00.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:40:00.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:40:00.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:40:00.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:40:00.671] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:40:17.470] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:40:17.470] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:40:17.470] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:40:17.470] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:40:17.470] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:40:30.672] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:40:30.672] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:40:30.672] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:40:40.478] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:40:40.478] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:40:40.478] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:40:47.473] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:40:47.473] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:40:47.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:40:47.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:40:47.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:41:00.673] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:41:00.673] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:41:00.673] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:41:17.477] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:41:17.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:41:17.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:41:17.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:41:17.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:41:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:41:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:41:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:41:40.478] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:41:40.478] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:41:40.478] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:41:47.480] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:41:47.481] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:41:47.481] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:41:47.481] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:41:47.481] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:42:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:42:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:42:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:42:17.485] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:42:17.485] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:42:17.485] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:42:17.485] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:42:17.486] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:42:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:42:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:42:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:42:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:42:30.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:42:40.479] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:42:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:42:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:42:47.488] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:42:47.488] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:42:47.488] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:42:47.488] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:42:47.489] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:43:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:43:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:43:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:43:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:43:00.674] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:43:17.496] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:43:17.496] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:43:17.496] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:43:17.496] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:43:17.496] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:43:30.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:43:30.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:43:30.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:43:40.479] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:43:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:43:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:43:47.498] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:43:47.498] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:43:47.498] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:43:47.498] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:43:47.498] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:44:00.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:44:00.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:44:00.675] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:44:17.501] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:44:17.502] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:44:17.502] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:44:17.502] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:44:17.502] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:44:30.676] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:44:30.676] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:44:30.676] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:44:37.999] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:44:37.999] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:44:40.479] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:44:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:44:40.479] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:44:47.506] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:44:47.506] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:44:47.506] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:44:47.506] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:44:47.506] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:45:00.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:45:00.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:45:00.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:45:17.507] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:45:17.507] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:45:17.507] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:45:17.507] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:45:17.507] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:45:30.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:45:30.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:45:30.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:45:30.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:45:30.677] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:45:40.480] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[03:45:40.480] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:45:40.480] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:45:47.513] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:45:47.513] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:45:47.513] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:45:47.513] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:45:47.513] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:46:00.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:46:00.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:46:00.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:46:00.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:46:00.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:46:17.516] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:46:17.516] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:46:17.516] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:46:17.516] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:46:17.516] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:46:30.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:46:30.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:46:30.678] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:46:40.480] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:46:40.480] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:46:40.480] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:46:47.521] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:46:47.521] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:46:47.521] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:46:47.521] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:46:47.521] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:47:00.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:47:00.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:47:00.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:47:17.524] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:47:17.525] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:47:17.525] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:47:17.525] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:47:17.525] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:47:30.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:47:30.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:47:30.679] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:47:40.481] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:47:40.481] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:47:40.481] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:47:47.529] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:47:47.529] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:47:47.530] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:47:47.530] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:47:47.530] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:48:00.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:48:00.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:48:00.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:48:17.534] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:48:17.534] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:48:17.534] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:48:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:48:17.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:48:30.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:48:30.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:48:30.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:48:30.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:48:30.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:48:40.482] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:48:40.482] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:48:40.482] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:48:47.546] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:48:47.546] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:48:47.546] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:48:47.546] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:48:47.546] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:49:00.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:49:00.680] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:49:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:49:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:49:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:49:17.547] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:49:17.547] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:49:17.547] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:49:17.547] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:49:17.547] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:49:30.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:49:30.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:49:30.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:49:40.482] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:49:40.482] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:49:40.482] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:49:47.552] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:49:47.552] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:49:47.552] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:49:47.552] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:49:47.552] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:50:00.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:50:00.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:50:00.681] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:50:17.558] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:50:17.558] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:50:17.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:50:17.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:50:17.563] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:50:30.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:50:30.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:50:30.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:50:40.483] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:50:40.483] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:50:40.483] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:50:47.566] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:50:47.567] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:50:47.567] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:50:47.567] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:50:47.567] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:51:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:51:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:51:00.682] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:51:17.570] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:51:17.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:51:17.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:51:17.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:51:17.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:51:30.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:51:30.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:51:30.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:51:30.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:51:30.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:51:40.483] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:51:40.483] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:51:40.483] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:51:47.575] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:51:47.576] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:51:47.576] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:51:47.576] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:51:47.576] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:52:00.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:52:00.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:52:00.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:52:00.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:52:00.683] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:52:17.579] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:52:17.580] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:52:17.580] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:52:17.580] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:52:17.580] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:52:30.684] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:52:30.684] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:52:30.684] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:52:40.484] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:52:40.484] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:52:40.484] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:52:47.585] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:52:47.585] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:52:47.585] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:52:47.585] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:52:47.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:53:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:53:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:53:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:53:17.588] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:53:17.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:53:17.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:53:17.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:53:17.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:53:30.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:53:30.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:53:30.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:53:40.484] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:53:40.484] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:53:40.484] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:53:47.592] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:53:47.592] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:53:47.592] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:53:47.592] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:53:47.592] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:54:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:54:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:54:00.685] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:54:17.593] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:54:17.594] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:54:17.594] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:54:17.594] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:54:17.594] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:54:30.686] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:54:30.686] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:54:30.686] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:54:30.686] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:54:30.686] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:54:38.000] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[03:54:38.000] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[03:54:39.956] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[03:54:40.485] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:54:40.485] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:54:40.485] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:54:47.597] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:54:47.598] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:54:47.598] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:54:47.598] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:54:47.598] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:55:00.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:55:00.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:55:00.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:55:00.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:55:00.690] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:55:17.601] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:55:17.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:55:17.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:55:17.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:55:17.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:55:30.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:55:30.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:55:30.687] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:55:40.485] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:55:40.485] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:55:40.485] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:55:47.604] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:55:47.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:55:47.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:55:47.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:55:47.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:56:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:56:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:56:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:56:17.610] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:56:17.610] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:56:17.610] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:56:17.610] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:56:17.610] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:56:30.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:56:30.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:56:30.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:56:40.486] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:56:40.486] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:56:40.486] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:56:47.615] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:56:47.616] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:56:47.616] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:56:47.616] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:56:47.616] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:57:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:57:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:57:00.688] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:57:17.620] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:57:17.620] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:57:17.620] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:57:17.620] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:57:17.620] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:57:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:57:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:57:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:57:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:57:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[03:57:40.487] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:57:40.487] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:57:40.487] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:57:47.624] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:57:47.624] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:57:47.624] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:57:47.624] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:57:47.624] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:58:00.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:58:00.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:58:00.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:58:17.634] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:58:17.634] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:58:17.635] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:58:17.635] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:58:17.635] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:58:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:58:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:58:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[03:58:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[03:58:30.689] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:58:40.487] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:58:40.487] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:58:40.487] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:58:47.641] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:58:47.641] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:58:47.641] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:58:47.641] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:58:47.641] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:59:00.690] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:59:00.690] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:59:00.690] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:59:17.645] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:59:17.645] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:59:17.645] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:59:17.645] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:59:17.645] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[03:59:30.691] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[03:59:30.691] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[03:59:30.691] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[03:59:40.488] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[03:59:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[03:59:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[03:59:47.647] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[03:59:47.647] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[03:59:47.649] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[03:59:47.650] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[03:59:47.650] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:00:00.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:00:00.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:00:00.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:00:17.652] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:00:17.652] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:00:17.652] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:00:17.652] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:00:17.652] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:00:30.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:00:30.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:00:30.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:00:30.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:00:30.692] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:00:40.488] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:00:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:00:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:00:47.656] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:00:47.656] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:00:47.656] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:00:47.656] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:00:47.656] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:01:00.693] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:01:00.693] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:01:00.693] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:01:17.661] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:01:17.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:01:17.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:01:17.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:01:17.664] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:01:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:01:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:01:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:01:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:01:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:01:40.488] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:01:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:01:40.488] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:01:47.668] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:01:47.668] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:01:47.668] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:01:47.668] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:01:47.668] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:02:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:02:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:02:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:02:17.674] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:02:17.674] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:02:17.674] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:02:17.674] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:02:17.674] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:02:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:02:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:02:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:02:40.489] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:02:40.489] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:02:40.489] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:02:47.677] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:02:47.677] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:02:47.682] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:02:47.682] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:02:47.682] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:03:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:03:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:03:00.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:03:17.687] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:03:17.688] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:03:17.688] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:03:17.688] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:03:17.688] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:03:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:03:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:03:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:03:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:03:30.694] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:03:40.489] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:03:40.489] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:03:40.489] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:03:47.690] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:03:47.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:03:47.691] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:03:47.691] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:03:47.691] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:04:00.695] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:04:00.695] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:04:00.695] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:04:17.696] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:04:17.696] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:04:17.696] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:04:17.696] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:04:17.696] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:04:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:04:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:04:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:04:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:04:30.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:04:38.001] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:04:38.001] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:04:40.490] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:04:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:04:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:04:47.700] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:04:47.700] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:04:47.700] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:04:47.701] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:04:47.701] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:05:00.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:05:00.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:05:00.696] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:05:17.705] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:05:17.705] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:05:17.705] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:05:17.705] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:05:17.705] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:05:30.697] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:05:30.697] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:05:30.697] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:05:40.490] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:05:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:05:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:05:47.710] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:05:47.710] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:05:47.710] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:05:47.711] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:05:47.711] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:06:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:06:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:06:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:06:17.713] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:06:17.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:06:17.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:06:17.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:06:17.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:06:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:06:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:06:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:06:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:06:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:06:40.490] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:06:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:06:40.490] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:06:47.715] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:06:47.715] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:06:47.715] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:06:47.715] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:06:47.716] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:07:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:07:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:07:00.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:07:17.721] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:07:17.721] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:07:17.721] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:07:17.721] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:07:17.722] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:07:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:07:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:07:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:07:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:07:30.698] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:07:40.491] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:07:40.491] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:07:40.491] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:07:47.725] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:07:47.725] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:07:47.725] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:07:47.725] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:07:47.725] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:08:00.699] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:08:00.699] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:08:00.699] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:08:17.728] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:08:17.728] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:08:17.728] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:08:17.728] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:08:17.728] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:08:30.700] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:08:30.700] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:08:30.700] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:08:40.491] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:08:40.491] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:08:40.491] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:08:47.733] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:08:47.733] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:08:47.734] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:08:47.734] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:08:47.734] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:09:00.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:09:00.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:09:00.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:09:17.736] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:09:17.736] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:09:17.736] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:09:17.743] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:09:17.743] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:09:30.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:09:30.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:09:30.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:09:30.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:09:30.701] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:09:39.957] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[04:09:40.492] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:09:40.492] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:09:40.492] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:09:47.747] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:09:47.747] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:09:47.747] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:09:47.747] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:09:47.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:10:00.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:10:00.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:10:00.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:10:17.752] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:10:17.752] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:10:17.752] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:10:17.752] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:10:17.752] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:10:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:10:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:10:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:10:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:10:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:10:40.493] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[04:10:40.493] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:10:40.493] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:10:47.760] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:10:47.760] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:10:47.760] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:10:47.760] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:10:47.760] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:11:00.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:11:01.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:11:01.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:11:17.770] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:11:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:11:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:11:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:11:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:11:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:11:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:11:30.702] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:11:40.494] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:11:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:11:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:11:47.776] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:11:47.777] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:11:47.777] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:11:47.777] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:11:47.777] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:12:00.703] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:12:00.703] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:12:00.703] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:12:17.779] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:12:17.779] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:12:17.779] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:12:17.780] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:12:17.780] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:12:30.704] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:12:30.704] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:12:30.704] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:12:30.704] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:12:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:12:40.494] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:12:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:12:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:12:47.783] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:12:47.783] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:12:47.783] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:12:47.783] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:12:47.783] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:13:00.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:13:00.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:13:00.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:13:17.789] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:13:17.789] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:13:17.789] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:13:17.789] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:13:17.789] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:13:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:13:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:13:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:13:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:13:30.705] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:13:40.494] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:13:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:13:40.494] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:13:47.792] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:13:47.792] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:13:47.792] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:13:47.792] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:13:47.792] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:14:00.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:14:00.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:14:00.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:14:17.800] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:14:17.801] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:14:17.801] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:14:17.801] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:14:17.801] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:14:30.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:14:30.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:14:30.706] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:14:38.002] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:14:38.002] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:14:40.495] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:14:40.495] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:14:40.495] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:14:47.807] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:14:47.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:14:47.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:14:47.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:14:47.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:15:00.707] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:15:00.707] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:15:00.707] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:15:17.813] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:15:17.813] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:15:17.814] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:15:17.814] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:15:17.814] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:15:30.708] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:15:30.708] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:15:30.708] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:15:30.708] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:15:30.708] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:15:40.496] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:15:40.496] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:15:40.496] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:15:47.816] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:15:47.816] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:15:47.816] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:15:47.817] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:15:47.817] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:16:00.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:16:00.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:16:00.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:16:17.823] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:16:17.823] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:16:17.823] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:16:17.823] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:16:17.823] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:16:30.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:16:30.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:16:30.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:16:30.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:16:30.709] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:16:40.497] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:16:40.497] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:16:40.497] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:16:47.826] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:16:47.826] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:16:47.826] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:16:47.826] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:16:47.826] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:17:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:17:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:17:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:17:17.834] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:17:17.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:17:17.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:17:17.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:17:17.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:17:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:17:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:17:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:17:40.497] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:17:40.497] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:17:40.497] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:17:47.841] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:17:47.841] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:17:47.841] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:17:47.841] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:17:47.841] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:18:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:18:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:18:00.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:18:17.845] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:18:17.845] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:18:17.845] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:18:17.845] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:18:17.845] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:18:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:18:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:18:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:18:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:18:30.710] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:18:40.498] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:18:40.498] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:18:40.498] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:18:47.853] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:18:47.853] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:18:47.853] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:18:47.853] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:18:47.853] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:19:00.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:19:00.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:19:00.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:19:17.857] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:19:17.857] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:19:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:19:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:19:17.858] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:19:30.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:19:30.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:19:30.711] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:19:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:19:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:19:40.498] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:19:40.498] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:19:40.498] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:19:47.863] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:19:47.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:19:47.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:19:47.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:19:47.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:20:00.712] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:20:00.712] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:20:00.712] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:20:17.869] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:20:17.869] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:20:17.871] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:20:17.871] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:20:17.871] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:20:30.713] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:20:30.713] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:20:30.713] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:20:40.499] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:20:40.499] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:20:40.499] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:20:47.875] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:20:47.875] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:20:47.875] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:20:47.875] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:20:47.875] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:21:00.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:21:00.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:21:00.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:21:17.879] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:21:17.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:21:17.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:21:17.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:21:17.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:21:30.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:21:30.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:21:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:21:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:21:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:21:40.500] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:21:40.502] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:21:40.502] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:21:47.883] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:21:47.888] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:21:47.888] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:21:47.888] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:21:47.888] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:22:00.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:22:00.714] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:22:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:22:17.892] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:22:17.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:22:17.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:22:17.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:22:17.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:22:30.715] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:22:30.715] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:22:30.715] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:22:40.500] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:22:40.500] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:22:40.500] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:22:47.898] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:22:47.898] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:22:47.898] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:22:47.898] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:22:47.898] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:23:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:23:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:23:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:23:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:23:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:23:17.905] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:23:17.905] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:23:17.905] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:23:17.905] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:23:17.905] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:23:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:23:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:23:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:23:40.501] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[04:23:40.501] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:23:40.501] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:23:47.909] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:23:47.909] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:23:47.909] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:23:47.909] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:23:47.909] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:24:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:24:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:24:00.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:24:17.913] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:24:17.913] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:24:17.913] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:24:17.913] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:24:17.913] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:24:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:24:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:24:30.716] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:24:38.003] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:24:38.003] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:24:39.957] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[04:24:40.502] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:24:40.502] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:24:40.502] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:24:47.916] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:24:47.916] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:24:47.916] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:24:47.916] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:24:47.916] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:25:00.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:25:00.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:25:00.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:25:00.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:25:00.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:25:17.921] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:25:17.921] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:25:17.921] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:25:17.921] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:25:17.921] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:25:30.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:25:30.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:25:30.717] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:25:40.503] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:25:40.503] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:25:40.503] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:25:47.928] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:25:47.928] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:25:47.928] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:25:47.928] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:25:47.928] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:26:00.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:26:00.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:26:00.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:26:00.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:26:00.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:26:17.931] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:26:17.931] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:26:17.934] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:26:17.934] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:26:17.934] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:26:30.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:26:30.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:26:30.718] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:26:40.503] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:26:40.503] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:26:40.503] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:26:47.938] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:26:47.938] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:26:47.938] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:26:47.939] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:26:47.939] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:27:00.719] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:27:00.719] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:27:00.719] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:27:17.943] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:27:17.943] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:27:17.943] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:27:17.943] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:27:17.943] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:27:30.720] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:27:30.720] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:27:30.720] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:27:40.504] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:27:40.504] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:27:40.504] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:27:47.951] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:27:47.952] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:27:47.952] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:27:47.952] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:27:47.952] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:28:00.720] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:28:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:28:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:28:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:28:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:28:17.957] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:28:17.957] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:28:17.957] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:28:17.957] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:28:17.957] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:28:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:28:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:28:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:28:40.505] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:28:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:28:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:28:47.960] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:28:47.960] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:28:47.960] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:28:47.960] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:28:47.961] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:29:00.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:29:00.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:29:00.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:29:00.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:29:00.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:29:17.965] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:29:17.965] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:29:17.965] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:29:17.965] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:29:17.965] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:29:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:29:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:29:30.721] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:29:40.505] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:29:40.505] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:29:40.505] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:29:47.975] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:29:47.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:29:47.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:29:47.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:29:47.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:30:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:30:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:30:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:30:17.979] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:30:17.979] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:30:17.979] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:30:17.979] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:30:17.979] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:30:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:30:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:30:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:30:40.505] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:30:40.505] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:30:40.505] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:30:47.986] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:30:47.986] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:30:47.986] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:30:47.986] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:30:47.986] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:31:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:31:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:31:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:31:17.991] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:31:17.991] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:31:17.991] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:31:17.991] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:31:17.991] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:31:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:31:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:31:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:31:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:31:30.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:31:40.506] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:31:40.506] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:31:40.506] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:31:47.995] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:31:47.995] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:31:47.995] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:31:47.995] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:31:47.995] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:32:00.722] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:32:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:32:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:32:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:32:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:32:18.000] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:32:18.000] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:32:18.000] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:32:18.000] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:32:18.000] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:32:30.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:32:30.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:32:30.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:32:40.507] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:32:40.509] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:32:40.509] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:32:48.006] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:32:48.006] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:32:48.006] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:32:48.006] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:32:48.006] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:33:00.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:33:00.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:33:00.723] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:33:18.010] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:33:18.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:33:18.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:33:18.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:33:18.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:33:30.724] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:33:30.724] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:33:30.724] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:33:40.507] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:33:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:33:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:33:48.015] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:33:48.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:33:48.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:33:48.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:33:48.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:34:00.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:34:00.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:34:00.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:34:18.021] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:34:18.021] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:34:18.021] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:34:18.021] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:34:18.021] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:34:30.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:34:30.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:34:30.725] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:34:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:34:30.727] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:34:38.006] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:34:38.006] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:34:40.507] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:34:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:34:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:34:48.026] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:34:48.026] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:34:48.026] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:34:48.026] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:34:48.026] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:35:00.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:35:00.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:35:00.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:35:18.030] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:35:18.030] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:35:18.030] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:35:18.030] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:35:18.030] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:35:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:35:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:35:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:35:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:35:30.726] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:35:40.507] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:35:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:35:40.507] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:35:48.034] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:35:48.035] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:35:48.035] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:35:48.035] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:35:48.035] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:36:00.727] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:36:00.727] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:36:00.727] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:36:18.038] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:36:18.038] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:36:18.038] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:36:18.038] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:36:18.038] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:36:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:36:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:36:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:36:40.508] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:36:40.508] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:36:40.508] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:36:48.043] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:36:48.043] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:36:48.043] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:36:48.043] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:36:48.043] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:37:00.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:37:00.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:37:00.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:37:18.046] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:37:18.046] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:37:18.046] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:37:18.046] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:37:18.047] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:37:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:37:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:37:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:37:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:37:30.728] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:37:40.509] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:37:40.509] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:37:40.511] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:37:48.049] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:37:48.049] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:37:48.049] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:37:48.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:37:48.050] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:38:00.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:38:00.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:38:00.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:38:18.103] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:38:18.103] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:38:18.103] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:38:18.103] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:38:18.103] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:38:30.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:38:30.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:38:30.729] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:38:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:38:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:38:40.510] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:38:40.512] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:38:40.512] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:38:48.108] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:38:48.108] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:38:48.108] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:38:48.108] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:38:48.113] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:39:00.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:39:00.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:39:00.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:39:18.117] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:39:18.117] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:39:18.117] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:39:18.117] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:39:18.117] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:39:30.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:39:30.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:39:30.730] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:39:39.958] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[04:39:40.510] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:39:40.510] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:39:40.510] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:39:48.121] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:39:48.121] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:39:48.121] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:39:48.122] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:39:48.122] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:40:00.731] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:40:00.731] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:40:00.731] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:40:18.128] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:40:18.128] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:40:18.128] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:40:18.128] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:40:18.128] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:40:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:40:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:40:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:40:30.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:40:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:40:40.511] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:40:40.511] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:40:40.511] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:40:48.137] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:40:48.138] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:40:48.139] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:40:48.139] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:40:48.139] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:41:00.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:41:00.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:41:00.732] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:41:18.143] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:41:18.143] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:41:18.143] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:41:18.143] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:41:18.144] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:41:30.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:41:30.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:41:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:41:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:41:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:41:40.511] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:41:40.511] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:41:40.511] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:41:48.149] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:41:48.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:41:48.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:41:48.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:41:48.149] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:42:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:42:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:42:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:42:18.159] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:42:18.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:42:18.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:42:18.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:42:18.159] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:42:30.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:42:30.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:42:30.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:42:40.512] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:42:40.512] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:42:40.512] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:42:48.166] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:42:48.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:42:48.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:42:48.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:42:48.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:43:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:43:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:43:00.733] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:43:18.171] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:43:18.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:43:18.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:43:18.172] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:43:18.173] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:43:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:43:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:43:30.734] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:43:40.513] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:43:40.513] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:43:40.513] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:43:48.177] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:43:48.179] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:43:48.179] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:43:48.179] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:43:48.179] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:44:00.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:44:00.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:44:00.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:44:00.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:44:00.737] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:44:18.181] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:44:18.182] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:44:18.182] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:44:18.182] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:44:18.182] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:44:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:44:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:44:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:44:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:44:30.735] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:44:38.007] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:44:38.007] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:44:40.514] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:44:40.514] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:44:40.514] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:44:48.185] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:44:48.185] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:44:48.186] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:44:48.187] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:44:48.187] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:45:00.736] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:45:00.736] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:45:00.736] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:45:18.192] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:45:18.192] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:45:18.192] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:45:18.192] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:45:18.192] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:45:30.737] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:45:30.737] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:45:30.737] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:45:40.514] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:45:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:45:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:45:48.196] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:45:48.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:45:48.196] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:45:48.197] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:45:48.197] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:46:00.738] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:46:00.738] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:46:00.738] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:46:18.201] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:46:18.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:46:18.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:46:18.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:46:18.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:46:30.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:46:30.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:46:30.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:46:40.515] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:46:40.515] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:46:40.515] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:46:48.205] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:46:48.205] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:46:48.206] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:46:48.206] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:46:48.206] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:47:00.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:47:00.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:47:00.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:47:00.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:47:00.739] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:47:18.208] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:47:18.208] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:47:18.208] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:47:18.208] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:47:18.208] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:47:30.740] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:47:30.740] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:47:30.740] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:47:30.740] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:47:30.740] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:47:40.516] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:47:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:47:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:47:48.211] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:47:48.211] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:47:48.211] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:47:48.211] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:47:48.212] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:48:00.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:48:00.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:48:00.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:48:18.215] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:48:18.215] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:48:18.215] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:48:18.215] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:48:18.215] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:48:30.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:48:30.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:48:30.741] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:48:40.516] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:48:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:48:40.516] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:48:48.221] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:48:48.221] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:48:48.221] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:48:48.221] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:48:48.221] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:49:00.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:49:00.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:49:00.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:49:18.226] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:49:18.226] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:49:18.226] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:49:18.226] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:49:18.227] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:49:30.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:49:30.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:49:30.742] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:49:40.517] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:49:40.517] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:49:40.517] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:49:48.230] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:49:48.230] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:49:48.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:49:48.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:49:48.232] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:50:00.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:50:00.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:50:00.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:50:00.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:50:00.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:50:18.236] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:50:18.236] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:50:18.237] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:50:18.237] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:50:18.237] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:50:30.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:50:30.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:50:30.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:50:30.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:50:30.743] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:50:40.518] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:50:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:50:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:50:48.240] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:50:48.240] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:50:48.240] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:50:48.240] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:50:48.240] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:51:00.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:51:00.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:51:00.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:51:18.245] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:51:18.245] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:51:18.245] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:51:18.245] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:51:18.245] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:51:30.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:51:30.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:51:30.744] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:51:40.518] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:51:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:51:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:51:48.248] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:51:48.248] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:51:48.248] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:51:48.248] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:51:48.248] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:52:00.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:52:00.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:52:00.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:52:18.252] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:52:18.252] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:52:18.252] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:52:18.252] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:52:18.252] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:52:30.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:52:30.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:52:30.745] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:52:40.518] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:52:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:52:40.518] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:52:48.257] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:52:48.257] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:52:48.257] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:52:48.257] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:52:48.257] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:53:00.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:53:00.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:53:00.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:53:00.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:53:00.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:53:18.267] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:53:18.267] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:53:18.267] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:53:18.267] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:53:18.267] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:53:30.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:53:30.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:53:30.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:53:30.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:53:30.746] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:53:40.519] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:53:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:53:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:53:48.271] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:53:48.271] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:53:48.271] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:53:48.271] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:53:48.271] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:54:00.747] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:54:00.747] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:54:00.747] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:54:18.274] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:54:18.274] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:54:18.274] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:54:18.274] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:54:18.274] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:54:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:54:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:54:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:54:38.008] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[04:54:38.008] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[04:54:39.959] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[04:54:40.519] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:54:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:54:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:54:48.278] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:54:48.278] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:54:48.278] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:54:48.278] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:54:48.278] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:55:00.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:55:00.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:55:00.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:55:18.286] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:55:18.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:55:18.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:55:18.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:55:18.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:55:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:55:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:55:30.748] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:55:40.519] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:55:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:55:40.519] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:55:48.291] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:55:48.291] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:55:48.291] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:55:48.291] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:55:48.291] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:56:00.749] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:56:00.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:56:00.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:56:00.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:56:00.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:56:18.294] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:56:18.294] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:56:18.294] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:56:18.295] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:56:18.295] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:56:30.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:56:30.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:56:30.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:56:30.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:56:30.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:56:40.520] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:56:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:56:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:56:48.298] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:56:48.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:56:48.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:56:48.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:56:48.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:57:00.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:57:00.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:57:00.750] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:57:18.301] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:57:18.301] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:57:18.302] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:57:18.302] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:57:18.302] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:57:30.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:57:30.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:57:30.751] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:57:40.520] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:57:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:57:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:57:48.305] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:57:48.305] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:57:48.305] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:57:48.305] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:57:48.305] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:58:00.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:58:00.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:58:00.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:58:18.311] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:58:18.311] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:58:18.312] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:58:18.312] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:58:18.312] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:58:30.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:58:30.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:58:30.752] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:58:40.520] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:58:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:58:40.520] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:58:48.315] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:58:48.316] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:58:48.316] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:58:48.316] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:58:48.316] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:59:00.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:59:00.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:59:00.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:59:00.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:59:00.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[04:59:18.323] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:59:18.323] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:59:18.323] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:59:18.323] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:59:18.323] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[04:59:30.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[04:59:30.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[04:59:30.753] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[04:59:30.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[04:59:30.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[04:59:40.521] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[04:59:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[04:59:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[04:59:48.326] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[04:59:48.326] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[04:59:48.326] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[04:59:48.326] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[04:59:48.326] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:00:00.754] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:00:00.754] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:00:00.754] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:00:18.330] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:00:18.330] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:00:18.332] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:00:18.332] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:00:18.332] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:00:30.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:00:30.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:00:30.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:00:40.521] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:00:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:00:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:00:48.334] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:00:48.334] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:00:48.334] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:00:48.334] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:00:48.334] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:01:00.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:01:00.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:01:00.755] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:01:18.337] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:01:18.337] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:01:18.337] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:01:18.338] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:01:18.338] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:01:30.756] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:01:30.756] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:01:30.756] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:01:40.521] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:01:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:01:40.521] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:01:48.341] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:01:48.341] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:01:48.341] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:01:48.341] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:01:48.341] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:02:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:02:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:02:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:02:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:02:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:02:18.343] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:02:18.344] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:02:18.344] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:02:18.344] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:02:18.344] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:02:30.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:02:30.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:02:30.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:02:30.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:02:30.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:02:40.522] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:02:40.523] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:02:40.523] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:02:48.346] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:02:48.346] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:02:48.346] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:02:48.346] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:02:48.346] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:03:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:03:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:03:00.757] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:03:18.350] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:03:18.350] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:03:18.350] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:03:18.350] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:03:18.350] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:03:30.758] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:03:30.758] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:03:30.758] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:03:40.523] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[05:03:40.523] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:03:40.523] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:03:48.355] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:03:48.355] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:03:48.355] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:03:48.355] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:03:48.355] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:04:00.759] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:04:00.759] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:04:00.759] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:04:18.358] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:04:18.359] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:04:18.359] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:04:18.359] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:04:18.359] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:04:30.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:04:30.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:04:30.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:04:38.009] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:04:38.009] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:04:40.524] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:04:40.524] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:04:40.524] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:04:48.362] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:04:48.362] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:04:48.362] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:04:48.362] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:04:48.362] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:05:00.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:05:00.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:05:00.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:05:00.760] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:05:00.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:05:18.366] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:05:18.366] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:05:18.366] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:05:18.366] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:05:18.366] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:05:30.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:05:30.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:05:30.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:05:30.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:05:30.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:05:40.525] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:05:40.525] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:05:40.525] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:05:48.369] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:05:48.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:05:48.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:05:48.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:05:48.369] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:06:00.761] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:06:00.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:06:00.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:06:18.376] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:06:18.376] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:06:18.376] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:06:18.376] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:06:18.376] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:06:30.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:06:30.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:06:30.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:06:40.526] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[05:06:40.526] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:06:40.526] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:06:48.380] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:06:48.380] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:06:48.380] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:06:48.380] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:06:48.380] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:07:00.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:07:00.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:07:00.762] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:07:18.382] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:07:18.382] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:07:18.382] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:07:18.382] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:07:18.382] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:07:30.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:07:30.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:07:30.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:07:40.526] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:07:40.526] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:07:40.526] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:07:48.391] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:07:48.391] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:07:48.391] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:07:48.391] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:07:48.391] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:08:00.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:08:00.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:08:00.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:08:00.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:08:00.763] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:08:18.396] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:08:18.396] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:08:18.396] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:08:18.396] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:08:18.396] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:08:30.764] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:08:30.764] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:08:30.764] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:08:30.764] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:08:30.764] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:08:40.527] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:08:40.527] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:08:40.527] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:08:48.402] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:08:48.402] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:08:48.402] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:08:48.402] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:08:48.402] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:09:00.765] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:09:00.765] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:09:00.765] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:09:18.407] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:09:18.407] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:09:18.407] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:09:18.408] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:09:18.408] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:09:30.765] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:09:30.766] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:09:30.766] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:09:39.960] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[05:09:40.527] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:09:40.527] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:09:40.527] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:09:48.412] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:09:48.412] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:09:48.413] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:09:48.413] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:09:48.413] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:10:00.766] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:10:00.766] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:10:00.766] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:10:18.417] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:10:18.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:10:18.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:10:18.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:10:18.417] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:10:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:10:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:10:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:10:40.528] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:10:40.528] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:10:40.528] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:10:48.421] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:10:48.421] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:10:48.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:10:48.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:10:48.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:11:00.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:11:00.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:11:00.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:11:00.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:11:00.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:11:18.429] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:11:18.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:11:18.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:11:18.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:11:18.431] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:11:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:11:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:11:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:11:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:11:30.767] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:11:40.528] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:11:40.528] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:11:40.528] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:11:48.435] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:11:48.435] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:11:48.435] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:11:48.435] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:11:48.435] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:12:00.768] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:12:00.768] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:12:00.768] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:12:18.439] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:12:18.439] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:12:18.439] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:12:18.439] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:12:18.439] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:12:30.768] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:12:30.769] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:12:30.769] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:12:40.529] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:12:40.529] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:12:40.529] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:12:48.443] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:12:48.444] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:12:48.444] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:12:48.444] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:12:48.444] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:13:00.769] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:13:00.769] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:13:00.769] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:13:18.449] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:13:18.449] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:13:18.449] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:13:18.449] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:13:18.449] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:13:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:13:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:13:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:13:40.529] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:13:40.531] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:13:40.531] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:13:48.453] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:13:48.453] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:13:48.454] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:13:48.454] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:13:48.454] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:14:00.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:14:00.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:14:00.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:14:00.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:14:00.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:14:18.455] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:14:18.455] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:14:18.455] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:14:18.455] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:14:18.455] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:14:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:14:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:14:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:14:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:14:30.770] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:14:38.010] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:14:38.010] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:14:40.530] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:14:40.530] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:14:40.530] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:14:48.464] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:14:48.464] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:14:48.464] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:14:48.464] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:14:48.464] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:15:00.771] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:15:00.771] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:15:00.771] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:15:18.471] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:15:18.471] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:15:18.471] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:15:18.471] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:15:18.471] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:15:30.772] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:15:30.772] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:15:30.772] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:15:40.537] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 7ms
[05:15:40.537] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:15:40.537] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:15:48.479] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:15:48.479] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:15:48.479] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:15:48.479] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:15:48.479] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:16:00.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:16:00.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:16:00.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:16:18.483] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:16:18.483] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:16:18.483] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:16:18.483] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:16:18.483] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:16:30.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:16:30.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:16:30.773] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:16:40.538] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:16:40.538] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:16:40.538] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:16:48.487] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:16:48.487] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:16:48.487] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:16:48.487] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:16:48.487] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:17:00.774] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:17:00.774] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:17:00.774] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:17:00.774] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:17:00.774] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:17:18.492] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:17:18.492] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:17:18.492] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:17:18.492] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:17:18.492] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:17:30.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:17:30.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:17:30.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:17:30.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:17:30.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:17:40.539] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:17:40.539] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:17:40.539] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:17:48.496] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:17:48.496] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:17:48.496] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:17:48.496] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:17:48.496] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:18:00.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:18:00.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:18:00.775] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:18:18.505] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:18:18.505] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:18:18.505] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:18:18.505] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:18:18.505] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:18:30.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:18:30.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:18:30.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:18:40.539] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:18:40.539] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:18:40.539] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:18:48.510] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:18:48.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:18:48.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:18:48.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:18:48.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:19:00.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:19:00.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:19:00.776] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:19:18.516] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:19:18.516] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:19:18.516] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:19:18.516] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:19:18.516] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:19:30.777] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:19:30.777] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:19:30.777] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:19:40.540] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:19:40.540] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:19:40.540] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:19:48.520] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:19:48.521] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:19:48.521] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:19:48.521] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:19:48.521] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:20:00.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:20:00.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:20:00.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:20:00.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:20:00.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:20:18.525] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:20:18.525] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:20:18.525] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:20:18.525] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:20:18.525] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:20:30.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:20:30.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:20:30.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:20:30.778] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:20:30.779] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:20:40.541] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:20:40.541] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:20:40.541] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:20:48.529] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:20:48.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:20:48.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:20:48.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:20:48.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:21:00.779] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:21:00.779] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:21:00.779] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:21:18.535] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:21:18.535] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:21:18.535] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:21:18.535] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:21:18.535] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:21:30.780] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:21:30.780] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:21:30.780] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:21:40.541] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:21:40.541] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:21:40.541] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:21:48.538] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:21:48.538] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:21:48.538] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:21:48.538] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:21:48.538] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:22:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:22:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:22:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:22:18.543] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:22:18.544] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:22:18.544] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:22:18.544] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:22:18.544] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:22:30.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:22:30.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:22:30.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:22:40.542] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:22:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:22:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:22:48.548] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:22:48.548] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:22:48.548] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:22:48.549] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:22:48.549] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:23:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:23:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:23:00.781] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:23:00.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:23:00.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:23:18.550] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:23:18.550] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:23:18.550] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:23:18.550] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:23:18.550] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:23:30.782] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:23:30.782] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:23:30.782] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:23:30.782] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:23:30.782] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:23:40.542] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:23:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:23:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:23:48.555] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:23:48.555] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:23:48.555] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:23:48.555] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:23:48.555] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:24:00.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:24:00.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:24:00.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:24:18.559] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:24:18.560] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:24:18.560] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:24:18.560] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:24:18.560] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:24:30.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:24:30.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:24:30.783] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:24:38.012] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:24:38.012] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:24:39.960] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[05:24:40.542] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:24:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:24:40.542] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:24:48.562] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:24:48.563] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:24:48.563] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:24:48.563] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:24:48.563] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:25:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:25:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:25:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:25:18.566] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:25:18.566] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:25:18.568] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:25:18.568] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:25:18.568] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:25:30.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:25:30.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:25:30.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:25:40.543] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:25:40.543] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:25:40.543] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:25:48.571] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:25:48.572] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:25:48.572] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:25:48.572] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:25:48.572] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:26:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:26:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:26:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:26:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:26:00.784] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:26:18.576] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:26:18.577] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:26:18.577] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:26:18.577] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:26:18.577] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:26:30.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:26:30.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:26:30.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:26:30.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:26:30.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:26:40.544] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:26:40.544] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:26:40.544] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:26:48.580] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:26:48.580] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:26:48.580] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:26:48.580] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:26:48.580] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:27:00.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:27:00.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:27:00.785] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:27:18.583] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:27:18.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:27:18.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:27:18.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:27:18.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:27:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:27:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:27:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:27:40.544] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:27:40.544] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:27:40.544] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:27:48.586] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:27:48.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:27:48.586] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:27:48.587] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:27:48.587] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:28:00.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:28:00.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:28:00.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:28:18.591] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:28:18.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:28:18.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:28:18.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:28:18.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:28:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:28:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:28:30.786] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:28:40.545] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:28:40.545] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:28:40.545] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:28:48.594] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:28:48.594] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:28:48.594] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:28:48.595] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:28:48.595] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:29:00.787] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:29:00.787] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:29:00.787] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:29:00.787] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:29:00.787] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:29:18.598] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:29:18.598] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:29:18.598] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:29:18.598] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:29:18.598] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:29:30.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:29:30.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:29:30.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:29:30.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:29:30.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:29:40.546] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[05:29:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:29:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:29:48.601] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:29:48.601] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:29:48.601] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:29:48.601] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:29:48.601] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:30:00.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:30:00.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:30:00.788] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:30:18.604] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:30:18.604] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:30:18.604] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:30:18.604] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:30:18.604] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:30:30.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:30:30.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:30:30.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:30:40.546] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:30:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:30:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:30:48.609] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:30:48.609] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:30:48.609] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:30:48.609] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:30:48.609] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:31:00.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:31:00.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:31:00.789] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:31:18.612] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:31:18.612] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:31:18.612] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:31:18.612] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:31:18.612] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:31:30.790] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:31:30.790] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:31:30.790] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:31:40.546] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:31:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:31:40.546] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:31:48.618] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:31:48.618] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:31:48.618] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:31:48.618] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:31:48.618] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:32:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:32:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:32:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:32:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:32:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:32:18.624] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:32:18.625] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:32:18.625] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:32:18.625] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:32:18.625] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:32:30.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:32:30.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:32:30.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:32:30.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:32:30.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:32:40.547] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:32:40.547] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:32:40.547] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:32:48.629] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:32:48.629] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:32:48.629] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:32:48.629] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:32:48.629] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:33:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:33:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:33:00.791] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:33:18.635] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:33:18.636] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:33:18.636] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:33:18.636] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:33:18.636] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:33:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:33:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:33:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:33:40.547] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:33:40.547] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:33:40.547] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:33:48.639] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:33:48.639] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:33:48.639] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:33:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:33:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:34:00.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:34:00.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:34:00.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:34:18.642] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:34:18.642] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:34:18.642] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:34:18.642] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:34:18.643] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:34:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:34:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:34:30.792] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:34:38.012] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:34:38.012] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:34:40.548] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:34:40.548] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:34:40.548] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:34:48.646] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:34:48.647] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:34:48.647] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:34:48.647] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:34:48.647] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:35:00.793] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:35:00.793] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:35:00.793] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:35:00.793] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:35:00.793] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:35:18.649] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:35:18.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:35:18.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:35:18.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:35:18.649] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:35:30.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:35:30.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:35:30.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:35:30.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:35:30.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:35:40.548] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:35:40.548] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:35:40.548] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:35:48.654] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:35:48.654] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:35:48.654] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:35:48.654] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:35:48.654] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:36:00.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:36:00.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:36:00.794] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:36:18.659] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:36:18.659] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:36:18.659] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:36:18.659] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:36:18.659] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:36:30.795] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:36:30.795] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:36:30.795] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:36:40.549] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:36:40.549] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:36:40.549] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:36:48.663] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:36:48.663] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:36:48.663] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:36:48.663] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:36:48.663] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:37:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:37:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:37:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:37:18.667] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:37:18.667] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:37:18.668] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:37:18.668] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:37:18.668] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:37:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:37:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:37:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:37:40.549] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:37:40.549] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:37:40.549] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:37:48.672] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:37:48.672] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:37:48.672] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:37:48.672] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:37:48.672] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:38:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:38:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:38:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:38:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:38:00.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:38:18.676] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:38:18.676] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:38:18.677] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:38:18.677] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:38:18.677] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:38:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:38:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:38:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:38:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:38:30.796] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:38:40.550] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:38:40.550] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:38:40.550] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:38:48.680] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:38:48.680] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:38:48.680] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:38:48.680] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:38:48.680] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:39:00.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:39:00.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:39:00.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:39:18.684] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:39:18.685] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:39:18.685] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:39:18.685] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:39:18.685] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:39:30.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:39:30.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:39:30.797] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:39:39.961] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[05:39:40.550] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:39:40.550] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:39:40.550] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:39:48.689] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:39:48.689] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:39:48.689] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:39:48.689] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:39:48.690] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:40:00.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:40:00.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:40:00.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:40:18.697] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:40:18.698] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:40:18.698] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:40:18.698] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:40:18.698] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:40:30.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:40:30.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:40:30.798] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:40:40.551] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:40:40.551] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:40:40.551] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:40:48.706] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:40:48.706] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:40:48.706] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:40:48.706] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:40:48.706] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:41:00.799] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:41:00.799] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:41:00.799] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:41:00.799] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:41:00.799] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:41:18.712] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:41:18.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:41:18.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:41:18.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:41:18.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:41:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:41:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:41:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:41:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:41:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:41:40.551] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:41:40.551] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:41:40.551] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:41:48.718] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:41:48.718] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:41:48.718] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:41:48.718] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:41:48.718] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:42:00.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:42:00.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:42:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:42:18.723] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:42:18.723] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:42:18.723] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:42:18.723] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:42:18.723] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:42:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:42:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:42:30.800] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:42:40.552] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:42:40.552] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:42:40.552] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:42:48.728] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:42:48.728] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:42:48.728] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:42:48.728] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:42:48.728] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:43:00.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:43:00.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:43:00.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:43:18.733] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:43:18.733] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:43:18.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:43:18.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:43:18.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:43:30.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:43:30.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:43:30.801] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:43:40.553] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:43:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:43:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:43:48.738] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:43:48.738] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:43:48.738] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:43:48.738] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:43:48.738] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:44:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:44:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:44:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:44:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:44:00.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:44:18.741] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:44:18.741] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:44:18.742] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:44:18.742] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:44:18.742] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:44:30.802] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:44:30.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:44:30.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:44:30.804] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:44:30.804] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:44:38.014] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:44:38.014] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:44:40.553] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:44:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:44:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:44:48.746] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:44:48.746] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:44:48.746] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:44:48.746] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:44:48.746] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:45:00.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:45:00.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:45:00.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:45:18.751] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:45:18.751] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:45:18.751] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:45:18.751] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:45:18.751] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:45:30.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:45:30.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:45:30.803] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:45:40.553] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:45:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:45:40.553] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:45:48.754] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:45:48.754] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:45:48.754] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:45:48.754] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:45:48.754] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:46:00.804] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:46:00.804] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:46:00.804] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:46:18.757] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:46:18.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:46:18.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:46:18.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:46:18.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:46:30.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:46:30.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:46:30.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:46:40.554] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:46:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:46:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:46:48.762] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:46:48.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:46:48.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:46:48.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:46:48.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:47:00.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:47:00.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:47:00.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:47:00.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:47:00.805] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:47:18.766] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:47:18.766] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:47:18.767] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:47:18.767] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:47:18.767] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:47:30.806] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:47:30.806] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:47:30.806] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:47:30.806] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:47:30.806] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:47:40.554] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:47:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:47:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:47:48.772] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:47:48.772] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:47:48.772] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:47:48.772] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:47:48.772] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:48:00.807] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:48:00.807] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:48:00.807] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:48:18.776] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:48:18.776] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:48:18.777] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:48:18.777] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:48:18.777] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:48:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:48:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:48:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:48:40.554] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:48:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:48:40.554] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:48:48.781] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:48:48.781] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:48:48.782] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:48:48.782] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:48:48.782] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:49:00.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:49:00.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:49:00.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:49:18.786] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:49:18.786] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:49:18.786] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:49:18.787] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:49:18.787] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:49:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:49:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:49:30.808] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:49:40.555] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:49:40.555] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:49:40.555] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:49:48.790] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:49:48.790] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:49:48.790] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:49:48.790] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:49:48.790] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:50:00.809] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:50:00.809] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:50:00.809] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:50:00.809] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:50:00.809] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:50:18.796] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:50:18.796] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:50:18.796] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:50:18.796] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:50:18.796] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:50:30.810] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:50:30.810] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:50:30.810] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:50:30.810] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:50:30.810] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:50:40.555] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:50:40.555] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:50:40.555] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:50:48.800] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:50:48.800] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:50:48.800] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:50:48.800] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:50:48.800] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:51:00.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:51:00.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:51:00.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:51:18.805] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:51:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:51:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:51:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:51:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:51:30.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:51:30.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:51:30.811] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:51:40.556] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:51:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:51:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:51:48.810] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:51:48.810] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:51:48.810] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:51:48.810] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:51:48.810] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:52:00.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:52:00.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:52:00.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:52:18.815] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:52:18.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:52:18.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:52:18.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:52:18.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:52:30.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:52:30.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:52:30.812] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:52:40.556] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:52:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:52:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:52:48.818] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:52:48.818] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:52:48.818] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:52:48.818] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:52:48.819] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:53:00.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:53:00.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:53:00.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:53:00.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:53:00.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:53:18.821] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:53:18.821] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:53:18.822] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:53:18.822] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:53:18.822] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:53:30.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:53:30.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:53:30.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:53:30.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:53:30.813] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:53:40.556] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:53:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:53:40.556] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:53:48.825] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:53:48.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:53:48.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:53:48.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:53:48.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:54:00.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:54:00.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:54:00.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:54:18.829] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:54:18.829] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:54:18.829] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:54:18.829] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:54:18.830] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:54:30.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:54:30.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:54:30.814] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:54:38.017] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[05:54:38.017] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[05:54:39.962] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[05:54:40.557] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:54:40.557] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:54:40.557] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:54:48.834] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:54:48.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:54:48.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:54:48.834] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:54:48.835] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:55:00.815] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:55:00.815] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:55:00.815] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:55:18.836] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:55:18.836] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:55:18.836] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:55:18.836] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:55:18.836] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:55:30.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:55:30.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:55:30.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:55:40.558] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:55:40.558] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:55:40.558] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:55:48.840] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:55:48.840] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:55:48.840] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:55:48.840] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:55:48.840] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:56:00.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:56:00.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:56:00.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:56:00.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:56:00.816] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:56:18.843] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:56:18.843] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:56:18.843] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:56:18.843] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:56:18.844] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:56:30.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:56:30.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:56:30.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:56:30.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:56:30.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:56:40.558] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:56:40.558] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:56:40.558] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:56:48.848] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:56:48.848] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:56:48.848] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:56:48.848] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:56:48.848] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:57:00.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:57:00.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:57:00.817] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:57:18.851] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:57:18.851] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:57:18.851] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:57:18.851] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:57:18.851] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:57:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:57:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:57:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:57:40.559] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:57:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:57:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:57:48.855] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:57:48.855] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:57:48.856] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:57:48.856] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:57:48.856] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:58:00.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:58:00.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:58:00.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:58:18.859] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:58:18.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:58:18.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:58:18.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:58:18.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:58:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:58:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:58:30.818] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:58:40.559] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:58:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:58:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:58:48.862] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:58:48.863] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:58:48.863] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:58:48.863] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:58:48.863] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:59:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:59:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:59:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:59:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:59:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[05:59:18.867] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:59:18.867] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:59:18.867] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:59:18.867] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:59:18.867] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[05:59:30.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[05:59:30.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[05:59:30.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[05:59:30.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[05:59:30.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[05:59:40.559] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[05:59:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[05:59:40.559] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[05:59:48.871] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[05:59:48.871] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[05:59:48.872] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[05:59:48.872] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[05:59:48.872] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:00:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:00:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:00:00.819] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:00:18.875] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:00:18.875] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:00:18.875] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:00:18.875] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:00:18.875] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:00:30.820] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:00:30.820] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:00:30.820] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:00:40.560] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:00:40.560] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:00:40.560] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:00:48.879] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:00:48.879] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:00:48.879] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:00:48.879] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:00:48.879] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:01:00.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:01:00.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:01:00.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:01:18.884] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:01:18.884] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:01:18.884] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:01:18.884] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:01:18.884] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:01:30.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:01:30.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:01:30.821] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:01:40.561] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[06:01:40.561] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:01:40.562] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:01:48.887] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:01:48.887] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:01:48.887] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:01:48.887] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:01:48.887] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:02:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:02:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:02:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:02:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:02:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:02:18.892] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:02:18.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:02:18.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:02:18.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:02:18.892] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:02:30.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:02:30.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:02:30.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:02:30.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:02:30.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:02:40.562] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:02:40.562] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:02:40.562] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:02:48.895] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:02:48.895] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:02:48.895] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:02:48.895] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:02:48.896] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:03:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:03:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:03:00.822] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:03:18.899] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:03:18.899] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:03:18.899] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:03:18.899] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:03:18.899] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:03:30.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:03:30.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:03:30.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:03:40.562] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:03:40.562] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:03:40.562] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:03:48.904] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:03:48.904] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:03:48.904] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:03:48.904] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:03:48.904] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:04:00.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:04:00.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:04:00.823] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:04:18.906] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:04:18.906] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:04:18.906] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:04:18.906] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:04:18.906] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:04:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:04:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:04:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:04:38.018] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:04:38.018] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:04:40.563] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[06:04:40.563] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:04:40.563] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:04:48.910] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:04:48.910] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:04:48.911] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:04:48.911] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:04:48.911] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:05:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:05:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:05:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:05:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:05:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:05:18.914] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:05:18.914] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:05:18.914] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:05:18.914] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:05:18.914] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:05:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:05:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:05:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:05:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:05:30.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:05:40.563] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:05:40.563] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:05:40.563] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:05:48.917] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:05:48.917] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:05:48.917] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:05:48.917] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:05:48.917] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:06:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:06:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:06:00.824] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:06:18.921] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:06:18.921] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:06:18.921] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:06:18.921] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:06:18.922] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:06:30.825] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:06:30.825] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:06:30.825] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:06:40.564] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:06:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:06:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:06:48.926] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:06:48.926] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:06:48.927] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:06:48.927] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:06:48.927] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:07:00.826] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:07:00.826] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:07:00.826] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:07:18.930] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:07:18.930] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:07:18.930] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:07:18.930] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:07:18.930] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:07:30.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:07:30.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:07:30.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:07:40.564] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:07:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:07:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:07:48.935] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:07:48.935] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:07:48.935] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:07:48.935] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:07:48.935] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:08:00.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:08:00.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:08:00.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:08:00.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:08:00.827] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:08:18.940] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:08:18.940] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:08:18.940] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:08:18.940] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:08:18.940] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:08:30.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:08:30.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:08:30.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:08:30.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:08:30.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:08:40.564] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:08:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:08:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:08:48.943] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:08:48.943] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:08:48.943] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:08:48.943] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:08:48.943] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:09:00.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:09:00.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:09:00.828] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:09:18.948] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:09:18.948] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:09:18.948] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:09:18.948] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:09:18.948] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:09:30.829] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:09:30.829] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:09:30.829] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:09:39.962] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[06:09:40.564] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:09:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:09:40.564] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:09:48.952] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:09:48.952] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:09:48.952] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:09:48.952] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:09:48.952] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:10:00.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:10:00.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:10:00.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:10:18.956] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:10:18.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:10:18.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:10:18.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:10:18.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:10:30.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:10:30.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:10:30.830] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:10:40.565] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:10:40.565] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:10:40.565] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:10:48.960] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:10:48.960] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:10:48.960] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:10:48.960] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:10:48.960] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:11:00.831] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:11:00.831] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:11:00.831] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:11:00.831] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:11:00.831] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:11:18.965] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:11:18.965] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:11:18.965] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:11:18.965] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:11:18.965] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:11:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:11:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:11:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:11:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:11:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:11:40.565] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:11:40.565] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:11:40.565] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:11:48.968] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:11:48.968] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:11:48.968] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:11:48.968] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:11:48.968] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:12:00.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:12:00.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:12:00.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:12:18.975] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:12:18.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:12:18.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:12:18.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:12:18.975] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:12:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:12:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:12:30.832] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:12:40.566] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:12:40.566] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:12:40.566] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:12:48.978] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:12:48.978] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:12:48.978] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:12:48.978] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:12:48.978] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:13:00.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:13:00.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:13:00.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:13:18.982] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:13:18.982] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:13:18.982] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:13:18.982] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:13:18.982] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:13:30.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:13:30.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:13:30.833] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:13:40.567] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:13:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:13:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:13:48.985] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:13:48.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:13:48.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:13:48.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:13:48.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:14:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:14:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:14:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:14:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:14:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:14:18.988] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:14:18.988] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:14:18.988] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:14:18.988] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:14:18.988] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:14:30.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:14:30.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:14:30.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:14:30.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:14:30.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:14:38.020] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:14:38.020] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:14:40.567] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:14:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:14:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:14:48.993] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:14:48.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:14:48.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:14:48.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:14:48.993] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:15:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:15:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:15:00.834] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:15:18.996] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:15:18.996] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:15:18.997] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:15:18.997] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:15:18.997] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:15:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:15:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:15:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:15:40.567] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:15:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:15:40.567] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:15:49.000] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:15:49.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:15:49.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:15:49.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:15:49.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:16:00.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:16:00.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:16:00.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:16:19.003] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:16:19.003] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:16:19.004] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:16:19.004] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:16:19.004] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:16:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:16:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:16:30.835] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:16:40.568] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:16:40.568] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:16:40.568] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:16:49.007] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:16:49.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:16:49.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:16:49.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:16:49.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:17:00.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:17:00.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:17:00.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:17:00.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:17:00.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:17:19.012] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:17:19.012] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:17:19.013] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:17:19.013] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:17:19.013] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:17:30.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:17:30.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:17:30.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:17:30.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:17:30.836] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:17:40.568] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:17:40.568] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:17:40.568] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:17:49.016] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:17:49.016] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:17:49.016] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:17:49.016] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:17:49.016] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:18:00.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:18:00.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:18:00.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:18:19.020] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:18:19.020] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:18:19.020] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:18:19.020] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:18:19.020] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:18:30.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:18:30.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:18:30.837] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:18:40.569] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:18:40.569] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:18:40.569] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:18:49.022] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:18:49.022] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:18:49.022] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:18:49.022] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:18:49.022] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:19:00.838] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:19:00.838] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:19:00.838] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:19:19.027] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:19:19.027] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:19:19.028] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:19:19.028] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:19:19.028] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:19:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:19:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:19:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:19:40.569] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:19:40.569] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:19:40.569] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:19:49.030] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:19:49.030] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:19:49.030] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:19:49.030] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:19:49.030] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:20:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:20:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:20:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:20:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:20:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:20:19.033] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:20:19.033] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:20:19.033] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:20:19.033] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:20:19.033] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:20:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:20:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:20:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:20:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:20:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:20:40.570] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:20:40.570] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:20:40.570] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:20:49.036] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:20:49.036] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:20:49.036] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:20:49.036] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:20:49.036] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:21:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:21:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:21:00.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:21:19.039] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:21:19.039] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:21:19.039] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:21:19.039] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:21:19.039] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:21:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:21:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:21:30.839] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:21:40.571] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:21:40.571] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:21:40.571] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:21:49.044] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:21:49.044] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:21:49.044] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:21:49.044] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:21:49.044] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:22:00.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:22:00.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:22:00.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:22:19.048] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:22:19.048] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:22:19.048] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:22:19.048] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:22:19.048] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:22:30.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:22:30.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:22:30.840] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:22:40.571] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:22:40.571] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:22:40.571] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:22:49.051] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:22:49.052] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:22:49.052] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:22:49.052] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:22:49.052] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:23:00.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:23:00.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:23:00.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:23:00.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:23:00.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:23:19.054] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:23:19.054] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:23:19.054] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:23:19.054] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:23:19.054] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:23:30.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:23:30.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:23:30.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:23:30.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:23:30.841] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:23:40.572] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:23:40.572] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:23:40.572] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:23:49.057] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:23:49.057] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:23:49.058] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:23:49.058] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:23:49.058] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:24:00.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:24:00.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:24:00.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:24:19.060] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:24:19.060] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:24:19.061] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:24:19.061] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:24:19.061] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:24:30.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:24:30.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:24:30.842] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:24:38.021] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:24:38.021] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:24:39.963] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[06:24:40.572] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:24:40.572] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:24:40.572] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:24:49.064] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:24:49.064] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:24:49.064] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:24:49.064] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:24:49.064] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:25:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:25:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:25:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:25:19.068] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:25:19.068] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:25:19.068] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:25:19.068] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:25:19.068] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:25:30.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:25:30.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:25:30.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:25:40.573] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:25:40.573] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:25:40.573] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:25:49.072] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:25:49.073] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:25:49.073] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:25:49.073] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:25:49.073] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:26:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:26:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:26:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:26:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:26:00.843] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:26:19.076] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:26:19.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:26:19.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:26:19.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:26:19.076] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:26:30.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:26:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:26:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:26:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:26:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:26:40.574] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:26:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:26:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:26:49.080] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:26:49.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:26:49.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:26:49.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:26:49.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:27:00.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:27:00.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:27:00.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:27:19.085] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:27:19.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:27:19.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:27:19.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:27:19.085] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:27:30.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:27:30.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:27:30.844] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:27:40.574] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:27:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:27:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:27:49.089] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:27:49.089] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:27:49.089] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:27:49.089] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:27:49.089] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:28:00.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:28:00.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:28:00.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:28:19.093] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:28:19.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:28:19.094] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:28:19.094] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:28:19.094] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:28:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:28:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:28:30.845] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:28:40.574] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:28:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:28:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:28:49.098] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:28:49.098] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:28:49.098] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:28:49.098] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:28:49.098] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:29:00.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:29:00.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:29:00.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:29:00.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:29:00.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:29:19.102] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:29:19.102] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:29:19.102] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:29:19.102] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:29:19.102] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:29:30.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:29:30.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:29:30.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:29:30.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:29:30.846] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:29:40.574] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:29:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:29:40.574] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:29:49.105] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:29:49.105] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:29:49.106] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:29:49.106] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:29:49.106] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:30:00.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:30:00.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:30:00.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:30:19.110] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:30:19.110] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:30:19.110] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:30:19.110] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:30:19.110] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:30:30.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:30:30.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:30:30.847] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:30:40.576] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[06:30:40.576] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:30:40.576] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:30:49.115] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:30:49.115] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:30:49.115] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:30:49.115] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:30:49.115] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:31:00.848] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:31:00.848] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:31:00.848] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:31:19.118] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:31:19.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:31:19.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:31:19.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:31:19.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:31:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:31:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:31:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:31:40.576] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:31:40.576] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:31:40.576] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:31:49.121] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:31:49.121] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:31:49.121] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:31:49.121] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:31:49.121] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:32:00.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:32:00.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:32:00.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:32:00.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:32:00.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:32:19.124] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:32:19.124] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:32:19.124] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:32:19.125] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:32:19.125] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:32:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:32:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:32:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:32:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:32:30.849] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:32:40.577] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:32:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:32:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:32:49.130] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:32:49.130] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:32:49.130] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:32:49.130] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:32:49.130] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:33:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:33:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:33:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:33:19.134] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:33:19.134] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:33:19.135] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:33:19.135] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:33:19.135] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:33:30.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:33:30.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:33:30.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:33:40.577] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:33:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:33:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:33:49.138] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:33:49.138] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:33:49.138] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:33:49.138] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:33:49.138] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:34:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:34:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:34:00.850] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:34:19.142] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:34:19.142] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:34:19.143] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:34:19.143] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:34:19.143] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:34:30.851] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:34:30.851] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:34:30.851] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:34:38.023] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:34:38.023] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:34:40.577] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:34:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:34:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:34:49.146] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:34:49.146] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:34:49.146] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:34:49.146] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:34:49.146] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:35:00.852] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:35:00.852] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:35:00.852] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:35:00.852] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:35:00.852] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:35:19.151] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:35:19.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:35:19.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:35:19.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:35:19.151] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:35:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:35:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:35:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:35:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:35:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:35:40.577] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:35:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:35:40.577] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:35:49.154] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:35:49.154] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:35:49.154] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:35:49.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:35:49.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:36:00.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:36:00.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:36:00.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:36:19.156] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:36:19.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:36:19.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:36:19.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:36:19.156] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:36:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:36:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:36:30.853] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:36:40.578] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:36:40.578] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:36:40.578] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:36:49.160] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:36:49.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:36:49.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:36:49.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:36:49.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:37:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:37:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:37:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:37:19.162] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:37:19.162] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:37:19.162] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:37:19.162] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:37:19.162] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:37:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:37:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:37:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:37:40.579] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[06:37:40.579] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:37:40.579] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:37:49.166] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:37:49.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:37:49.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:37:49.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:37:49.166] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:38:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:38:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:38:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:38:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:38:00.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:38:19.170] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:38:19.170] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:38:19.170] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:38:19.170] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:38:19.170] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:38:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:38:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:38:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:38:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:38:30.854] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:38:40.579] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:38:40.579] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:38:40.579] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:38:49.174] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:38:49.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:38:49.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:38:49.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:38:49.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:39:00.855] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:39:00.855] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:39:00.855] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:39:19.176] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:39:19.176] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:39:19.176] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:39:19.176] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:39:19.176] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:39:30.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:39:30.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:39:30.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:39:39.963] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[06:39:40.580] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:39:40.580] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:39:40.580] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:39:49.181] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:39:49.181] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:39:49.181] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:39:49.181] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:39:49.181] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:40:00.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:40:00.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:40:00.856] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:40:19.185] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:40:19.186] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:40:19.186] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:40:19.186] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:40:19.186] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:40:30.857] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:40:30.857] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:40:30.857] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:40:40.581] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[06:40:40.581] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:40:40.581] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:40:49.189] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:40:49.189] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:40:49.189] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:40:49.189] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:40:49.189] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:41:00.858] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:41:00.858] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:41:00.858] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:41:00.858] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:41:00.858] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:41:19.194] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:41:19.194] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:41:19.194] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:41:19.194] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:41:19.194] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:41:30.859] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:41:30.859] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:41:30.859] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:41:30.859] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:41:30.859] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:41:40.582] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:41:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:41:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:41:49.197] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:41:49.197] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:41:49.197] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:41:49.197] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:41:49.197] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:42:00.860] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:42:00.860] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:42:00.860] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:42:19.202] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:42:19.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:42:19.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:42:19.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:42:19.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:42:30.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:42:30.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:42:30.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:42:40.582] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:42:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:42:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:42:49.206] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:42:49.206] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:42:49.206] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:42:49.206] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:42:49.206] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:43:00.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:43:00.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:43:00.861] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:43:19.209] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:43:19.209] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:43:19.209] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:43:19.209] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:43:19.209] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:43:30.862] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:43:30.862] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:43:30.862] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:43:40.582] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:43:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:43:40.582] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:43:49.212] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:43:49.213] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:43:49.213] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:43:49.213] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:43:49.213] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:44:00.863] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:44:00.863] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:44:00.863] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:44:00.863] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:44:00.863] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:44:19.215] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:44:19.216] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:44:19.216] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:44:19.216] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:44:19.216] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:44:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:44:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:44:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:44:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:44:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:44:38.024] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:44:38.026] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:44:40.583] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:44:40.583] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:44:40.583] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:44:49.220] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:44:49.220] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:44:49.220] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:44:49.220] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:44:49.220] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:45:00.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:45:00.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:45:00.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:45:19.223] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:45:19.223] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:45:19.223] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:45:19.223] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:45:19.223] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:45:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:45:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:45:30.864] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:45:40.583] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:45:40.583] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:45:40.583] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:45:49.226] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:45:49.226] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:45:49.226] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:45:49.226] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:45:49.226] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:46:00.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:46:00.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:46:00.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:46:19.230] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:46:19.230] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:46:19.230] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:46:19.230] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:46:19.230] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:46:30.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:46:30.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:46:30.865] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:46:40.584] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:46:40.584] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:46:40.584] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:46:49.235] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:46:49.235] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:46:49.235] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:46:49.235] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:46:49.235] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:47:00.866] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:47:00.866] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:47:00.866] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:47:00.866] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:47:00.866] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:47:19.238] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:47:19.238] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:47:19.238] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:47:19.238] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:47:19.238] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:47:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:47:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:47:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:47:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:47:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:47:40.584] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:47:40.584] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:47:40.584] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:47:49.243] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:47:49.243] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:47:49.243] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:47:49.243] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:47:49.243] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:48:00.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:48:00.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:48:00.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:48:19.249] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:48:19.249] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:48:19.250] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:48:19.250] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:48:19.250] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:48:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:48:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:48:30.867] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:48:40.585] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:48:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:48:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:48:49.254] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:48:49.254] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:48:49.254] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:48:49.254] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:48:49.254] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:49:00.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:49:00.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:49:00.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:49:19.257] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:49:19.257] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:49:19.257] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:49:19.257] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:49:19.257] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:49:30.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:49:30.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:49:30.868] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:49:40.585] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:49:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:49:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:49:49.260] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:49:49.260] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:49:49.260] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:49:49.260] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:49:49.260] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:50:00.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:50:00.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:50:00.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:50:00.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:50:00.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:50:19.264] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:50:19.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:50:19.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:50:19.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:50:19.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:50:30.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:50:30.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:50:30.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:50:30.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:50:30.869] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:50:40.585] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:50:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:50:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:50:49.268] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:50:49.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:50:49.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:50:49.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:50:49.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:51:00.870] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:51:00.870] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:51:00.870] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:51:19.273] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:51:19.273] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:51:19.273] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:51:19.273] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:51:19.273] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:51:30.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:51:30.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:51:30.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:51:40.585] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:51:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:51:40.585] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:51:49.278] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:51:49.278] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:51:49.279] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:51:49.279] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:51:49.279] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:52:00.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:52:00.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:52:00.871] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:52:19.282] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:52:19.282] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:52:19.282] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:52:19.282] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:52:19.282] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:52:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:52:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:52:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:52:40.586] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:52:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:52:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:52:49.285] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:52:49.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:52:49.285] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:52:49.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:52:49.286] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:53:00.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:53:00.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:53:00.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:53:00.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:53:00.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:53:19.289] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:53:19.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:53:19.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:53:19.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:53:19.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:53:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:53:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:53:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:53:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:53:30.872] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:53:40.586] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:53:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:53:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:53:49.293] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:53:49.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:53:49.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:53:49.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:53:49.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:54:00.873] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:54:00.873] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:54:00.873] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:54:19.298] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:54:19.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:54:19.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:54:19.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:54:19.298] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:54:30.874] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:54:30.874] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:54:30.874] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:54:38.026] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[06:54:38.026] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[06:54:39.964] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[06:54:40.586] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:54:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:54:40.586] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:54:49.302] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:54:49.302] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:54:49.303] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:54:49.303] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:54:49.303] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:55:00.874] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:55:00.874] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:55:00.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:55:19.306] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:55:19.306] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:55:19.306] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:55:19.306] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:55:19.306] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:55:30.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:55:30.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:55:30.875] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:55:40.587] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:55:40.587] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:55:40.587] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:55:49.310] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:55:49.310] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:55:49.310] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:55:49.310] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:55:49.310] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:56:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:56:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:56:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:56:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:56:00.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:56:19.313] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:56:19.313] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:56:19.313] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:56:19.313] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:56:19.314] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:56:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:56:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:56:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:56:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:56:30.876] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:56:40.587] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:56:40.587] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:56:40.587] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:56:49.316] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:56:49.316] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:56:49.317] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:56:49.317] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:56:49.317] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:57:00.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:57:00.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:57:00.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:57:19.320] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:57:19.320] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:57:19.320] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:57:19.320] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:57:19.320] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:57:30.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:57:30.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:57:30.877] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:57:40.588] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:57:40.588] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:57:40.588] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:57:49.323] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:57:49.323] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:57:49.324] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:57:49.324] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:57:49.324] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:58:00.878] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:58:00.878] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:58:00.878] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:58:19.328] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:58:19.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:58:19.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:58:19.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:58:19.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:58:30.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:58:30.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:58:30.879] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:58:40.588] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:58:40.588] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:58:40.588] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:58:49.334] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:58:49.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:58:49.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:58:49.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:58:49.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:59:00.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:59:00.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:59:00.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:59:00.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:59:00.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[06:59:19.336] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:59:19.336] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:59:19.336] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:59:19.336] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:59:19.336] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[06:59:30.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[06:59:30.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[06:59:30.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[06:59:30.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[06:59:30.880] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[06:59:40.589] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[06:59:40.589] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[06:59:40.589] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[06:59:49.339] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[06:59:49.339] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[06:59:49.339] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[06:59:49.339] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[06:59:49.339] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:00:00.881] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:00:00.881] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:00:00.881] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:00:19.343] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:00:19.343] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:00:19.343] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:00:19.343] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:00:19.343] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:00:30.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:00:30.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:00:30.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:00:40.590] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:00:40.590] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:00:40.590] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:00:49.346] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:00:49.346] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:00:49.346] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:00:49.346] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:00:49.347] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:01:00.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:01:00.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:01:00.882] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:01:19.351] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:01:19.351] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:01:19.351] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:01:19.351] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:01:19.351] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:01:30.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:01:30.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:01:30.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:01:40.590] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:01:40.590] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:01:40.590] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:01:49.355] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:01:49.355] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:01:49.355] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:01:49.355] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:01:49.355] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:02:00.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:02:00.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:02:00.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:02:00.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:02:00.883] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:02:19.358] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:02:19.358] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:02:19.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:02:19.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:02:19.359] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:02:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:02:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:02:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:02:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:02:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:02:40.591] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:02:40.591] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:02:40.591] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:02:49.361] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:02:49.361] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:02:49.361] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:02:49.361] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:02:49.361] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:03:00.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:03:00.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:03:00.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:03:19.363] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:03:19.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:03:19.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:03:19.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:03:19.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:03:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:03:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:03:30.884] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:03:40.591] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:03:40.591] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:03:40.591] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:03:49.366] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:03:49.366] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:03:49.366] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:03:49.366] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:03:49.366] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:04:00.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:04:00.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:04:00.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:04:19.369] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:04:19.369] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:04:19.369] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:04:19.369] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:04:19.369] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:04:30.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:04:30.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:04:30.885] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:04:38.028] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:04:38.028] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:04:40.592] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:04:40.592] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:04:40.592] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:04:49.375] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:04:49.375] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:04:49.375] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:04:49.375] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:04:49.375] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:05:00.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:05:00.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:05:00.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:05:00.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:05:00.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:05:19.379] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:05:19.379] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:05:19.379] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:05:19.379] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:05:19.379] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:05:30.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:05:30.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:05:30.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:05:30.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:05:30.886] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:05:40.592] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:05:40.592] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:05:40.592] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:05:49.384] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:05:49.384] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:05:49.384] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:05:49.384] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:05:49.384] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:06:00.887] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:06:00.887] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:06:00.887] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:06:19.389] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:06:19.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:06:19.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:06:19.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:06:19.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:06:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:06:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:06:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:06:40.593] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[07:06:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:06:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:06:49.393] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:06:49.393] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:06:49.393] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:06:49.393] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:06:49.393] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:07:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:07:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:07:00.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:07:19.397] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:07:19.397] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:07:19.397] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:07:19.397] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:07:19.397] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:07:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:07:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:07:30.888] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:07:40.593] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:07:40.593] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:07:40.593] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:07:49.401] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:07:49.401] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:07:49.401] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:07:49.401] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:07:49.401] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:08:00.889] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:08:00.889] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:08:00.889] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:08:00.889] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:08:00.889] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:08:19.404] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:08:19.404] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:08:19.405] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:08:19.405] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:08:19.405] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:08:30.891] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:08:30.891] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:08:30.891] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:08:30.891] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:08:30.891] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:08:40.594] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:08:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:08:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:08:49.408] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:08:49.408] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:08:49.408] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:08:49.408] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:08:49.408] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:09:00.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:09:00.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:09:00.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:09:19.412] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:09:19.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:09:19.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:09:19.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:09:19.412] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:09:30.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:09:30.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:09:30.892] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:09:39.964] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[07:09:40.594] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:09:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:09:40.594] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:09:49.416] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:09:49.416] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:09:49.417] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:09:49.417] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:09:49.417] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:10:00.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:10:00.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:10:00.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:10:19.420] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:10:19.420] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:10:19.421] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:10:19.421] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:10:19.421] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:10:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:10:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:10:30.893] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:10:40.595] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:10:40.595] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:10:40.595] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:10:49.424] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:10:49.424] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:10:49.424] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:10:49.424] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:10:49.424] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:11:00.894] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:11:00.894] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:11:00.894] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:11:00.894] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:11:00.894] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:11:19.427] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:11:19.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:11:19.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:11:19.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:11:19.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:11:30.895] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:11:30.895] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:11:30.895] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:11:30.895] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:11:30.895] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:11:40.595] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:11:40.595] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:11:40.595] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:11:49.433] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:11:49.433] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:11:49.433] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:11:49.433] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:11:49.433] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:12:00.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:12:00.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:12:00.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:12:19.436] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:12:19.436] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:12:19.436] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:12:19.436] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:12:19.436] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:12:30.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:12:30.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:12:30.896] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:12:40.596] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:12:40.596] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:12:40.596] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:12:49.441] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:12:49.441] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:12:49.441] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:12:49.441] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:12:49.441] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:13:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:13:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:13:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:13:19.445] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:13:19.445] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:13:19.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:13:19.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:13:19.446] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:13:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:13:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:13:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:13:40.596] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:13:40.596] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:13:40.596] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:13:49.449] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:13:49.449] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:13:49.449] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:13:49.449] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:13:49.449] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:14:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:14:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:14:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:14:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:14:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:14:19.452] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:14:19.452] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:14:19.453] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:14:19.453] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:14:19.453] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:14:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:14:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:14:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:14:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:14:30.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:14:38.029] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:14:38.029] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:14:40.597] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:14:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:14:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:14:49.457] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:14:49.457] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:14:49.457] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:14:49.457] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:14:49.457] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:15:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:15:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:15:00.897] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:15:19.461] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:15:19.461] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:15:19.461] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:15:19.461] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:15:19.461] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:15:30.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:15:30.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:15:30.898] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:15:40.597] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:15:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:15:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:15:49.464] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:15:49.464] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:15:49.464] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:15:49.465] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:15:49.465] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:16:00.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:16:00.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:16:00.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:16:19.470] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:16:19.470] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:16:19.470] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:16:19.470] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:16:19.470] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:16:30.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:16:30.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:16:30.899] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:16:40.597] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:16:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:16:40.597] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:16:49.473] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:16:49.473] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:16:49.473] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:16:49.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:16:49.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:17:00.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:17:00.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:17:00.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:17:00.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:17:00.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:17:19.476] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:17:19.476] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:17:19.477] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:17:19.477] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:17:19.477] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:17:30.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:17:30.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:17:30.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:17:30.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:17:30.900] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:17:40.598] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:17:40.598] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:17:40.598] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:17:49.481] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:17:49.481] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:17:49.481] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:17:49.481] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:17:49.481] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:18:00.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:18:00.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:18:00.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:18:19.483] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:18:19.484] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:18:19.484] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:18:19.484] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:18:19.484] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:18:30.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:18:30.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:18:30.901] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:18:40.599] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:18:40.599] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:18:40.599] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:18:49.487] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:18:49.489] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:18:49.489] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:18:49.489] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:18:49.489] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:19:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:19:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:19:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:19:19.494] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:19:19.495] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:19:19.495] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:19:19.495] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:19:19.495] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:19:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:19:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:19:30.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:19:40.599] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:19:40.599] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:19:40.599] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:19:49.498] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:19:49.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:19:49.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:19:49.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:19:49.498] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:20:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:20:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:20:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:20:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:20:00.904] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:20:19.502] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:20:19.502] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:20:19.502] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:20:19.502] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:20:19.502] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:20:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:20:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:20:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:20:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:20:30.905] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:20:40.600] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:20:40.600] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:20:40.600] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:20:49.510] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:20:49.510] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:20:49.510] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:20:49.510] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:20:49.510] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:21:00.906] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:21:00.906] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:21:00.906] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:21:19.514] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:21:19.514] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:21:19.514] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:21:19.514] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:21:19.514] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:21:30.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:21:30.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:21:30.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:21:40.601] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:21:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:21:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:21:49.517] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:21:49.517] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:21:49.517] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:21:49.517] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:21:49.517] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:22:00.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:22:00.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:22:00.907] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:22:19.522] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:22:19.522] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:22:19.522] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:22:19.522] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:22:19.522] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:22:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:22:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:22:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:22:40.601] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:22:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:22:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:22:49.525] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:22:49.525] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:22:49.526] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:22:49.526] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:22:49.526] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:23:00.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:23:00.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:23:00.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:23:00.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:23:00.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:23:19.529] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:23:19.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:23:19.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:23:19.529] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:23:19.530] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:23:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:23:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:23:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:23:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:23:30.908] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:23:40.601] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:23:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:23:40.601] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:23:49.532] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:23:49.533] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:23:49.533] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:23:49.533] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:23:49.533] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:24:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:24:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:24:00.909] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:24:19.535] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:24:19.535] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:24:19.535] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:24:19.536] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:24:19.536] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:24:30.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:24:30.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:24:30.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:24:38.030] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:24:38.030] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:24:39.965] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[07:24:40.602] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:24:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:24:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:24:49.538] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:24:49.538] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:24:49.538] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:24:49.538] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:24:49.538] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:25:00.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:25:00.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:25:00.910] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:25:19.543] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:25:19.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:25:19.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:25:19.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:25:19.543] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:25:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:25:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:25:30.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:25:40.602] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:25:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:25:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:25:49.545] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:25:49.545] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:25:49.545] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:25:49.545] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:25:49.545] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:26:00.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:26:00.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:26:00.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:26:00.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:26:00.911] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:26:19.550] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:26:19.550] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:26:19.550] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:26:19.550] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:26:19.550] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:26:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:26:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:26:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:26:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:26:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:26:40.602] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:26:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:26:40.602] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:26:49.553] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:26:49.553] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:26:49.553] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:26:49.553] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:26:49.553] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:27:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:27:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:27:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:27:19.559] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:27:19.559] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:27:19.559] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:27:19.559] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:27:19.559] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:27:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:27:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:27:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:27:40.603] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:27:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:27:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:27:49.562] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:27:49.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:27:49.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:27:49.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:27:49.562] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:28:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:28:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:28:00.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:28:19.565] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:28:19.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:28:19.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:28:19.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:28:19.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:28:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:28:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:28:30.912] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:28:40.603] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:28:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:28:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:28:49.569] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:28:49.569] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:28:49.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:28:49.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:28:49.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:29:00.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:29:00.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:29:00.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:29:00.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:29:00.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:29:19.574] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:29:19.574] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:29:19.575] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:29:19.575] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:29:19.575] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:29:30.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:29:30.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:29:30.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:29:30.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:29:30.913] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:29:40.603] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:29:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:29:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:29:49.578] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:29:49.578] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:29:49.578] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:29:49.578] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:29:49.578] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:30:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:30:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:30:00.914] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:30:19.581] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:30:19.581] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:30:19.581] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:30:19.581] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:30:19.581] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:30:30.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:30:30.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:30:30.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:30:40.603] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:30:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:30:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:30:49.585] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:30:49.585] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:30:49.585] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:30:49.585] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:30:49.585] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:31:00.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:31:00.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:31:00.915] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:31:19.589] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:31:19.589] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:31:19.589] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:31:19.589] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:31:19.589] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:31:30.916] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:31:30.916] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:31:30.916] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:31:40.603] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:31:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:31:40.603] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:31:49.593] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:31:49.593] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:31:49.593] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:31:49.593] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:31:49.593] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:32:00.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:32:00.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:32:00.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:32:00.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:32:00.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:32:19.596] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:32:19.596] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:32:19.596] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:32:19.596] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:32:19.596] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:32:30.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:32:30.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:32:30.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:32:30.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:32:30.917] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:32:40.604] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:32:40.604] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:32:40.604] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:32:49.601] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:32:49.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:32:49.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:32:49.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:32:49.601] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:33:00.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:33:00.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:33:00.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:33:19.604] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:33:19.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:33:19.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:33:19.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:33:19.604] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:33:30.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:33:30.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:33:30.918] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:33:40.605] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:33:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:33:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:33:49.609] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:33:49.609] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:33:49.609] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:33:49.609] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:33:49.609] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:34:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:34:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:34:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:34:19.612] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:34:19.612] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:34:19.612] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:34:19.612] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:34:19.612] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:34:30.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:34:30.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:34:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:34:38.031] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:34:38.031] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:34:40.605] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:34:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:34:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:34:49.616] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:34:49.616] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:34:49.616] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:34:49.616] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:34:49.616] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:35:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:35:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:35:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:35:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:35:00.919] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:35:19.619] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:35:19.619] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:35:19.619] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:35:19.619] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:35:19.619] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:35:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:35:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:35:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:35:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:35:30.920] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:35:40.605] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:35:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:35:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:35:49.623] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:35:49.623] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:35:49.624] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:35:49.624] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:35:49.624] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:36:00.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:36:00.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:36:00.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:36:19.628] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:36:19.629] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:36:19.629] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:36:19.629] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:36:19.629] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:36:30.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:36:30.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:36:30.921] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:36:40.605] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:36:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:36:40.605] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:36:49.632] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:36:49.632] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:36:49.632] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:36:49.632] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:36:49.632] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:37:00.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:37:00.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:37:00.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:37:19.636] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:37:19.637] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:37:19.637] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:37:19.637] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:37:19.637] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:37:30.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:37:30.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:37:30.922] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:37:40.606] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:37:40.606] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:37:40.606] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:37:49.642] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:37:49.642] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:37:49.642] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:37:49.642] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:37:49.643] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:38:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:38:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:38:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:38:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:38:00.923] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:38:19.646] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:38:19.646] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:38:19.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:38:19.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:38:19.647] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:38:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:38:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:38:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:38:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:38:30.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:38:40.606] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:38:40.606] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:38:40.606] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:38:49.651] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:38:49.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:38:49.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:38:49.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:38:49.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:39:00.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:39:00.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:39:00.924] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:39:19.657] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:39:19.657] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:39:19.657] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:39:19.657] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:39:19.657] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:39:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:39:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:39:30.925] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:39:39.966] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[07:39:40.607] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:39:40.607] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:39:40.607] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:39:49.661] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:39:49.661] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:39:49.662] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:39:49.662] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:39:49.662] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:40:00.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:40:00.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:40:00.926] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:40:19.665] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:40:19.665] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:40:19.665] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:40:19.665] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:40:19.665] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:40:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:40:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:40:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:40:40.607] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:40:40.607] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:40:40.607] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:40:49.670] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:40:49.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:40:49.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:40:49.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:40:49.670] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:41:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:41:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:41:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:41:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:41:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:41:19.675] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:41:19.675] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:41:19.675] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:41:19.675] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:41:19.675] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:41:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:41:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:41:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:41:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:41:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:41:40.608] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:41:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:41:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:41:49.678] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:41:49.678] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:41:49.678] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:41:49.678] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:41:49.678] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:42:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:42:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:42:00.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:42:19.682] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:42:19.682] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:42:19.682] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:42:19.682] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:42:19.682] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:42:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:42:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:42:30.927] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:42:40.608] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:42:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:42:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:42:49.687] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:42:49.688] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:42:49.688] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:42:49.688] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:42:49.688] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:43:00.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:43:00.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:43:00.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:43:19.692] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:43:19.692] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:43:19.692] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:43:19.692] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:43:19.693] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:43:30.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:43:30.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:43:30.928] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:43:40.608] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:43:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:43:40.608] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:43:49.696] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:43:49.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:43:49.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:43:49.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:43:49.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:44:00.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:44:00.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:44:00.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:44:00.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:44:00.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:44:19.700] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:44:19.700] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:44:19.700] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:44:19.700] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:44:19.700] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:44:30.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:44:30.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:44:30.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:44:30.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:44:30.929] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:44:38.033] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:44:38.034] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:44:40.609] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:44:40.609] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:44:40.609] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:44:49.702] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:44:49.702] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:44:49.702] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:44:49.702] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:44:49.702] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:45:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:45:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:45:00.930] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:45:19.706] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:45:19.706] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:45:19.706] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:45:19.706] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:45:19.706] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:45:30.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:45:30.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:45:30.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:45:40.609] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:45:40.609] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:45:40.609] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:45:49.712] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:45:49.712] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:45:49.712] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:45:49.712] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:45:49.712] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:46:00.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:46:00.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:46:00.931] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:46:19.716] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:46:19.716] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:46:19.716] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:46:19.716] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:46:19.717] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:46:30.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:46:30.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:46:30.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:46:40.610] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:46:40.610] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:46:40.610] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:46:49.720] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:46:49.720] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:46:49.721] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:46:49.721] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:46:49.721] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:47:00.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:47:00.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:47:00.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:47:00.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:47:00.932] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:47:19.725] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:47:19.725] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:47:19.725] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:47:19.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:47:19.726] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:47:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:47:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:47:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:47:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:47:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:47:40.611] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:47:40.611] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:47:40.611] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:47:49.730] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:47:49.730] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:47:49.730] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:47:49.730] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:47:49.730] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:48:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:48:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:48:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:48:19.735] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:48:19.735] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:48:19.736] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:48:19.736] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:48:19.736] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:48:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:48:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:48:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:48:40.612] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:48:40.612] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:48:40.612] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:48:49.740] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:48:49.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:48:49.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:48:49.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:48:49.740] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:49:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:49:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:49:00.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:49:19.743] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:49:19.743] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:49:19.743] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:49:19.744] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:49:19.744] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:49:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:49:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:49:30.933] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:49:40.612] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:49:40.612] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:49:40.612] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:49:49.748] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:49:49.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:49:49.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:49:49.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:49:49.748] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:50:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:50:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:50:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:50:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:50:00.935] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:50:19.752] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:50:19.752] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:50:19.753] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:50:19.753] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:50:19.753] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:50:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:50:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:50:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:50:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:50:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:50:40.613] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:50:40.613] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:50:40.613] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:50:49.755] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:50:49.755] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:50:49.755] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:50:49.755] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:50:49.755] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:51:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:51:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:51:00.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:51:19.759] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:51:19.759] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:51:19.760] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:51:19.760] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:51:19.760] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:51:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:51:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:51:30.934] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:51:40.613] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:51:40.613] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:51:40.613] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:51:49.762] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:51:49.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:51:49.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:51:49.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:51:49.762] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:52:00.935] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:52:00.935] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:52:00.935] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:52:19.766] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:52:19.766] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:52:19.766] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:52:19.766] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:52:19.766] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:52:30.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:52:30.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:52:30.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:52:40.614] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:52:40.614] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:52:40.614] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:52:49.768] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:52:49.769] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:52:49.769] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:52:49.769] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:52:49.769] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:53:00.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:53:00.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:53:00.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:53:00.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:53:00.936] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:53:19.773] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:53:19.773] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:53:19.774] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:53:19.774] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:53:19.774] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:53:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:53:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:53:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:53:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:53:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:53:40.614] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:53:40.614] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:53:40.614] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:53:49.779] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:53:49.779] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:53:49.779] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:53:49.779] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:53:49.779] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:54:00.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:54:00.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:54:00.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:54:19.783] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:54:19.783] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:54:19.783] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:54:19.783] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:54:19.783] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:54:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:54:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:54:30.937] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:54:38.034] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[07:54:38.034] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[07:54:39.966] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[07:54:40.615] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:54:40.615] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:54:40.615] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:54:49.785] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:54:49.785] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:54:49.786] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:54:49.786] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:54:49.786] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:55:00.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:55:00.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:55:00.938] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:55:19.790] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:55:19.790] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:55:19.790] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:55:19.790] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:55:19.790] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:55:30.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:55:30.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:55:30.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:55:40.616] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:55:40.616] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:55:40.616] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:55:49.794] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:55:49.794] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:55:49.794] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:55:49.794] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:55:49.794] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:56:00.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:56:00.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:56:00.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:56:00.939] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:56:00.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:56:19.800] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:56:19.800] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:56:19.800] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:56:19.800] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:56:19.800] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:56:30.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:56:30.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:56:30.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:56:30.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:56:30.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:56:40.616] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:56:40.616] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:56:40.616] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:56:49.803] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:56:49.803] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:56:49.803] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:56:49.803] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:56:49.803] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:57:00.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:57:00.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:57:00.940] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:57:19.808] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:57:19.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:57:19.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:57:19.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:57:19.808] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:57:30.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:57:30.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:57:30.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:57:40.617] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:57:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:57:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:57:49.810] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:57:49.810] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:57:49.810] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:57:49.811] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:57:49.811] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:58:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:58:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:58:00.941] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:58:19.814] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:58:19.814] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:58:19.814] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:58:19.815] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:58:19.815] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:58:30.942] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:58:30.942] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:58:30.942] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:58:40.617] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:58:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:58:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:58:49.817] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:58:49.817] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:58:49.817] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:58:49.818] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:58:49.818] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:59:00.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:59:00.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:59:00.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:59:00.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:59:00.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[07:59:19.820] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:59:19.820] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:59:19.820] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:59:19.820] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:59:19.820] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[07:59:30.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[07:59:30.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[07:59:30.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[07:59:30.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[07:59:30.943] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[07:59:40.617] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[07:59:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[07:59:40.617] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[07:59:49.824] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[07:59:49.824] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[07:59:49.824] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[07:59:49.824] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[07:59:49.824] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:00:00.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:00:00.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:00:00.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:00:19.828] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:00:19.828] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:00:19.828] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:00:19.828] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:00:19.828] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:00:30.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:00:30.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:00:30.944] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:00:40.618] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:00:40.618] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:00:40.618] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:00:49.831] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:00:49.832] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:00:49.832] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:00:49.832] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:00:49.832] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:01:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:01:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:01:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:01:19.835] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:01:19.835] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:01:19.835] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:01:19.835] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:01:19.835] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:01:30.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:01:30.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:01:30.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:01:40.619] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:01:40.619] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:01:40.619] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:01:49.839] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:01:49.839] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:01:49.839] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:01:49.839] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:01:49.839] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:02:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:02:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:02:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:02:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:02:00.945] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:02:19.842] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:02:19.842] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:02:19.842] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:02:19.842] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:02:19.842] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:02:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:02:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:02:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:02:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:02:30.946] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:02:40.619] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:02:40.619] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:02:40.619] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:02:49.847] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:02:49.847] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:02:49.847] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:02:49.847] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:02:49.847] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:03:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:03:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:03:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:03:19.852] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:03:19.852] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:03:19.852] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:03:19.852] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:03:19.852] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:03:30.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:03:30.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:03:30.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:03:40.620] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:03:40.620] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:03:40.620] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:03:49.855] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:03:49.855] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:03:49.855] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:03:49.855] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:03:49.855] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:04:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:04:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:04:00.947] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:04:19.859] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:04:19.859] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:04:19.859] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:04:19.859] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:04:19.859] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:04:30.948] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:04:30.948] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:04:30.948] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:04:38.036] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:04:38.036] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:04:40.621] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:04:40.621] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:04:40.621] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:04:49.864] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:04:49.864] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:04:49.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:04:49.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:04:49.865] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:05:00.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:05:00.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:05:00.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:05:00.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:05:00.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:05:19.870] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:05:19.870] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:05:19.870] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:05:19.870] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:05:19.870] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:05:30.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:05:30.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:05:30.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:05:30.949] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:05:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:05:40.621] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:05:40.621] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:05:40.621] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:05:49.874] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:05:49.874] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:05:49.874] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:05:49.874] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:05:49.874] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:06:00.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:06:00.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:06:00.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:06:19.876] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:06:19.877] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:06:19.877] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:06:19.877] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:06:19.877] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:06:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:06:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:06:30.950] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:06:40.622] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:06:40.622] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:06:40.622] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:06:49.880] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:06:49.880] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:06:49.880] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:06:49.880] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:06:49.880] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:07:00.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:07:00.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:07:00.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:07:19.883] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:07:19.884] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:07:19.884] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:07:19.884] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:07:19.884] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:07:30.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:07:30.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:07:30.951] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:07:40.622] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:07:40.622] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:07:40.622] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:07:49.886] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:07:49.886] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:07:49.886] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:07:49.886] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:07:49.886] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:08:00.952] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:08:00.952] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:08:00.952] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:08:00.952] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:08:00.952] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:08:19.892] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:08:19.892] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:08:19.893] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:08:19.893] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:08:19.893] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:08:30.953] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:08:30.953] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:08:30.953] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:08:30.953] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:08:30.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:08:40.623] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:08:40.623] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:08:40.623] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:08:49.895] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:08:49.895] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:08:49.895] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:08:49.895] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:08:49.895] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:09:00.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:09:00.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:09:00.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:09:19.899] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:09:19.899] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:09:19.899] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:09:19.899] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:09:19.899] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:09:30.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:09:30.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:09:30.954] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:09:39.967] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[08:09:40.624] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:09:40.624] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:09:40.624] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:09:49.902] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:09:49.902] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:09:49.903] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:09:49.903] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:09:49.903] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:10:00.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:10:00.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:10:00.955] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:10:19.905] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:10:19.906] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:10:19.906] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:10:19.906] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:10:19.906] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:10:30.956] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:10:30.956] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:10:30.956] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:10:40.625] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[08:10:40.625] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:10:40.625] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:10:49.908] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:10:49.908] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:10:49.908] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:10:49.909] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:10:49.909] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:11:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:11:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:11:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:11:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:11:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:11:19.914] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:11:19.914] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:11:19.914] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:11:19.914] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:11:19.914] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:11:30.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:11:30.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:11:30.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:11:30.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:11:30.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:11:40.627] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[08:11:40.627] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:11:40.627] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:11:49.919] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:11:49.919] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:11:49.919] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:11:49.920] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:11:49.920] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:12:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:12:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:12:00.957] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:12:19.923] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:12:19.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:12:19.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:12:19.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:12:19.923] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:12:30.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:12:30.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:12:30.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:12:40.627] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:12:40.627] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:12:40.627] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:12:49.927] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:12:49.927] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:12:49.927] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:12:49.927] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:12:49.927] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:13:00.958] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:13:19.932] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:13:19.932] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:13:19.932] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:13:19.932] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:13:19.932] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:13:30.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:13:30.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:13:30.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:13:40.628] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:13:40.628] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:13:40.628] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:13:49.935] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:13:49.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:13:49.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:13:49.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:13:49.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:14:00.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:14:00.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:14:00.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:14:00.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:14:00.959] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:14:19.940] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:14:19.940] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:14:19.940] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:14:19.940] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:14:19.940] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:14:30.960] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:14:30.960] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:14:30.960] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:14:30.960] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:14:30.960] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:14:38.037] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:14:38.037] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:14:40.628] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:14:40.628] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:14:40.628] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:14:49.945] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:14:49.945] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:14:49.945] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:14:49.945] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:14:49.945] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:15:00.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:15:00.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:15:00.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:15:19.949] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:15:19.949] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:15:19.949] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:15:19.949] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:15:19.949] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:15:30.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:15:30.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:15:30.961] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:15:40.629] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:15:40.629] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:15:40.629] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:15:49.952] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:15:49.952] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:15:49.952] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:15:49.952] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:15:49.952] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:16:00.962] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:16:00.962] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:16:00.962] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:16:19.957] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:16:19.957] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:16:19.958] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:16:19.958] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:16:19.958] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:16:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:16:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:16:30.963] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:16:40.629] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:16:40.629] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:16:40.629] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:16:49.959] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:16:49.959] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:16:49.960] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:16:49.960] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:16:49.960] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:17:00.964] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:17:00.964] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:17:00.964] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:17:00.964] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:17:00.964] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:17:19.962] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:17:19.962] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:17:19.962] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:17:19.962] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:17:19.962] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:17:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:17:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:17:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:17:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:17:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:17:40.630] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:17:40.630] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:17:40.630] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:17:49.969] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:17:49.969] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:17:49.969] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:17:49.969] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:17:49.969] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:18:00.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:18:00.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:18:00.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:18:19.973] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:18:19.973] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:18:19.973] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:18:19.973] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:18:19.973] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:18:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:18:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:18:30.965] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:18:40.630] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:18:40.630] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:18:40.630] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:18:49.976] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:18:49.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:18:49.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:18:49.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:18:49.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:19:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:19:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:19:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:19:19.980] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:19:19.981] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:19:19.981] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:19:19.981] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:19:19.981] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:19:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:19:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:19:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:19:40.631] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:19:40.631] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:19:40.631] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:19:49.984] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:19:49.984] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:19:49.984] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:19:49.984] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:19:49.984] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:20:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:20:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:20:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:20:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:20:00.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:20:19.986] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:20:19.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:20:19.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:20:19.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:20:19.986] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:20:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:20:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:20:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:20:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:20:30.966] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:20:40.632] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:20:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:20:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:20:49.991] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:20:49.991] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:20:49.991] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:20:49.991] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:20:49.991] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:21:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:21:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:21:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:21:19.996] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:21:19.996] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:21:19.996] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:21:19.996] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:21:19.996] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:21:30.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:21:30.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:21:30.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:21:40.632] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:21:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:21:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:21:50.000] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:21:50.000] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:21:50.000] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:21:50.000] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:21:50.000] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:22:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:22:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:22:00.967] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:22:20.003] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:22:20.003] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:22:20.003] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:22:20.003] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:22:20.003] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:22:30.968] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:22:30.968] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:22:30.968] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:22:40.632] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:22:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:22:40.632] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:22:50.007] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:22:50.007] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:22:50.008] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:22:50.008] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:22:50.008] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:23:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:23:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:23:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:23:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:23:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:23:20.010] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:23:20.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:23:20.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:23:20.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:23:20.010] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:23:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:23:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:23:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:23:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:23:30.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:23:40.633] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:23:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:23:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:23:50.015] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:23:50.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:23:50.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:23:50.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:23:50.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:24:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:24:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:24:00.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:24:20.019] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:24:20.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:24:20.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:24:20.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:24:20.019] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:24:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:24:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:24:30.969] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:24:38.038] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:24:38.038] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:24:39.967] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[08:24:40.633] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:24:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:24:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:24:50.022] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:24:50.022] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:24:50.022] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:24:50.022] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:24:50.022] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:25:00.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:25:00.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:25:00.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:25:20.026] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:25:20.026] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:25:20.026] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:25:20.026] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:25:20.027] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:25:30.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:25:30.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:25:30.970] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:25:40.633] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:25:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:25:40.633] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:25:50.031] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:25:50.031] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:25:50.032] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:25:50.032] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:25:50.032] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:26:00.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:26:00.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:26:00.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:26:00.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:26:00.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:26:20.034] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:26:20.034] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:26:20.034] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:26:20.034] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:26:20.034] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:26:30.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:26:30.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:26:30.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:26:30.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:26:30.971] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:26:40.634] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:26:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:26:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:26:50.039] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:26:50.039] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:26:50.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:26:50.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:26:50.040] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:27:00.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:27:00.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:27:00.972] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:27:20.043] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:27:20.043] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:27:20.043] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:27:20.043] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:27:20.043] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:27:30.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:27:30.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:27:30.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:27:40.634] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:27:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:27:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:27:50.045] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:27:50.045] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:27:50.045] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:27:50.045] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:27:50.045] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:28:00.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:28:00.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:28:00.973] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:28:20.050] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:28:20.050] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:28:20.050] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:28:20.050] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:28:20.050] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:28:30.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:28:30.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:28:30.974] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:28:40.634] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:28:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:28:40.634] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:28:50.054] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:28:50.055] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:28:50.055] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:28:50.055] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:28:50.055] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:29:00.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:29:00.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:29:00.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:29:00.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:29:00.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:29:20.059] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:29:20.059] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:29:20.059] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:29:20.059] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:29:20.059] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:29:30.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:29:30.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:29:30.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:29:30.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:29:30.975] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:29:40.635] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:29:40.635] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:29:40.635] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:29:50.062] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:29:50.063] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:29:50.063] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:29:50.063] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:29:50.063] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:30:00.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:30:00.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:30:00.976] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:30:20.067] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:30:20.067] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:30:20.067] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:30:20.067] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:30:20.067] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:30:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:30:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:30:30.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:30:40.635] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:30:40.635] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:30:40.635] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:30:50.071] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:30:50.071] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:30:50.071] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:30:50.071] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:30:50.071] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:31:00.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:31:00.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:31:00.977] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:31:20.074] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:31:20.074] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:31:20.075] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:31:20.075] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:31:20.075] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:31:30.978] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:31:30.978] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:31:30.978] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:31:40.636] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:31:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:31:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:31:50.080] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:31:50.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:31:50.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:31:50.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:31:50.080] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:32:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:32:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:32:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:32:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:32:00.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:32:20.084] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:32:20.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:32:20.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:32:20.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:32:20.084] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:32:30.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:32:30.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:32:30.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:32:30.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:32:30.979] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:32:40.636] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:32:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:32:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:32:50.087] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:32:50.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:32:50.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:32:50.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:32:50.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:33:00.980] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:33:00.980] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:33:00.980] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:33:20.091] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:33:20.091] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:33:20.091] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:33:20.091] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:33:20.091] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:33:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:33:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:33:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:33:40.636] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:33:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:33:40.636] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:33:50.094] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:33:50.094] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:33:50.094] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:33:50.094] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:33:50.094] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:34:00.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:34:00.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:34:00.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:34:20.098] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:34:20.098] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:34:20.098] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:34:20.098] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:34:20.098] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:34:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:34:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:34:30.981] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:34:38.040] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:34:38.040] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:34:40.637] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:34:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:34:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:34:50.104] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:34:50.104] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:34:50.104] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:34:50.104] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:34:50.104] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:35:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:35:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:35:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:35:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:35:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:35:20.109] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:35:20.109] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:35:20.109] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:35:20.109] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:35:20.109] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:35:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:35:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:35:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:35:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:35:30.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:35:40.637] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:35:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:35:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:35:50.112] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:35:50.112] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:35:50.113] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:35:50.113] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:35:50.113] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:36:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:36:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:36:00.982] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:36:20.117] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:36:20.117] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:36:20.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:36:20.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:36:20.118] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:36:30.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:36:30.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:36:30.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:36:40.637] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:36:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:36:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:36:50.119] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:36:50.119] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:36:50.119] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:36:50.119] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:36:50.119] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:37:00.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:37:00.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:37:00.983] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:37:20.123] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:37:20.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:37:20.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:37:20.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:37:20.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:37:30.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:37:30.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:37:30.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:37:40.637] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:37:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:37:40.637] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:37:50.126] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:37:50.126] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:37:50.126] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:37:50.126] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:37:50.127] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:38:00.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:38:00.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:38:00.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:38:00.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:38:00.984] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:38:20.130] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:38:20.130] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:38:20.131] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:38:20.131] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:38:20.131] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:38:30.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:38:30.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:38:30.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:38:30.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:38:30.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:38:40.638] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:38:40.638] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:38:40.638] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:38:50.134] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:38:50.134] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:38:50.134] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:38:50.135] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:38:50.135] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:39:00.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:39:00.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:39:00.985] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:39:20.139] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:39:20.139] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:39:20.140] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:39:20.140] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:39:20.140] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:39:30.986] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:39:30.986] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:39:30.986] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:39:39.967] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[08:39:40.638] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:39:40.638] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:39:40.638] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:39:50.143] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:39:50.143] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:39:50.143] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:39:50.143] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:39:50.143] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:40:00.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:40:00.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:40:00.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:40:20.146] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:40:20.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:40:20.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:40:20.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:40:20.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:40:30.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:40:30.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:40:30.987] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:40:40.639] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:40:40.639] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:40:40.639] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:40:50.149] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:40:50.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:40:50.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:40:50.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:40:50.150] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:41:00.988] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:41:00.988] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:41:00.988] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:41:00.988] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:41:00.988] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:41:20.153] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:41:20.154] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:41:20.154] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:41:20.154] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:41:20.154] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:41:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:41:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:41:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:41:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:41:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:41:40.639] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:41:40.639] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:41:40.639] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:41:50.159] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:41:50.159] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:41:50.159] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:41:50.159] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:41:50.159] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:42:00.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:42:00.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:42:00.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:42:20.163] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:42:20.163] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:42:20.163] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:42:20.164] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:42:20.164] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:42:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:42:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:42:30.989] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:42:40.640] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:42:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:42:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:42:50.167] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:42:50.167] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:42:50.167] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:42:50.167] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:42:50.167] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:43:00.990] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:43:00.990] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:43:00.990] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:43:20.170] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:43:20.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:43:20.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:43:20.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:43:20.171] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:43:30.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:43:30.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:43:30.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:43:40.640] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:43:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:43:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:43:50.174] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:43:50.174] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:43:50.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:43:50.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:43:50.175] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:44:00.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:44:00.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:44:00.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:44:00.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:44:00.991] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:44:20.178] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:44:20.178] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:44:20.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:44:20.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:44:20.179] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:44:30.992] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:44:30.992] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:44:30.992] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:44:30.992] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:44:30.992] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:44:38.041] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:44:38.041] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:44:40.640] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:44:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:44:40.640] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:44:50.182] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:44:50.183] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:44:50.183] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:44:50.183] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:44:50.183] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:45:00.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:45:00.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:45:00.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:45:20.187] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:45:20.187] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:45:20.187] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:45:20.187] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:45:20.187] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:45:30.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:45:30.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:45:30.993] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:45:40.641] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[08:45:40.641] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:45:40.641] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:45:50.191] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:45:50.192] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:45:50.192] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:45:50.192] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:45:50.192] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:46:00.994] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:46:00.994] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:46:00.994] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:46:20.195] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:46:20.195] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:46:20.195] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:46:20.195] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:46:20.195] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:46:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:46:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:46:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:46:40.642] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:46:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:46:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:46:50.198] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:46:50.198] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:46:50.198] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:46:50.198] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:46:50.198] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:47:00.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:47:00.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:47:00.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:47:00.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:47:00.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:47:20.203] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:47:20.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:47:20.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:47:20.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:47:20.203] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:47:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:47:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:47:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:47:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:47:30.995] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:47:40.642] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:47:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:47:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:47:50.207] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:47:50.207] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:47:50.207] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:47:50.208] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:47:50.208] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:48:00.996] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:48:00.996] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:48:00.996] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:48:20.211] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:48:20.211] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:48:20.211] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:48:20.211] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:48:20.211] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:48:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:48:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:48:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:48:40.642] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:48:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:48:40.642] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:48:50.214] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:48:50.214] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:48:50.214] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:48:50.214] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:48:50.214] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:49:00.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:49:00.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:49:00.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:49:20.219] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:49:20.219] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:49:20.219] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:49:20.219] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:49:20.219] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:49:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:49:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:49:30.997] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:49:40.643] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:49:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:49:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:49:50.221] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:49:50.221] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:49:50.221] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:49:50.221] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:49:50.221] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:50:00.998] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:50:00.998] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:50:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:50:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:50:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:50:20.226] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:50:20.226] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:50:20.226] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:50:20.226] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:50:20.226] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:50:30.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:50:30.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:50:30.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:50:30.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:50:30.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:50:40.643] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:50:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:50:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:50:50.230] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:50:50.230] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:50:50.230] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:50:50.230] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:50:50.230] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:51:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:51:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:51:00.999] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:51:20.233] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:51:20.233] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:51:20.234] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:51:20.234] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:51:20.234] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:51:31.000] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:51:31.000] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:51:31.000] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:51:40.643] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:51:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:51:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:51:50.237] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:51:50.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:51:50.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:51:50.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:51:50.237] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:52:01.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:52:01.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:52:01.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:52:20.239] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:52:20.239] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:52:20.240] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:52:20.240] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:52:20.240] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:52:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:52:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:52:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:52:40.643] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:52:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:52:40.643] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:52:50.244] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:52:50.244] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:52:50.244] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:52:50.244] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:52:50.244] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:53:01.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:53:01.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:53:01.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:53:01.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:53:01.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:53:20.246] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:53:20.246] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:53:20.246] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:53:20.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:53:20.247] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:53:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:53:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:53:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:53:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:53:31.002] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:53:40.644] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[08:53:40.644] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:53:40.644] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:53:50.250] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:53:50.250] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:53:50.250] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:53:50.251] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:53:50.251] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:54:01.003] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:54:01.003] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:54:01.003] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:54:20.255] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:54:20.256] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:54:20.256] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:54:20.256] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:54:20.256] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:54:31.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:54:31.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:54:31.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:54:38.042] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[08:54:38.042] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[08:54:39.967] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[08:54:40.645] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:54:40.645] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:54:40.645] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:54:50.261] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:54:50.261] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:54:50.261] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:54:50.261] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:54:50.261] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:55:01.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:55:01.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:55:01.004] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:55:20.264] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:55:20.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:55:20.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:55:20.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:55:20.264] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:55:31.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:55:31.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:55:31.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:55:40.646] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:55:40.646] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:55:40.646] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:55:50.268] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:55:50.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:55:50.268] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:55:50.269] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:55:50.269] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:56:01.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:56:01.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:56:01.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:56:01.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:56:01.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:56:20.277] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:56:20.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:56:20.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:56:20.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:56:20.278] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:56:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:56:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:56:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:56:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:56:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:56:40.646] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:56:40.646] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:56:40.646] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:56:50.282] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:56:50.282] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:56:50.282] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:56:50.282] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:56:50.282] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:57:01.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:57:01.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:57:01.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:57:20.285] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:57:20.285] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:57:20.285] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:57:20.285] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:57:20.285] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:57:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:57:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:57:31.006] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:57:40.647] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:57:40.647] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:57:40.647] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:57:50.290] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:57:50.290] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:57:50.290] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:57:50.290] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:57:50.290] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:58:01.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:58:01.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:58:01.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:58:20.293] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:58:20.293] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:58:20.293] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:58:20.293] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:58:20.293] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:58:31.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:58:31.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:58:31.007] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:58:40.648] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:58:40.648] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:58:40.648] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:58:50.296] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:58:50.297] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:58:50.297] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:58:50.297] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:58:50.297] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:59:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:59:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:59:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:59:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:59:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[08:59:20.302] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:59:20.302] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:59:20.302] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:59:20.302] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:59:20.302] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[08:59:31.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[08:59:31.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[08:59:31.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[08:59:31.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[08:59:31.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[08:59:40.649] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[08:59:40.649] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[08:59:40.649] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[08:59:50.307] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[08:59:50.307] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[08:59:50.307] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[08:59:50.307] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[08:59:50.307] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:00:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:00:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:00:01.008] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:00:20.312] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:00:20.312] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:00:20.312] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:00:20.312] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:00:20.312] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:00:31.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:00:31.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:00:31.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:00:40.650] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[09:00:40.650] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:00:40.650] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:00:50.317] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:00:50.317] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:00:50.318] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:00:50.318] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:00:50.318] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:01:01.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:01:01.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:01:01.009] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:01:20.321] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:01:20.322] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:01:20.322] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:01:20.322] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:01:20.322] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:01:31.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:01:31.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:01:31.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:01:40.651] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:01:40.651] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:01:40.651] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:01:50.326] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:01:50.326] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:01:50.326] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:01:50.326] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:01:50.327] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:02:01.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:02:01.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:02:01.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:02:01.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:02:01.010] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[09:02:20.331] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:02:20.331] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:02:20.331] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:02:20.331] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:02:20.331] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:02:31.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:02:31.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:02:31.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[09:02:31.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[09:02:31.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:02:40.651] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:02:40.651] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:02:40.651] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:02:50.336] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:02:50.336] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:02:50.336] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:02:50.336] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:02:50.336] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:03:01.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:03:01.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:03:01.011] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:03:20.340] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:03:20.340] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:03:20.340] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:03:20.340] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:03:20.340] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:03:31.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:03:31.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:03:31.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:03:40.652] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:03:40.652] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:03:40.652] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:03:50.345] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:03:50.345] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:03:50.345] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:03:50.345] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:03:50.345] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:04:01.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:04:01.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:04:01.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:04:20.351] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:04:20.351] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:04:20.351] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:04:20.351] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:04:20.351] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:04:31.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:04:31.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:04:31.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:04:38.044] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[09:04:38.044] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[09:04:40.652] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:04:40.652] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:04:40.652] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:04:50.354] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:04:50.355] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:04:50.355] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:04:50.355] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:04:50.355] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:05:01.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:05:01.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:05:01.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:05:01.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:05:01.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[09:05:20.358] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:05:20.358] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:05:20.358] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:05:20.358] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:05:20.358] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:05:31.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:05:31.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:05:31.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[09:05:31.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[09:05:31.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:05:40.653] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[09:05:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:05:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:05:50.363] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:05:50.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:05:50.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:05:50.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:05:50.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:06:01.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:06:01.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:06:01.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:06:20.367] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:06:20.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:06:20.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:06:20.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:06:20.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:06:31.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:06:31.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:06:31.015] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:06:40.653] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:06:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:06:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:06:50.371] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:06:50.371] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:06:50.371] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:06:50.371] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:06:50.371] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:07:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:07:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:07:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:07:20.378] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:07:20.378] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:07:20.378] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:07:20.378] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:07:20.378] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:07:31.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:07:31.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:07:31.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:07:40.653] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:07:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:07:40.653] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:07:50.381] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:07:50.381] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:07:50.381] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:07:50.381] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:07:50.381] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:08:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:08:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:08:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:08:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:08:01.016] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[09:08:20.385] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:08:20.385] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:08:20.385] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:08:20.386] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:08:20.386] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:08:31.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:08:31.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:08:31.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[09:08:31.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[09:08:31.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:08:40.654] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:08:40.654] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:08:40.654] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:08:50.390] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:08:50.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:08:50.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:08:50.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:08:50.390] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:09:01.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:09:01.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:09:01.017] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:09:20.397] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:09:20.397] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:09:20.397] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:09:20.397] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:09:20.397] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:09:31.018] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:09:31.018] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:09:31.018] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:09:39.968] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[09:09:40.655] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:09:40.655] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:09:40.655] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:09:50.402] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:09:50.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:09:50.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:09:50.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:09:50.402] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:10:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:10:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:10:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:10:20.407] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:10:20.407] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:10:20.407] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:10:20.407] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:10:20.407] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:10:31.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:10:31.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:10:31.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:10:40.655] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:10:40.655] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:10:40.655] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:10:50.412] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:10:50.412] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:10:50.412] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:10:50.413] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:10:50.413] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:11:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:11:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:11:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:11:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:11:01.019] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[09:11:20.416] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:11:20.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:11:20.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:11:20.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:11:20.417] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:11:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:11:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:11:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[09:11:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[09:11:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:11:40.656] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:11:40.656] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:11:40.656] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:11:50.418] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:11:50.418] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:11:50.418] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:11:50.418] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:11:50.419] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:12:01.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:12:01.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:12:01.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:12:20.426] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:12:20.426] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:12:20.427] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:12:20.427] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:12:20.427] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:12:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:12:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:12:31.020] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:12:40.657] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:12:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:12:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:12:50.433] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:12:50.433] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:12:50.433] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:12:50.433] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:12:50.433] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:13:01.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:13:01.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:13:01.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:13:20.438] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:13:20.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:13:20.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:13:20.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:13:20.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:13:31.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:13:31.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:13:31.021] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:13:40.657] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:13:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:13:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:13:50.442] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:13:50.442] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:13:50.443] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:13:50.443] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:13:50.443] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:14:01.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:14:01.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:14:01.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:14:01.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:14:01.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[09:14:20.445] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:14:20.446] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:14:20.446] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:14:20.446] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:14:20.446] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:14:31.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:14:31.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:14:31.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[09:14:31.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[09:14:31.022] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:14:38.046] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[09:14:38.046] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[09:14:40.657] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[09:14:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:14:40.657] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:14:50.449] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:14:50.449] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:14:50.449] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:14:50.449] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:14:50.449] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:15:01.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:15:01.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:15:01.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:15:20.454] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:15:20.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:15:20.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:15:20.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:15:20.455] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:15:31.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:15:31.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:15:31.023] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:15:40.658] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[09:15:40.658] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[09:15:40.658] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[09:15:50.565] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:15:50.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:15:50.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:15:50.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:15:50.565] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:16:01.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:16:01.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:16:01.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[09:16:20.570] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-ITEM-SERVICE serverId localhost:foodie-item-service:10001, isReplication {}false
[09:16:20.570] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[09:16:20.571] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[09:16:20.571] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-item-service:10001
[09:16:20.571] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-ITEM-SERVICE - localhost:foodie-item-service:10001; reply status=200
[09:16:31.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[09:16:31.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[09:16:31.039] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
