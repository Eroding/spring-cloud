[18:02:40.088] DEBUG [main]o.s.b.c.l.ClasspathLoggingApplicationListener - Application started with classpath: [file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/charsets.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/deploy.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/access-bridge-64.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/cldrdata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/dnsns.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/jaccess.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/jfxrt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/localedata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/nashorn.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunec.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunjce_provider.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunmscapi.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunpkcs11.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/zipfs.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/javaws.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jce.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jfr.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jfxswt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jsse.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/management-agent.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/plugin.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/resources.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/rt.jar, file:/C:/Users/Administrator/Desktop/spring-cloud/platform/register-center/target/classes/, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-server/2.1.1.RELEASE/spring-cloud-starter-netflix-eureka-server-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter/2.1.1.RELEASE/spring-cloud-starter-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter/2.1.5.RELEASE/spring-boot-starter-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot/2.1.5.RELEASE/spring-boot-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.1.5.RELEASE/spring-boot-autoconfigure-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.1.5.RELEASE/spring-boot-starter-logging-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, file:/C:/Users/Administrator/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.11.2/log4j-to-slf4j-2.11.2.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/jul-to-slf4j/1.7.26/jul-to-slf4j-1.7.26.jar, file:/C:/Users/Administrator/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-core/5.1.7.RELEASE/spring-core-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-jcl/5.1.7.RELEASE/spring-jcl-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-context/2.1.1.RELEASE/spring-cloud-context-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/security/spring-security-crypto/5.1.5.RELEASE/spring-security-crypto-5.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-commons/2.1.1.RELEASE/spring-cloud-commons-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/security/spring-security-rsa/1.0.7.RELEASE/spring-security-rsa-1.0.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.60/bcpkix-jdk15on-1.60.jar, file:/C:/Users/Administrator/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.60/bcprov-jdk15on-1.60.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-server/2.1.1.RELEASE/spring-cloud-netflix-eureka-server-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.1.5.RELEASE/spring-boot-starter-web-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.1.5.RELEASE/spring-boot-starter-json-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.8/jackson-datatype-jdk8-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.8/jackson-datatype-jsr310-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.8/jackson-module-parameter-names-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.1.5.RELEASE/spring-boot-starter-tomcat-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.19/tomcat-embed-core-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.19/tomcat-embed-el-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.19/tomcat-embed-websocket-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.16.Final/hibernate-validator-6.0.16.Final.jar, file:/C:/Users/Administrator/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar, file:/C:/Users/Administrator/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-web/5.1.7.RELEASE/spring-web-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-webmvc/5.1.7.RELEASE/spring-webmvc-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.1.5.RELEASE/spring-boot-starter-actuator-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.1.5.RELEASE/spring-boot-actuator-autoconfigure-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-actuator/2.1.5.RELEASE/spring-boot-actuator-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/io/micrometer/micrometer-core/1.1.4/micrometer-core-1.1.4.jar, file:/C:/Users/Administrator/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar, file:/C:/Users/Administrator/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-freemarker/2.1.5.RELEASE/spring-boot-starter-freemarker-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/freemarker/freemarker/2.3.28/freemarker-2.3.28.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-context-support/5.1.7.RELEASE/spring-context-support-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-hystrix/2.1.1.RELEASE/spring-cloud-netflix-hystrix-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.1.5.RELEASE/spring-boot-starter-aop-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/aspectj/aspectjweaver/1.9.4/aspectjweaver-1.9.4.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/2.1.1.RELEASE/spring-cloud-netflix-eureka-client-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-client/1.9.8/eureka-client-1.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/jettison/jettison/1.3.7/jettison-1.3.7.jar, file:/C:/Users/Administrator/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar, file:/C:/Users/Administrator/.m2/repository/joda-time/joda-time/2.10.2/joda-time-2.10.2.jar, file:/C:/Users/Administrator/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar, file:/C:/Users/Administrator/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar, file:/C:/Users/Administrator/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar, file:/C:/Users/Administrator/.m2/repository/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar, file:/C:/Users/Administrator/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/httpcomponents/httpclient/4.5.8/httpclient-4.5.8.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/httpcomponents/httpcore/4.4.11/httpcore-4.4.11.jar, file:/C:/Users/Administrator/.m2/repository/com/google/inject/guice/4.1.0/guice-4.1.0.jar, file:/C:/Users/Administrator/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/C:/Users/Administrator/.m2/repository/com/github/vlsi/compactmap/compactmap/1.2.1/compactmap-1.2.1.jar, file:/C:/Users/Administrator/.m2/repository/com/github/andrewoma/dexx/dexx-collections/0.2/dexx-collections-0.2.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-servlet/1.19.1/jersey-servlet-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-server/1.19.1/jersey-server-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/woodstox/woodstox-core-asl/4.4.1/woodstox-core-asl-4.4.1.jar, file:/C:/Users/Administrator/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/archaius/archaius-core/0.7.6/archaius-core-0.7.6.jar, file:/C:/Users/Administrator/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar, file:/C:/Users/Administrator/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.9.8/jackson-dataformat-xml-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.9.8/jackson-module-jaxb-annotations-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.3/woodstox-core-5.0.3.jar, file:/C:/Users/Administrator/.m2/repository/com/thoughtworks/xstream/xstream/1.4.10/xstream-1.4.10.jar, file:/C:/Users/Administrator/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar, file:/C:/Users/Administrator/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-archaius/2.1.1.RELEASE/spring-cloud-starter-netflix-archaius-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-ribbon/2.1.1.RELEASE/spring-cloud-netflix-ribbon-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-archaius/2.1.1.RELEASE/spring-cloud-netflix-archaius-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar, file:/C:/Users/Administrator/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-ribbon/2.1.1.RELEASE/spring-cloud-starter-netflix-ribbon-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon/2.3.0/ribbon-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-transport/2.3.0/ribbon-transport-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/hystrix/hystrix-core/1.5.18/hystrix-core-1.5.18.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-core/2.3.0/ribbon-core-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-httpclient/2.3.0/ribbon-httpclient-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-commons-util/0.3.0/netflix-commons-util-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-loadbalancer/2.3.0/ribbon-loadbalancer-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxjava/1.2.0/rxjava-1.2.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-eureka/2.3.0/ribbon-eureka-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/org/projectlombok/lombok/1.18.8/lombok-1.18.8.jar, file:/C:/Users/Administrator/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, file:/C:/Users/Administrator/.m2/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger2/2.4.0/springfox-swagger2-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/swagger/swagger-annotations/1.5.6/swagger-annotations-1.5.6.jar, file:/C:/Users/Administrator/.m2/repository/io/swagger/swagger-models/1.5.6/swagger-models-1.5.6.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spi/2.4.0/springfox-spi-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-core/2.4.0/springfox-core-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-schema/2.4.0/springfox-schema-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger-common/2.4.0/springfox-swagger-common-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.4.0/springfox-spring-web-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/classmate/1.4.0/classmate-1.4.0.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-beans/5.1.7.RELEASE/spring-beans-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-context/5.1.7.RELEASE/spring-context-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-expression/5.1.7.RELEASE/spring-expression-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-aop/5.1.7.RELEASE/spring-aop-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger-ui/2.4.0/springfox-swagger-ui-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/com/github/xiaoymin/swagger-bootstrap-ui/1.6/swagger-bootstrap-ui-1.6.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar, file:/C:/Users/Administrator/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/D:/IntelliJ%20IDEA%202019.3.3/lib/idea_rt.jar]
[18:02:40.276] DEBUG [main]o.s.b.SpringApplication - Loading source class org.springframework.cloud.bootstrap.BootstrapImportSelectorConfiguration
[18:02:40.309] DEBUG [main]o.s.c.a.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@38d8f54a
[18:02:40.325] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[18:02:40.356] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[18:02:40.556] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.condition.BeanTypeRegistry'
[18:02:40.668] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[18:02:40.673] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[18:02:40.674] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[18:02:40.675] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[18:02:40.677] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[18:02:40.679] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[18:02:40.681] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[18:02:40.685] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesBeans'
[18:02:40.685] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration'
[18:02:40.691] INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6e3c72c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[18:02:40.708] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'bootstrapImportSelectorConfiguration'
[18:02:40.709] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration'
[18:02:40.718] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.config-org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties'
[18:02:40.729] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration'
[18:02:40.731] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'encrypt-org.springframework.cloud.bootstrap.encrypt.KeyProperties'
[18:02:40.733] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentDecryptApplicationListener'
[18:02:40.738] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesRebinder'
[18:02:40.740] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesRebinder' via factory method to bean named 'configurationPropertiesBeans'
[18:02:40.747] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[18:02:40.761] DEBUG [main]o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EncryptionBootstrapConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.crypto.encrypt.TextEncryptor' (OnClassCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   EncryptionBootstrapConfiguration.RsaEncryptionConfiguration:
      Did not match:
         - Keystore nor key found in Environment (EncryptionBootstrapConfiguration.KeyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.rsa.crypto.RsaSecretEncryptor' (OnClassCondition)

   EncryptionBootstrapConfiguration.VanillaEncryptionConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.security.rsa.crypto.RsaSecretEncryptor' (OnClassCondition)

   EurekaDiscoveryClientConfigServiceBootstrapConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.client.ConfigServicePropertySourceLocator' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



[18:02:40.763] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[18:02:42.159] DEBUG [main]o.s.b.c.l.ClasspathLoggingApplicationListener - Application started with classpath: [file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/charsets.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/deploy.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/access-bridge-64.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/cldrdata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/dnsns.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/jaccess.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/jfxrt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/localedata.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/nashorn.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunec.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunjce_provider.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunmscapi.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/sunpkcs11.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/ext/zipfs.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/javaws.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jce.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jfr.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jfxswt.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/jsse.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/management-agent.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/plugin.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/resources.jar, file:/C:/Program%20Files/Java/jdk1.8.0_241/jre/lib/rt.jar, file:/C:/Users/Administrator/Desktop/spring-cloud/platform/register-center/target/classes/, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-server/2.1.1.RELEASE/spring-cloud-starter-netflix-eureka-server-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter/2.1.1.RELEASE/spring-cloud-starter-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter/2.1.5.RELEASE/spring-boot-starter-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot/2.1.5.RELEASE/spring-boot-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.1.5.RELEASE/spring-boot-autoconfigure-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.1.5.RELEASE/spring-boot-starter-logging-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, file:/C:/Users/Administrator/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.11.2/log4j-to-slf4j-2.11.2.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/jul-to-slf4j/1.7.26/jul-to-slf4j-1.7.26.jar, file:/C:/Users/Administrator/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-core/5.1.7.RELEASE/spring-core-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-jcl/5.1.7.RELEASE/spring-jcl-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-context/2.1.1.RELEASE/spring-cloud-context-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/security/spring-security-crypto/5.1.5.RELEASE/spring-security-crypto-5.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-commons/2.1.1.RELEASE/spring-cloud-commons-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/security/spring-security-rsa/1.0.7.RELEASE/spring-security-rsa-1.0.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.60/bcpkix-jdk15on-1.60.jar, file:/C:/Users/Administrator/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.60/bcprov-jdk15on-1.60.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-server/2.1.1.RELEASE/spring-cloud-netflix-eureka-server-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.1.5.RELEASE/spring-boot-starter-web-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.1.5.RELEASE/spring-boot-starter-json-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.8/jackson-datatype-jdk8-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.8/jackson-datatype-jsr310-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.8/jackson-module-parameter-names-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.1.5.RELEASE/spring-boot-starter-tomcat-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.19/tomcat-embed-core-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.19/tomcat-embed-el-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.19/tomcat-embed-websocket-9.0.19.jar, file:/C:/Users/Administrator/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.16.Final/hibernate-validator-6.0.16.Final.jar, file:/C:/Users/Administrator/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar, file:/C:/Users/Administrator/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-web/5.1.7.RELEASE/spring-web-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-webmvc/5.1.7.RELEASE/spring-webmvc-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.1.5.RELEASE/spring-boot-starter-actuator-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.1.5.RELEASE/spring-boot-actuator-autoconfigure-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-actuator/2.1.5.RELEASE/spring-boot-actuator-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/io/micrometer/micrometer-core/1.1.4/micrometer-core-1.1.4.jar, file:/C:/Users/Administrator/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar, file:/C:/Users/Administrator/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-freemarker/2.1.5.RELEASE/spring-boot-starter-freemarker-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/freemarker/freemarker/2.3.28/freemarker-2.3.28.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-context-support/5.1.7.RELEASE/spring-context-support-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-hystrix/2.1.1.RELEASE/spring-cloud-netflix-hystrix-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.1.5.RELEASE/spring-boot-starter-aop-2.1.5.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/aspectj/aspectjweaver/1.9.4/aspectjweaver-1.9.4.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/2.1.1.RELEASE/spring-cloud-netflix-eureka-client-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-client/1.9.8/eureka-client-1.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/jettison/jettison/1.3.7/jettison-1.3.7.jar, file:/C:/Users/Administrator/.m2/repository/stax/stax-api/1.0.1/stax-api-1.0.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar, file:/C:/Users/Administrator/.m2/repository/joda-time/joda-time/2.10.2/joda-time-2.10.2.jar, file:/C:/Users/Administrator/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar, file:/C:/Users/Administrator/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar, file:/C:/Users/Administrator/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar, file:/C:/Users/Administrator/.m2/repository/com/google/code/gson/gson/2.8.5/gson-2.8.5.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar, file:/C:/Users/Administrator/.m2/repository/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/httpcomponents/httpclient/4.5.8/httpclient-4.5.8.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/httpcomponents/httpcore/4.4.11/httpcore-4.4.11.jar, file:/C:/Users/Administrator/.m2/repository/com/google/inject/guice/4.1.0/guice-4.1.0.jar, file:/C:/Users/Administrator/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/C:/Users/Administrator/.m2/repository/com/github/vlsi/compactmap/compactmap/1.2.1/compactmap-1.2.1.jar, file:/C:/Users/Administrator/.m2/repository/com/github/andrewoma/dexx/dexx-collections/0.2/dexx-collections-0.2.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-servlet/1.19.1/jersey-servlet-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/sun/jersey/jersey-server/1.19.1/jersey-server-1.19.1.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/woodstox/woodstox-core-asl/4.4.1/woodstox-core-asl-4.4.1.jar, file:/C:/Users/Administrator/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/archaius/archaius-core/0.7.6/archaius-core-0.7.6.jar, file:/C:/Users/Administrator/.m2/repository/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar, file:/C:/Users/Administrator/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.9.8/jackson-dataformat-xml-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.9.8/jackson-module-jaxb-annotations-2.9.8.jar, file:/C:/Users/Administrator/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.0.3/woodstox-core-5.0.3.jar, file:/C:/Users/Administrator/.m2/repository/com/thoughtworks/xstream/xstream/1.4.10/xstream-1.4.10.jar, file:/C:/Users/Administrator/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar, file:/C:/Users/Administrator/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-archaius/2.1.1.RELEASE/spring-cloud-starter-netflix-archaius-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-ribbon/2.1.1.RELEASE/spring-cloud-netflix-ribbon-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-archaius/2.1.1.RELEASE/spring-cloud-netflix-archaius-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar, file:/C:/Users/Administrator/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-ribbon/2.1.1.RELEASE/spring-cloud-starter-netflix-ribbon-2.1.1.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon/2.3.0/ribbon-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-transport/2.3.0/ribbon-transport-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/hystrix/hystrix-core/1.5.18/hystrix-core-1.5.18.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-core/2.3.0/ribbon-core-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-httpclient/2.3.0/ribbon-httpclient-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-commons-util/0.3.0/netflix-commons-util-0.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-loadbalancer/2.3.0/ribbon-loadbalancer-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar, file:/C:/Users/Administrator/.m2/repository/io/reactivex/rxjava/1.2.0/rxjava-1.2.0.jar, file:/C:/Users/Administrator/.m2/repository/com/netflix/ribbon/ribbon-eureka/2.3.0/ribbon-eureka-2.3.0.jar, file:/C:/Users/Administrator/.m2/repository/org/projectlombok/lombok/1.18.8/lombok-1.18.8.jar, file:/C:/Users/Administrator/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar, file:/C:/Users/Administrator/.m2/repository/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, file:/C:/Users/Administrator/.m2/repository/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger2/2.4.0/springfox-swagger2-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/swagger/swagger-annotations/1.5.6/swagger-annotations-1.5.6.jar, file:/C:/Users/Administrator/.m2/repository/io/swagger/swagger-models/1.5.6/swagger-models-1.5.6.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spi/2.4.0/springfox-spi-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-core/2.4.0/springfox-core-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-schema/2.4.0/springfox-schema-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger-common/2.4.0/springfox-swagger-common-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.4.0/springfox-spring-web-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar, file:/C:/Users/Administrator/.m2/repository/com/fasterxml/classmate/1.4.0/classmate-1.4.0.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-beans/5.1.7.RELEASE/spring-beans-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-context/5.1.7.RELEASE/spring-context-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-expression/5.1.7.RELEASE/spring-expression-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/spring-aop/5.1.7.RELEASE/spring-aop-5.1.7.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE.jar, file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-swagger-ui/2.4.0/springfox-swagger-ui-2.4.0.jar, file:/C:/Users/Administrator/.m2/repository/com/github/xiaoymin/swagger-bootstrap-ui/1.6/swagger-bootstrap-ui-1.6.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar, file:/C:/Users/Administrator/.m2/repository/org/slf4j/slf4j-log4j12/1.7.21/slf4j-log4j12-1.7.21.jar, file:/C:/Users/Administrator/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/D:/IntelliJ%20IDEA%202019.3.3/lib/idea_rt.jar]
[18:02:42.199] INFO  [main]c.i.EurekaServerApplication - The following profiles are active: dev
[18:02:42.199] DEBUG [main]o.s.b.SpringApplication - Loading source class EurekaServerApplication
[18:02:42.223] DEBUG [main]o.s.b.c.c.ConfigFileApplicationListener - Activated activeProfiles dev
[18:02:42.223] DEBUG [main]o.s.b.c.c.ConfigFileApplicationListener - Loaded config file 'file:/C:/Users/Administrator/Desktop/spring-cloud/platform/register-center/target/classes/application.yml' (classpath:/application.yml)
[18:02:42.223] DEBUG [main]o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59
[18:02:42.241] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[18:02:42.241] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
[18:02:42.617] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[18:02:42.678] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[18:02:42.786] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'server.port' in PropertySource 'configurationProperties' with value of type Integer
[18:02:42.787] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'server.port' in PropertySource 'configurationProperties' with value of type Integer
[18:02:42.811] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.condition.BeanTypeRegistry'
[18:02:43.006] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.jmx.enabled' in PropertySource 'configurationProperties' with value of type String
[18:02:43.129] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
[18:02:43.295] WARN  [main]o.s.b.a.e.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[18:02:43.331] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'server.port' in PropertySource 'configurationProperties' with value of type Integer
[18:02:43.366] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScope'
[18:02:43.369] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer'
[18:02:43.545] DEBUG [main]o.s.c.c.s.GenericScope - Generating bean factory id from names: [apacheHttpClientBuilder, apacheHttpClientFactory, applicationTaskExecutor, archaiusEndpoint, asyncLoadBalancerInterceptor, asyncRestTemplateCustomizer, auditEventRepository, auditEventsEndpoint, auditListener, basicErrorController, beanNameHandlerMapping, beanNameViewResolver, beansEndpoint, cachesEndpoint, cachesEndpointWebExtension, characterEncodingFilter, classLoaderMetrics, commonsFeatures, compositeCompatibilityVerifier, compositeDiscoveryClient, conditionsReportEndpoint, configurableEnvironmentConfiguration, configurationPropertiesBeans, configurationPropertiesRebinder, configurationPropertiesReportEndpoint, connManFactory, contextRefresher, controllerEndpointDiscoverer, controllerEndpointHandlerMapping, controllerExposeExcludePropertyEndpointFilter, conventionErrorViewResolver, createHealthStatusHttpMapper, default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification, default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification, defaultServletHandlerMapping, defaultValidator, defaultViewResolver, discoveryClient, discoveryClientHealthIndicator, discoveryClientOptionalArgs, discoveryCompositeHealthIndicator, diskSpaceHealthIndicator, diskSpaceHealthIndicatorProperties, dispatcherServlet, dispatcherServletMappingDescriptionProvider, dispatcherServletRegistration, dumpEndpoint, endpointCachingOperationInvokerAdvisor, endpointMediaTypes, endpointOperationParameterMapper, envInfoContributor, environmentEndpoint, environmentEndpointWebExtension, environmentManager, error, errorAttributes, errorPageCustomizer, errorPageRegistrarBeanPostProcessor, eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties, eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties, eurekaApplicationInfoManager, eurekaAutoServiceRegistration, eurekaClient, eurekaClientConfigBean, eurekaController, eurekaDiscoverClientMarker, eurekaFeature, eurekaHealthIndicator, eurekaInstanceConfigBean, eurekaRegistration, eurekaServerApplication, eurekaServerBootstrap, eurekaServerConfig, eurekaServerContext, eurekaServerFeature, eurekaServerMarkerBean, eurekaServiceRegistry, faviconHandlerMapping, faviconRequestHandler, featuresEndpoint, fileDescriptorMetrics, filterMappingDescriptionProvider, formContentFilter, freeMarkerConfiguration, freeMarkerConfigurer, freeMarkerViewResolver, gson, gsonBuilder, handlerExceptionResolver, healthAggregator, healthEndpoint, healthEndpointWebExtension, healthIndicatorRegistry, healthWebEndpointResponseMapper, heapDumpWebEndpoint, hiddenHttpMethodFilter, httpExchangeTracer, httpRequestHandlerAdapter, httpTraceEndpoint, httpTraceFilter, hystrixHealthIndicator, hystrixMetricsBinder, inetUtils, inetUtilsProperties, infoEndpoint, jacksonCodecCustomizer, jacksonObjectMapper, jacksonObjectMapperBuilder, jerseyApplication, jerseyFilterRegistration, jmxAnnotationEndpointDiscoverer, jmxIncludeExcludePropertyEndpointFilter, jmxMBeanExporter, jsonComponentModule, jvmGcMetrics, jvmMemoryMetrics, jvmThreadMetrics, loadBalancedAsyncRestTemplateInitializer, loadBalancedRestTemplateInitializerDeprecated, loadBalancerClient, loadBalancerRequestFactory, localeCharsetMappingsCustomizer, logbackMetrics, loggersEndpoint, loggingCodecCustomizer, loggingRebinder, management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties, management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties, management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties, management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties, management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties, management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties, management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties, management.health.status-org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties, management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties, management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties, management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties, management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties, management.trace.http-org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties, managementServletContext, mappingJackson2HttpMessageConverter, mappingJackson2XmlHttpMessageConverter, mappingsEndpoint, mbeanExporter, mbeanServer, messageConverters, meterRegistryPostProcessor, methodValidationPostProcessor, metricsEndpoint, metricsHttpClientUriTagFilter, metricsHttpServerUriTagFilter, metricsRestTemplateCustomizer, metricsWebMvcConfigurer, micrometerClock, multipartConfigElement, multipartResolver, mvcContentNegotiationManager, mvcConversionService, mvcHandlerMappingIntrospector, mvcPathMatcher, mvcResourceUrlProvider, mvcUriComponentsContributor, mvcUrlPathHelper, mvcValidator, mvcViewResolver, objectNamingStrategy, org.springframework.aop.config.internalAutoProxyCreator, org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration, org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration$AuditEventRepositoryConfiguration, org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration, org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$ServletWebHealthConfiguration, org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration, org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ServletTraceFilterConfiguration, org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration, org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration, org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration, org.springframework.boot.autoconfigure.AutoConfigurationPackages, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$CglibAutoProxyConfiguration, org.springframework.boot.autoconfigure.condition.BeanTypeRegistry, org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration, org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration, org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$LoggingCodecConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration, org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration, org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration, org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration, org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration, org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata, org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor, org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration, org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration, org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration, org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration, org.springframework.cloud.autoconfigure.WritableEnvironmentEndpointAutoConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration, org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration, org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration, org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig, org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration, org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration, org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration, org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration, org.springframework.cloud.commons.httpclient.HttpClientConfiguration, org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration, org.springframework.cloud.commons.util.UtilAutoConfiguration, org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration, org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration, org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$ArchaiusEndpointConfiguration, org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$PropagateEventsConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration, org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration, org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher, org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration, org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration, org.springframework.cloud.netflix.hystrix.HystrixAutoConfiguration, org.springframework.cloud.netflix.hystrix.HystrixAutoConfiguration$HystrixMetricsConfiguration, org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration, org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.event.internalEventListenerFactory, org.springframework.context.event.internalEventListenerProcessor, parameterNamesModule, pathMappedEndpoints, peerAwareInstanceRegistry, peerEurekaNodes, preserveErrorControllerTargetClassPostProcessor, processorMetrics, propertiesFactory, propertiesMeterFilter, propertySourcesPlaceholderConfigurer, refreshEndpoint, refreshEventListener, refreshScope, refreshScopeHealthIndicator, requestContextFilter, requestMappingHandlerAdapter, requestMappingHandlerMapping, resourceHandlerMapping, restTemplateBuilder, restTemplateCustomizer, restTemplateTagConfigurer, ribbon-org.springframework.cloud.netflix.ribbon.ServerIntrospectorProperties, ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties, ribbonFeature, ribbonInterceptor, scheduledTasksEndpoint, scopedTarget.eurekaApplicationInfoManager, scopedTarget.eurekaClient, scopedTarget.eurekaRegistration, server-org.springframework.boot.autoconfigure.web.ServerProperties, serverCodecs, serviceManagementMetadataProvider, serviceRegistryEndpoint, servletEndpointDiscoverer, servletEndpointRegistrar, servletExposeExcludePropertyEndpointFilter, servletMappingDescriptionProvider, servletWebChildContextFactory, servletWebServerFactoryCustomizer, simpleConfig, simpleControllerHandlerAdapter, simpleDiscoveryClient, simpleDiscoveryProperties, simpleMeterRegistry, spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties, spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties, spring.cloud.loadbalancer.retry-org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties, spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties, spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties, spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties, spring.http-org.springframework.boot.autoconfigure.http.HttpProperties, spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties, spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties, spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties, spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties, spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties, spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties, spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties, springApplicationAdminRegistrar, springBootVersionVerifier, springClientFactory, standardGsonBuilderCustomizer, standardJacksonObjectMapperBuilderCustomizer, stringHttpMessageConverter, taskExecutorBuilder, taskSchedulerBuilder, tomcatMetricsBinder, tomcatServletWebServerFactory, tomcatServletWebServerFactoryCustomizer, tomcatWebServerFactoryCustomizer, traceFilterRegistration, traceRepository, uptimeMetrics, viewControllerHandlerMapping, viewResolver, webEndpointDiscoverer, webEndpointPathMapper, webEndpointServletHandlerMapping, webExposeExcludePropertyEndpointFilter, webMvcMetricsFilter, webMvcTagsProvider, webServerFactoryCustomizerBeanPostProcessor, websocketServletWebServerCustomizer, welcomePageHandlerMapping]
[18:02:43.547] INFO  [main]o.s.c.c.s.GenericScope - BeanFactory id=330e9f2d-f41a-3688-b8df-5f69511a8206
[18:02:43.548] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
[18:02:43.551] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[18:02:43.551] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata'
[18:02:43.552] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
[18:02:43.554] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[18:02:43.559] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[18:02:43.559] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[18:02:43.559] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
[18:02:43.560] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'methodValidationPostProcessor'
[18:02:43.576] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
[18:02:43.582] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[18:02:43.613] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
[18:02:43.614] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
[18:02:43.614] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryPostProcessor'
[18:02:43.657] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:43.660] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesBeans'
[18:02:43.660] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration'
[18:02:43.661] INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6e3c72c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[18:02:43.664] DEBUG [main]o.s.u.c.s.UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@61e7bf2f]
[18:02:43.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
[18:02:43.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
[18:02:43.726] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
[18:02:43.726] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
[18:02:43.729] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
[18:02:43.729] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
[18:02:43.731] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[18:02:43.742] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[18:02:43.745] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
[18:02:43.747] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[18:02:43.747] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
[18:02:43.747] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
[18:02:43.750] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
[18:02:43.751] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[18:02:43.753] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
[18:02:43.754] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
[18:02:43.755] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$$EnhancerBySpringCGLIB$$5e1e7ad1] - unable to determine constructor/method parameter names
[18:02:43.757] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[18:02:43.760] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[18:02:43.790] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer'
[18:02:43.790] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
[18:02:43.790] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$$EnhancerBySpringCGLIB$$b675c9b4] - unable to determine constructor/method parameter names
[18:02:43.793] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration'
[18:02:43.794] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
[18:02:43.795] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration$$EnhancerBySpringCGLIB$$3cd0e89f] - unable to determine constructor/method parameter names
[18:02:43.796] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[18:02:43.798] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[18:02:43.801] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement'
[18:02:43.801] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
[18:02:43.803] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration$$EnhancerBySpringCGLIB$$cd0f02de] - unable to determine constructor/method parameter names
[18:02:43.804] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[18:02:43.808] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
[18:02:43.814] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet'
[18:02:43.814] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
[18:02:43.815] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration$$EnhancerBySpringCGLIB$$dac953f8] - unable to determine constructor/method parameter names
[18:02:43.817] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[18:02:43.817] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[18:02:43.834] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
[18:02:43.839] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
[18:02:43.839] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'dispatcherServletRegistration'
[18:02:43.840] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
[18:02:43.840] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
[18:02:43.841] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration$$EnhancerBySpringCGLIB$$cb0a9e54] - unable to determine constructor/method parameter names
[18:02:43.844] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[18:02:43.848] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:43.848] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[18:02:43.969] DEBUG [main]o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.1.5.RELEASE\spring-boot-2.1.5.RELEASE.jar
[18:02:43.969] DEBUG [main]o.s.b.w.e.t.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.1.5.RELEASE\spring-boot-2.1.5.RELEASE.jar
[18:02:43.970] DEBUG [main]o.s.b.w.e.t.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[18:02:44.017] INFO  [main]o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port(s): 20000 (http)
[18:02:44.039] INFO  [main]o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-20000"]
[18:02:44.050] INFO  [main]o.a.c.c.StandardService - Starting service [Tomcat]
[18:02:44.051] INFO  [main]o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.19]
[18:02:44.287] INFO  [main]o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
[18:02:44.287] DEBUG [main]o.s.w.c.ContextLoader - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[18:02:44.288] INFO  [main]o.s.w.c.ContextLoader - Root WebApplicationContext: initialization completed in 2065 ms
[18:02:44.292] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcMetricsFilter'
[18:02:44.292] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration'
[18:02:44.292] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$9e6b7dd7] - unable to determine constructor/method parameter names
[18:02:44.294] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'
[18:02:44.297] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'
[18:02:44.299] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleMeterRegistry'
[18:02:44.299] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration'
[18:02:44.300] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleConfig'
[18:02:44.301] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'
[18:02:44.304] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'
[18:02:44.310] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'micrometerClock'
[18:02:44.311] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration'
[18:02:44.314] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig'
[18:02:44.314] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock'
[18:02:44.351] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesMeterFilter'
[18:02:44.353] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'
[18:02:44.355] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter'
[18:02:44.356] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration'
[18:02:44.356] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration$$EnhancerBySpringCGLIB$$cba0b39e] - unable to determine constructor/method parameter names
[18:02:44.357] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'
[18:02:44.363] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter'
[18:02:44.367] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmGcMetrics'
[18:02:44.367] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration'
[18:02:44.370] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmMemoryMetrics'
[18:02:44.371] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jvmThreadMetrics'
[18:02:44.372] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classLoaderMetrics'
[18:02:44.373] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'logbackMetrics'
[18:02:44.373] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration'
[18:02:44.375] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'uptimeMetrics'
[18:02:44.375] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration'
[18:02:44.378] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'processorMetrics'
[18:02:44.380] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileDescriptorMetrics'
[18:02:44.381] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hystrixMetricsBinder'
[18:02:44.381] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.hystrix.HystrixAutoConfiguration$HystrixMetricsConfiguration'
[18:02:44.421] WARN  [main]c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[18:02:44.421] INFO  [main]c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[18:02:44.427] DEBUG [main]c.n.h.s.HystrixPlugins - Created HystrixDynamicProperties. Using class : com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius
[18:02:44.440] INFO  [main]c.n.c.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a2bcd56
[18:02:44.555] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcTagsProvider'
[18:02:44.556] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcMetricsFilter' via factory method to bean named 'simpleMeterRegistry'
[18:02:44.556] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcMetricsFilter' via factory method to bean named 'webMvcTagsProvider'
[18:02:44.561] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyFilterRegistration'
[18:02:44.561] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration'
[18:02:44.564] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaApplicationInfoManager'
[18:02:44.627] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerConfig'
[18:02:44.628] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$EurekaServerConfigBeanConfiguration'
[18:02:44.630] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClientConfigBean'
[18:02:44.630] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration'
[18:02:44.631] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$$EnhancerBySpringCGLIB$$3cbf0ffe] - unable to determine constructor/method parameter names
[18:02:44.632] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration' via constructor to bean named 'environment'
[18:02:44.634] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaClientConfigBean' via factory method to bean named 'environment'
[18:02:44.650] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerConfig' via factory method to bean named 'eurekaClientConfigBean'
[18:02:44.662] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaClient'
[18:02:44.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.instance.registry-org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties'
[18:02:44.672] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jerseyApplication'
[18:02:44.674] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'environment'
[18:02:44.674] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyApplication' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:44.776] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-client/1.9.8/eureka-client-1.9.8.jar!/com/netflix/discovery/provider/DiscoveryJerseyProvider.class]
[18:02:44.809] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/ASGResource.class]
[18:02:44.811] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/ApplicationsResource.class]
[18:02:44.813] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/InstancesResource.class]
[18:02:44.814] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/PeerReplicationResource.class]
[18:02:44.814] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/SecureVIPResource.class]
[18:02:44.814] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/ServerInfoResource.class]
[18:02:44.815] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/StatusResource.class]
[18:02:44.815] DEBUG [main]o.s.c.a.ClassPathScanningCandidateComponentProvider - Identified candidate component class: URL [jar:file:/C:/Users/Administrator/.m2/repository/com/netflix/eureka/eureka-core/1.9.8/eureka-core-1.9.8.jar!/com/netflix/eureka/resources/VIPResource.class]
[18:02:44.893] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jerseyFilterRegistration' via factory method to bean named 'jerseyApplication'
[18:02:44.901] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traceFilterRegistration'
[18:02:44.907] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpTraceFilter'
[18:02:44.908] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration$ServletTraceFilterConfiguration'
[18:02:44.913] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'traceRepository'
[18:02:44.914] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration'
[18:02:44.925] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpExchangeTracer'
[18:02:44.928] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.trace.http-org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties'
[18:02:44.936] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'httpExchangeTracer' via factory method to bean named 'management.trace.http-org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties'
[18:02:44.939] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'httpTraceFilter' via factory method to bean named 'traceRepository'
[18:02:44.939] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'httpTraceFilter' via factory method to bean named 'httpExchangeTracer'
[18:02:44.946] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'traceFilterRegistration' via factory method to bean named 'httpTraceFilter'
[18:02:44.948] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointRegistrar'
[18:02:44.948] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration'
[18:02:44.949] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$40fe1c0a] - unable to determine constructor/method parameter names
[18:02:44.952] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:44.956] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:44.961] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointDiscoverer'
[18:02:44.961] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration'
[18:02:44.965] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:44.969] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointPathMapper'
[18:02:44.970] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration'
[18:02:44.970] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$1c42621a] - unable to determine constructor/method parameter names
[18:02:44.974] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:44.974] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:44.981] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter'
[18:02:44.981] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration'
[18:02:44.983] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:44.991] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:44.991] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer'
[18:02:44.998] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'archaiusEndpoint'
[18:02:44.998] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$ArchaiusEndpointConfiguration'
[18:02:45.001] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'auditEventsEndpoint'
[18:02:45.002] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration'
[18:02:45.003] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'auditEventRepository'
[18:02:45.004] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration$AuditEventRepositoryConfiguration'
[18:02:45.006] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'auditEventsEndpoint' via factory method to bean named 'auditEventRepository'
[18:02:45.008] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beansEndpoint'
[18:02:45.009] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration'
[18:02:45.010] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beansEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:45.014] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpoint'
[18:02:45.014] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration'
[18:02:45.040] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpoint'
[18:02:45.040] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration'
[18:02:45.046] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthAggregator'
[18:02:45.046] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration'
[18:02:45.048] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$944bdfef] - unable to determine constructor/method parameter names
[18:02:45.051] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.health.status-org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties'
[18:02:45.057] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration' via constructor to bean named 'management.health.status-org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties'
[18:02:45.067] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthIndicatorRegistry'
[18:02:45.070] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthIndicatorRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:45.073] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceHealthIndicator'
[18:02:45.073] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorAutoConfiguration'
[18:02:45.075] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'diskSpaceHealthIndicatorProperties'
[18:02:45.079] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'diskSpaceHealthIndicator' via factory method to bean named 'diskSpaceHealthIndicatorProperties'
[18:02:45.080] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshScopeHealthIndicator'
[18:02:45.081] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration'
[18:02:45.082] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesRebinder'
[18:02:45.084] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurationPropertiesRebinder' via factory method to bean named 'configurationPropertiesBeans'
[18:02:45.084] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshScopeHealthIndicator' via factory method to bean named 'configurationPropertiesRebinder'
[18:02:45.086] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryCompositeHealthIndicator'
[18:02:45.086] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration'
[18:02:45.089] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaHealthIndicator'
[18:02:45.089] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration'
[18:02:45.092] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaInstanceConfigBean'
[18:02:45.093] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtils'
[18:02:45.093] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration'
[18:02:45.095] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'inetUtilsProperties'
[18:02:45.099] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'inetUtils' via factory method to bean named 'inetUtilsProperties'
[18:02:45.100] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceManagementMetadataProvider'
[18:02:45.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'inetUtils'
[18:02:45.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaInstanceConfigBean' via factory method to bean named 'serviceManagementMetadataProvider'
[18:02:45.102] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'eureka.instance.hostname' in PropertySource 'configurationProperties' with value of type String
[18:02:45.102] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'server.port' in PropertySource 'configurationProperties' with value of type Integer
[18:02:46.562] INFO  [main]o.s.c.c.u.InetUtils - Cannot determine local hostname
[18:02:46.563] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.cloud.client.hostname' in PropertySource 'configurationProperties' with value of type String
[18:02:46.563] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'configurationProperties' with value of type String
[18:02:46.563] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'server.port' in PropertySource 'configurationProperties' with value of type Integer
[18:02:46.564] DEBUG [main]o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data healthcheckUrl: http://localhost:20000/actuator/health
[18:02:46.565] DEBUG [main]o.s.c.n.e.m.DefaultManagementMetadataProvider - Constructed eureka meta-data statusPageUrl: http://localhost:20000/actuator/info
[18:02:46.565] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'configurationProperties' with value of type String
[18:02:46.571] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClient'
[18:02:46.571] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaInstanceConfigBean'
[18:02:46.571] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaHealthIndicator' via factory method to bean named 'eurekaClientConfigBean'
[18:02:46.573] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClientHealthIndicator'
[18:02:46.574] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties'
[18:02:46.576] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClientHealthIndicator' via factory method to bean named 'spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties'
[18:02:46.579] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthIndicator' via factory method to bean named 'healthAggregator'
[18:02:46.579] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthIndicator' via factory method to bean named 'eurekaHealthIndicator'
[18:02:46.579] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryCompositeHealthIndicator' via factory method to bean named 'discoveryClientHealthIndicator'
[18:02:46.581] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hystrixHealthIndicator'
[18:02:46.581] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.hystrix.HystrixAutoConfiguration'
[18:02:46.586] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthAggregator'
[18:02:46.586] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthIndicatorRegistry'
[18:02:46.588] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionsReportEndpoint'
[18:02:46.588] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration'
[18:02:46.590] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'conditionsReportEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:46.592] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurationPropertiesReportEndpoint'
[18:02:46.592] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration'
[18:02:46.593] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$e74c7d3a] - unable to determine constructor/method parameter names
[18:02:46.594] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties'
[18:02:46.596] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.configprops-org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties'
[18:02:46.599] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpoint'
[18:02:46.599] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.WritableEnvironmentEndpointAutoConfiguration'
[18:02:46.600] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.cloud.autoconfigure.WritableEnvironmentEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$2a7faf2a] - unable to determine constructor/method parameter names
[18:02:46.601] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties'
[18:02:46.603] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.autoconfigure.WritableEnvironmentEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties'
[18:02:46.604] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpoint' via factory method to bean named 'environment'
[18:02:46.611] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'infoEndpoint'
[18:02:46.611] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration'
[18:02:46.615] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'envInfoContributor'
[18:02:46.615] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration'
[18:02:46.616] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration$$EnhancerBySpringCGLIB$$b12f16a3] - unable to determine constructor/method parameter names
[18:02:46.617] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties'
[18:02:46.619] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration' via constructor to bean named 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties'
[18:02:46.621] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'envInfoContributor' via factory method to bean named 'environment'
[18:02:46.624] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggersEndpoint'
[18:02:46.624] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration'
[18:02:46.625] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loggersEndpoint' via factory method to bean named 'springBootLoggingSystem'
[18:02:46.628] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'heapDumpWebEndpoint'
[18:02:46.628] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration'
[18:02:46.632] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dumpEndpoint'
[18:02:46.632] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration'
[18:02:46.635] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsEndpoint'
[18:02:46.635] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration'
[18:02:46.636] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsEndpoint' via factory method to bean named 'simpleMeterRegistry'
[18:02:46.641] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'scheduledTasksEndpoint'
[18:02:46.641] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration'
[18:02:46.648] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpTraceEndpoint'
[18:02:46.649] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration'
[18:02:46.650] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'httpTraceEndpoint' via factory method to bean named 'traceRepository'
[18:02:46.652] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingsEndpoint'
[18:02:46.652] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration'
[18:02:46.654] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingsEndpoint' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:46.656] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletMappingDescriptionProvider'
[18:02:46.656] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration'
[18:02:46.664] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletMappingDescriptionProvider'
[18:02:46.664] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration'
[18:02:46.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'filterMappingDescriptionProvider'
[18:02:46.668] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEndpoint'
[18:02:46.668] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration'
[18:02:46.670] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'contextRefresher'
[18:02:46.671] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration'
[18:02:46.673] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'contextRefresher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:46.673] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'contextRefresher' via factory method to bean named 'refreshScope'
[18:02:46.676] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEndpoint' via factory method to bean named 'contextRefresher'
[18:02:46.677] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'featuresEndpoint'
[18:02:46.677] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration'
[18:02:46.679] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaFeature'
[18:02:46.680] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'commonsFeatures'
[18:02:46.681] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ribbonFeature'
[18:02:46.681] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration'
[18:02:46.683] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration.RibbonClientSpecification'
[18:02:46.685] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'default.org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration.RibbonClientSpecification'
[18:02:46.687] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ribbon.eager-load-org.springframework.cloud.netflix.ribbon.RibbonEagerLoadProperties'
[18:02:46.690] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerFeature'
[18:02:46.693] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serviceRegistryEndpoint'
[18:02:46.693] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration'
[18:02:46.694] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration'
[18:02:46.695] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration' via constructor to bean named 'org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration'
[18:02:46.696] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaRegistration'
[18:02:46.704] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServiceRegistry'
[18:02:46.704] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'serviceRegistryEndpoint' via factory method to bean named 'eurekaServiceRegistry'
[18:02:46.713] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cachesEndpointWebExtension'
[18:02:46.714] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'cachesEndpointWebExtension' via factory method to bean named 'cachesEndpoint'
[18:02:46.716] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointWebExtension'
[18:02:46.716] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$ServletWebHealthConfiguration'
[18:02:46.719] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthWebEndpointResponseMapper'
[18:02:46.719] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration'
[18:02:46.720] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'createHealthStatusHttpMapper'
[18:02:46.721] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'createHealthStatusHttpMapper' via factory method to bean named 'management.health.status-org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties'
[18:02:46.724] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'
[18:02:46.725] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthWebEndpointResponseMapper' via factory method to bean named 'createHealthStatusHttpMapper'
[18:02:46.726] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthWebEndpointResponseMapper' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'
[18:02:46.727] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthEndpoint'
[18:02:46.727] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthWebEndpointResponseMapper'
[18:02:46.728] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentEndpointWebExtension'
[18:02:46.730] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'environmentManager'
[18:02:46.731] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration'
[18:02:46.732] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentManager' via factory method to bean named 'environment'
[18:02:46.734] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'environmentEndpoint'
[18:02:46.734] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'environmentEndpointWebExtension' via factory method to bean named 'environmentManager'
[18:02:46.742] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
[18:02:46.743] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hiddenHttpMethodFilter'
[18:02:46.743] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
[18:02:46.747] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
[18:02:46.751] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
[18:02:46.763] DEBUG [main]o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*], filterRegistrationBean urls=[/*], filterRegistrationBean urls=[/eureka/*], characterEncodingFilter urls=[/*], hiddenHttpMethodFilter urls=[/*], formContentFilter urls=[/*], requestContextFilter urls=[/*]
[18:02:46.763] DEBUG [main]o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
[18:02:46.792] DEBUG [main]o.s.b.a.m.w.s.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
[18:02:46.793] DEBUG [main]o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
[18:02:46.793] DEBUG [main]o.s.b.w.s.f.OrderedHiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
[18:02:46.793] DEBUG [main]o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
[18:02:46.793] DEBUG [main]o.s.b.a.w.t.s.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
[18:02:46.881] INFO  [main]c.s.j.s.i.a.WebApplicationImpl - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
[18:02:46.995] INFO  [main]c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[18:02:46.995] INFO  [main]c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[18:02:47.222] INFO  [main]c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[18:02:47.222] INFO  [main]c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[18:02:47.603] DEBUG [main]o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
[18:02:47.619] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerApplication'
[18:02:47.620] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration'
[18:02:47.620] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerMarkerBean'
[18:02:47.622] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
[18:02:47.622] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
[18:02:47.623] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
[18:02:47.624] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
[18:02:47.624] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration$PropagateEventsConfiguration'
[18:02:47.626] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration'
[18:02:47.632] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurableEnvironmentConfiguration'
[18:02:47.634] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurableEnvironmentConfiguration' via factory method to bean named 'environment'
[18:02:47.634] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'configurableEnvironmentConfiguration' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:47.634] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'configurableEnvironmentConfiguration'
[18:02:47.635] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'configurationProperties' with value of type String
[18:02:47.638] WARN  [main]c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[18:02:47.639] INFO  [main]c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[18:02:47.652] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
[18:02:47.653] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration$$EnhancerBySpringCGLIB$$16695d05] - unable to determine constructor/method parameter names
[18:02:47.655] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[18:02:47.657] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
[18:02:47.658] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskExecutorBuilder'
[18:02:47.665] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
[18:02:47.665] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultValidator'
[18:02:47.668] DEBUG [main]o.h.v.i.e.r.TraversableResolvers - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[18:02:47.669] DEBUG [main]o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[18:02:47.673] DEBUG [main]o.h.v.i.e.r.TraversableResolvers - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[18:02:47.674] DEBUG [main]o.h.v.i.e.ConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[18:02:47.674] DEBUG [main]o.h.v.i.e.ConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[18:02:47.676] DEBUG [main]o.h.v.i.e.ConfigurationImpl - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[18:02:47.677] DEBUG [main]o.h.v.i.x.c.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[18:02:47.677] DEBUG [main]o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
[18:02:47.677] DEBUG [main]o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[18:02:47.677] DEBUG [main]o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[18:02:47.677] DEBUG [main]o.h.v.i.x.c.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[18:02:47.682] DEBUG [main]o.h.v.i.e.ValidatorFactoryImpl - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[18:02:47.682] DEBUG [main]o.h.v.i.e.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[18:02:47.682] DEBUG [main]o.h.v.i.e.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[18:02:47.682] DEBUG [main]o.h.v.i.e.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[18:02:47.682] DEBUG [main]o.h.v.i.e.ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[18:02:47.683] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
[18:02:47.684] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
[18:02:47.686] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
[18:02:47.688] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
[18:02:47.689] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
[18:02:47.690] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
[18:02:47.691] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration'
[18:02:47.691] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration$$EnhancerBySpringCGLIB$$53f7e7da] - unable to determine constructor/method parameter names
[18:02:47.693] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[18:02:47.694] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faviconHandlerMapping'
[18:02:47.699] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'faviconRequestHandler'
[18:02:47.714] DEBUG [main]o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/**/favicon.ico] in 'faviconHandlerMapping'
[18:02:47.715] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
[18:02:47.715] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration$$EnhancerBySpringCGLIB$$f5b714af] - unable to determine constructor/method parameter names
[18:02:47.718] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@335b5620'
[18:02:47.734] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
[18:02:47.735] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$$EnhancerBySpringCGLIB$$97badf94] - unable to determine constructor/method parameter names
[18:02:47.735] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
[18:02:47.735] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
[18:02:47.735] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@335b5620'
[18:02:47.737] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsWebMvcConfigurer'
[18:02:47.739] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsWebMvcConfigurer' via factory method to bean named 'simpleMeterRegistry'
[18:02:47.739] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsWebMvcConfigurer' via factory method to bean named 'webMvcTagsProvider'
[18:02:47.740] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
[18:02:47.757] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
[18:02:47.761] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
[18:02:47.762] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
[18:02:47.762] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$a4fd8fc3] - unable to determine constructor/method parameter names
[18:02:47.765] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
[18:02:47.765] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
[18:02:47.765] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$d80b5663] - unable to determine constructor/method parameter names
[18:02:47.766] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' via constructor to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[18:02:47.775] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2XmlHttpMessageConverter'
[18:02:47.775] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration'
[18:02:47.777] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapperBuilder'
[18:02:47.777] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
[18:02:47.777] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$98aa05d9] - unable to determine constructor/method parameter names
[18:02:47.777] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:47.779] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
[18:02:47.779] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
[18:02:47.780] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[18:02:47.781] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:47.781] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
[18:02:47.783] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
[18:02:47.786] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
[18:02:47.786] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
[18:02:47.792] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
[18:02:47.792] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
[18:02:47.801] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2XmlHttpMessageConverter' via factory method to bean named 'jacksonObjectMapperBuilder'
[18:02:47.807] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
[18:02:47.808] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
[18:02:47.809] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
[18:02:47.809] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
[18:02:47.810] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
[18:02:47.827] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
[18:02:47.837] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
[18:02:47.843] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
[18:02:47.848] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
[18:02:47.849] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
[18:02:47.853] INFO  [main]o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[18:02:47.868] DEBUG [main]o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[18:02:47.893] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
[18:02:47.900] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
[18:02:47.928] DEBUG [main]o.s.w.s.m.m.a.RequestMappingHandlerMapping - 4 mappings in 'requestMappingHandlerMapping'
[18:02:47.929] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
[18:02:47.929] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
[18:02:47.930] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
[18:02:47.930] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
[18:02:47.933] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
[18:02:47.939] DEBUG [main]o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[18:02:47.939] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
[18:02:47.940] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
[18:02:47.943] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
[18:02:47.944] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
[18:02:47.945] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
[18:02:47.952] DEBUG [main]o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
[18:02:47.955] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
[18:02:47.958] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
[18:02:47.964] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
[18:02:47.966] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@335b5620'
[18:02:47.969] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerViewResolver'
[18:02:47.969] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
[18:02:47.970] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration$$EnhancerBySpringCGLIB$$9de23f19] - unable to determine constructor/method parameter names
[18:02:47.971] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[18:02:47.972] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[18:02:47.979] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
[18:02:47.979] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:47.986] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration'
[18:02:47.987] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration$$EnhancerBySpringCGLIB$$2c7ecc9e] - unable to determine constructor/method parameter names
[18:02:47.988] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'auditListener'
[18:02:47.991] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggingRebinder'
[18:02:47.991] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'refreshEventListener'
[18:02:47.992] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'refreshEventListener' via factory method to bean named 'contextRefresher'
[18:02:47.993] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration'
[18:02:47.994] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebChildContextFactory'
[18:02:47.995] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'managementServletContext'
[18:02:47.996] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'managementServletContext' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:47.998] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration'
[18:02:47.998] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration'
[18:02:47.998] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointOperationParameterMapper'
[18:02:48.001] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointCachingOperationInvokerAdvisor'
[18:02:48.001] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'endpointCachingOperationInvokerAdvisor' via factory method to bean named 'environment'
[18:02:48.002] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
[18:02:48.004] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanExporter'
[18:02:48.006] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectNamingStrategy'
[18:02:48.009] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
[18:02:48.017] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mbeanServer'
[18:02:48.022] DEBUG [main]o.s.j.s.JmxUtils - Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@63c12fb0
[18:02:48.027] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration'
[18:02:48.028] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$3b93b218] - unable to determine constructor/method parameter names
[18:02:48.029] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties'
[18:02:48.029] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties' via constructor to bean named 'environment'
[18:02:48.029] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:48.029] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.jmx-org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties'
[18:02:48.030] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jmxAnnotationEndpointDiscoverer'
[18:02:48.031] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jmxAnnotationEndpointDiscoverer' via factory method to bean named 'endpointOperationParameterMapper'
[18:02:48.034] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jmxIncludeExcludePropertyEndpointFilter'
[18:02:48.037] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jmxMBeanExporter'
[18:02:48.039] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jmxMBeanExporter' via factory method to bean named 'mbeanServer'
[18:02:48.039] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jmxMBeanExporter' via factory method to bean named 'environment'
[18:02:48.039] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jmxMBeanExporter' via factory method to bean named 'jmxAnnotationEndpointDiscoverer'
[18:02:48.091] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'endpointMediaTypes'
[18:02:48.092] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointDiscoverer'
[18:02:48.093] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointOperationParameterMapper'
[18:02:48.093] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointMediaTypes'
[18:02:48.095] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webExposeExcludePropertyEndpointFilter'
[18:02:48.097] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointDiscoverer'
[18:02:48.098] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerExposeExcludePropertyEndpointFilter'
[18:02:48.099] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pathMappedEndpoints'
[18:02:48.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'jmxAnnotationEndpointDiscoverer'
[18:02:48.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'servletEndpointDiscoverer'
[18:02:48.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'webEndpointDiscoverer'
[18:02:48.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'controllerEndpointDiscoverer'
[18:02:48.102] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:48.132] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration'
[18:02:48.132] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$970816df] - unable to determine constructor/method parameter names
[18:02:48.133] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.env-org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties'
[18:02:48.134] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
[18:02:48.134] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$$EnhancerBySpringCGLIB$$c6c3d148] - unable to determine constructor/method parameter names
[18:02:48.135] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[18:02:48.136] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
[18:02:48.136] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration'
[18:02:48.136] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$$EnhancerBySpringCGLIB$$84b64cb8] - unable to determine constructor/method parameter names
[18:02:48.137] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties'
[18:02:48.138] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration' via constructor to bean named 'management.endpoint.logfile-org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties'
[18:02:48.138] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration'
[18:02:48.138] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration'
[18:02:48.139] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration$$EnhancerBySpringCGLIB$$40898388] - unable to determine constructor/method parameter names
[18:02:48.140] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'
[18:02:48.140] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restTemplateTagConfigurer'
[18:02:48.143] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsRestTemplateCustomizer'
[18:02:48.144] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsRestTemplateCustomizer' via factory method to bean named 'simpleMeterRegistry'
[18:02:48.144] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'metricsRestTemplateCustomizer' via factory method to bean named 'restTemplateTagConfigurer'
[18:02:48.145] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration'
[18:02:48.146] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatMetricsBinder'
[18:02:48.146] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatMetricsBinder' via factory method to bean named 'simpleMeterRegistry'
[18:02:48.147] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
[18:02:48.148] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration$$EnhancerBySpringCGLIB$$1d7664fd] - unable to determine constructor/method parameter names
[18:02:48.148] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration' via constructor to bean named 'environment'
[18:02:48.148] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
[18:02:48.152] DEBUG [main]o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
[18:02:48.152] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$CglibAutoProxyConfiguration'
[18:02:48.153] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
[18:02:48.153] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
[18:02:48.153] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfigurer'
[18:02:48.240] DEBUG [main]o.s.w.s.v.f.FreeMarkerConfigurer - Cannot resolve template loader path [classpath:/templates/] to [java.io.File]: using SpringTemplateLoader as fallback
java.io.FileNotFoundException: class path resource [templates/] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/C:/Users/Administrator/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-server/2.1.1.RELEASE/spring-cloud-netflix-eureka-server-2.1.1.RELEASE.jar!/templates/
	at org.springframework.util.ResourceUtils.getFile(ResourceUtils.java:217)
	at org.springframework.core.io.AbstractFileResolvingResource.getFile(AbstractFileResolvingResource.java:154)
	at org.springframework.ui.freemarker.FreeMarkerConfigurationFactory.getTemplateLoaderForPath(FreeMarkerConfigurationFactory.java:345)
	at org.springframework.ui.freemarker.FreeMarkerConfigurationFactory.createConfiguration(FreeMarkerConfigurationFactory.java:297)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.afterPropertiesSet(FreeMarkerConfigurer.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:843)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at EurekaServerApplication.main(EurekaServerApplication.java:18)
[18:02:48.241] DEBUG [main]o.s.u.f.SpringTemplateLoader - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59, started on Sat Jan 30 18:02:42 CST 2021, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@38d8f54a] and template loader path [classpath:/templates/]
[18:02:48.243] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'freeMarkerConfiguration'
[18:02:48.244] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
[18:02:48.256] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
[18:02:48.257] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration$$EnhancerBySpringCGLIB$$114af6b9] - unable to determine constructor/method parameter names
[18:02:48.257] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:48.257] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
[18:02:48.258] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
[18:02:48.258] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gsonBuilder'
[18:02:48.259] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
[18:02:48.260] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[18:02:48.261] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
[18:02:48.262] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
[18:02:48.271] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'gson'
[18:02:48.272] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
[18:02:48.309] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
[18:02:48.310] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
[18:02:48.310] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$LoggingCodecConfiguration'
[18:02:48.311] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggingCodecCustomizer'
[18:02:48.311] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loggingCodecCustomizer' via factory method to bean named 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties'
[18:02:48.313] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration'
[18:02:48.313] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonCodecCustomizer'
[18:02:48.313] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonCodecCustomizer' via factory method to bean named 'jacksonObjectMapper'
[18:02:48.315] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration'
[18:02:48.315] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
[18:02:48.316] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskSchedulerBuilder'
[18:02:48.318] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[18:02:48.319] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
[18:02:48.322] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
[18:02:48.322] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$$EnhancerBySpringCGLIB$$25dfbdb0] - unable to determine constructor/method parameter names
[18:02:48.323] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restTemplateBuilder'
[18:02:48.330] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
[18:02:48.330] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
[18:02:48.331] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration'
[18:02:48.332] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration'
[18:02:48.332] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher'
[18:02:48.338] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaAutoServiceRegistration'
[18:02:48.340] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e097d59'
[18:02:48.340] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaServiceRegistry'
[18:02:48.340] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaAutoServiceRegistration' via factory method to bean named 'eurekaRegistration'
[18:02:48.341] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration'
[18:02:48.341] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaDiscoverClientMarker'
[18:02:48.343] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration'
[18:02:48.343] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties'
[18:02:48.344] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration'
[18:02:48.346] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration'
[18:02:48.348] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClientOptionalArgs'
[18:02:48.349] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration'
[18:02:48.354] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'discoveryClient'
[18:02:48.355] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClient'
[18:02:48.355] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'discoveryClient' via factory method to bean named 'eurekaClientConfigBean'
[18:02:48.356] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.CommonsClientAutoConfiguration'
[18:02:48.357] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration'
[18:02:48.357] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeDiscoveryClient'
[18:02:48.358] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryClient'
[18:02:48.358] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration'
[18:02:48.360] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'configurationProperties' with value of type String
[18:02:48.360] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.application.name' in PropertySource 'environmentProperties' with value of type String
[18:02:48.363] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleDiscoveryProperties'
[18:02:49.653] INFO  [main]o.s.c.c.u.InetUtils - Cannot determine local hostname
[18:02:49.654] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'discoveryClient'
[18:02:49.654] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeDiscoveryClient' via factory method to bean named 'simpleDiscoveryClient'
[18:02:49.656] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springClientFactory'
[18:02:49.659] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerClient'
[18:02:49.664] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesFactory'
[18:02:49.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ribbon-org.springframework.cloud.netflix.ribbon.ServerIntrospectorProperties'
[18:02:49.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig'
[18:02:49.666] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'asyncLoadBalancerInterceptor'
[18:02:49.667] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'asyncLoadBalancerInterceptor' via factory method to bean named 'loadBalancerClient'
[18:02:49.669] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'asyncRestTemplateCustomizer'
[18:02:49.670] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'asyncRestTemplateCustomizer' via factory method to bean named 'asyncLoadBalancerInterceptor'
[18:02:49.671] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig'
[18:02:49.674] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancedAsyncRestTemplateInitializer'
[18:02:49.675] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancedAsyncRestTemplateInitializer' via factory method to bean named 'asyncRestTemplateCustomizer'
[18:02:49.677] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration'
[18:02:49.678] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig'
[18:02:49.678] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'ribbonInterceptor'
[18:02:49.679] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancerRequestFactory'
[18:02:49.679] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration'
[18:02:49.682] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'loadBalancerRequestFactory' via factory method to bean named 'loadBalancerClient'
[18:02:49.685] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'ribbonInterceptor' via factory method to bean named 'loadBalancerClient'
[18:02:49.685] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'ribbonInterceptor' via factory method to bean named 'loadBalancerRequestFactory'
[18:02:49.687] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restTemplateCustomizer'
[18:02:49.688] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restTemplateCustomizer' via factory method to bean named 'ribbonInterceptor'
[18:02:49.689] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loadBalancedRestTemplateInitializerDeprecated'
[18:02:49.690] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.loadbalancer.retry-org.springframework.cloud.client.loadbalancer.LoadBalancerRetryProperties'
[18:02:49.690] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration'
[18:02:49.691] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'connManFactory'
[18:02:49.699] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'apacheHttpClientBuilder'
[18:02:49.721] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'apacheHttpClientFactory'
[18:02:49.723] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'apacheHttpClientFactory' via factory method to bean named 'apacheHttpClientBuilder'
[18:02:49.725] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.commons.httpclient.HttpClientConfiguration'
[18:02:49.725] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration'
[18:02:49.725] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'compositeCompatibilityVerifier'
[18:02:49.727] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springBootVersionVerifier'
[18:02:49.728] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
[18:02:49.729] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springBootVersionVerifier' via factory method to bean named 'spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties'
[18:02:49.732] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'compositeCompatibilityVerifier' via factory method to bean named 'springBootVersionVerifier'
[18:02:49.733] DEBUG [main]o.s.c.c.SpringBootVersionVerifier - Version found in Boot manifest [2.1.5.RELEASE]
[18:02:49.733] DEBUG [main]o.s.c.c.SpringBootVersionVerifier - Predicate [Predicate for Boot 2.1] was matched
[18:02:49.733] DEBUG [main]o.s.c.c.CompositeCompatibilityVerifier - All conditions are passing
[18:02:49.733] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration'
[18:02:49.735] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerBootstrap'
[18:02:49.736] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerAwareInstanceRegistry'
[18:02:49.737] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'serverCodecs'
[18:02:49.750] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerAwareInstanceRegistry' via factory method to bean named 'serverCodecs'
[18:02:49.755] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaApplicationInfoManager'
[18:02:49.755] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaClientConfigBean'
[18:02:49.755] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaClient' via factory method to bean named 'eurekaInstanceConfigBean'
[18:02:49.758] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaApplicationInfoManager' via factory method to bean named 'eurekaInstanceConfigBean'
[18:02:49.765] INFO  [main]o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
[18:02:49.817] INFO  [main]c.n.d.DiscoveryClient - Initializing Eureka in region us-east-1
[18:02:49.817] INFO  [main]c.n.d.DiscoveryClient - Client configured to neither register nor query for data.
[18:02:49.833] INFO  [main]c.n.d.DiscoveryClient - Discovery Client initialized at timestamp 1612000969832 with initial instances count: 0
[18:02:49.886] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaServerContext'
[18:02:49.888] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'peerEurekaNodes'
[18:02:49.888] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'peerAwareInstanceRegistry'
[18:02:49.888] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'peerEurekaNodes' via factory method to bean named 'serverCodecs'
[18:02:49.889] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'serverCodecs'
[18:02:49.889] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerAwareInstanceRegistry'
[18:02:49.889] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerContext' via factory method to bean named 'peerEurekaNodes'
[18:02:49.890] INFO  [main]c.n.e.DefaultEurekaServerContext - Initializing ...
[18:02:49.892] DEBUG [main]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:02:49.893] WARN  [main]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:02:49.914] INFO  [main]c.n.e.r.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: []
[18:02:49.915] INFO  [main]c.n.e.DefaultEurekaServerContext - Initialized
[18:02:49.915] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'peerAwareInstanceRegistry'
[18:02:49.915] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'eurekaServerBootstrap' via factory method to bean named 'eurekaServerContext'
[18:02:49.916] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eurekaController'
[18:02:49.917] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'eureka.dashboard-org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties'
[18:02:49.917] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.cloud.netflix.ribbon.eureka.RibbonEurekaAutoConfiguration'
[18:02:49.918] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration'
[18:02:49.918] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointServletHandlerMapping'
[18:02:49.922] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'webEndpointDiscoverer'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'servletEndpointDiscoverer'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'endpointMediaTypes'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'
[18:02:49.924] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:49.927] INFO  [main]o.s.b.a.e.w.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
[18:02:49.936] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'controllerEndpointHandlerMapping'
[18:02:49.936] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer'
[18:02:49.936] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'
[18:02:49.936] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'
[18:02:49.940] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration'
[18:02:49.940] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration'
[18:02:49.940] DEBUG [main]o.s.c.LocalVariableTableParameterNameDiscoverer - Cannot find '.class' file for class [class org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$$EnhancerBySpringCGLIB$$653f9967] - unable to determine constructor/method parameter names
[18:02:49.942] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' via constructor to bean named 'environment'
[18:02:49.942] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration'
[18:02:49.942] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties'
[18:02:49.957] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
[18:02:49.958] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Autodetecting user-defined JMX MBeans
[18:02:49.968] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
[18:02:49.969] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
[18:02:49.971] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[18:02:49.978] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[18:02:49.992] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[18:02:50.007] DEBUG [main]o.s.j.e.a.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e097d59,type=ConfigurationPropertiesRebinder]
[18:02:50.024] DEBUG [main]o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 0
[18:02:50.027] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaClient'
[18:02:50.027] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaInstanceConfigBean'
[18:02:50.027] DEBUG [main]o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'scopedTarget.eurekaRegistration' via factory method to bean named 'eurekaApplicationInfoManager'
[18:02:50.027] INFO  [main]o.s.c.n.e.s.EurekaServiceRegistry - Registering application EUREKA-SERVER with eureka with status UP
[18:02:50.030] DEBUG [main]o.s.c.c.d.h.DiscoveryClientHealthIndicator - Discovery Client has been initialized
[18:02:50.030] DEBUG [main]o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'eurekaAutoServiceRegistration'
[18:02:50.030] DEBUG [main]o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration'
[18:02:50.031] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerBootstrap - Setting the eureka configuration..
[18:02:50.032] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerBootstrap - Eureka data center value eureka.datacenter is not set, defaulting to default
[18:02:50.033] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerBootstrap - Eureka environment value eureka.environment is not set, defaulting to test
[18:02:50.049] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerBootstrap - isAws returned false
[18:02:50.049] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerBootstrap - Initialized server context
[18:02:50.050] INFO  [Thread-34]c.n.e.r.PeerAwareInstanceRegistryImpl - Got 1 instances from neighboring DS node
[18:02:50.050] INFO  [Thread-34]c.n.e.r.PeerAwareInstanceRegistryImpl - Renew threshold is: 1
[18:02:50.050] INFO  [Thread-34]c.n.e.r.PeerAwareInstanceRegistryImpl - Changing status to UP
[18:02:50.059] INFO  [Thread-34]o.s.c.n.e.s.EurekaServerInitializerConfiguration - Started Eureka Server
[18:02:50.067] DEBUG [main]o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.context.annotation.EnableAspectJAutoProxy', 'org.aspectj.lang.annotation.Aspect', 'org.aspectj.lang.reflect.Advice', 'org.aspectj.weaver.AnnotatedElement' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ArchaiusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.netflix.config.ConcurrentCompositeConfiguration', 'org.apache.commons.configuration.ConfigurationBuilder' (OnClassCondition)

   ArchaiusAutoConfiguration.ArchaiusEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   ArchaiusAutoConfiguration.ArchaiusEndpointConfiguration#archaiusEndpoint matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.archaius.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ArchaiusAutoConfiguration.PropagateEventsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.environment.EnvironmentChangeEvent' (OnClassCondition)
      - @ConditionalOnProperty (archaius.propagate.environmentChangedEvent) matched (OnPropertyCondition)

   AsyncLoadBalancerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.AsyncRestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient' (OnBeanCondition)

   AuditAutoConfiguration#auditListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.listener.AbstractAuditListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditAutoConfiguration.AuditEventRepositoryConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default (OnEnabledEndpointCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) found bean 'auditEventRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.audit.AuditEventsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AutoServiceRegistrationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   AutoServiceRegistrationConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.beans.enabled found so using endpoint default (OnEnabledEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnEnabledEndpoint no property management.endpoint.caches.enabled found so using endpoint default (OnEnabledEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CodecsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.codec.CodecConfigurer' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.features.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration#featuresEndpoint matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.features.enabled found so using endpoint default (OnEnabledEndpointCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found bean 'discoveryClient' (OnBeanCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryClientHealthIndicator matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.health-indicator.enabled) matched (OnPropertyCondition)

   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryCompositeHealthIndicator matched:
      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator,org.springframework.boot.actuate.health.HealthAggregator; SearchStrategy: all) found beans 'discoveryClientHealthIndicator', 'eurekaHealthIndicator', 'healthAggregator' (OnBeanCondition)

   CompatibilityVerifierAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.conditions.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.configprops.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DiscoveryClientOptionalArgsConfiguration#discoveryClientOptionalArgs matched:
      - @ConditionalOnClass found required class 'com.sun.jersey.api.client.filter.ClientFilter' (OnClassCondition)
      - @ConditionalOnMissingBean (types: com.netflix.discovery.AbstractDiscoveryClientOptionalArgs; SearchStrategy: current) did not find any beans (OnBeanCondition)

   DiskSpaceHealthIndicatorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthIndicatorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet; types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.env.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$Marker; SearchStrategy: all) found bean 'eurekaDiscoverClientMarker' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaAutoServiceRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaClientConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClientConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#eurekaInstanceConfigBean matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.EurekaInstanceConfig; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration#serviceManagementMetadataProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaHealthIndicatorConfiguration#eurekaHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.eureka.EurekaHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaApplicationInfoManager matched:
      - @ConditionalOnMissingBean (types: com.netflix.appinfo.ApplicationInfoManager; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaClient matched:
      - @ConditionalOnMissingBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: current) did not find any beans (OnBeanCondition)

   EurekaClientAutoConfiguration.RefreshableEurekaClientConfiguration#eurekaRegistration matched:
      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties; SearchStrategy: all) found bean 'spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties' (OnBeanCondition)

   EurekaDiscoveryClientConfiguration matched:
      - @ConditionalOnClass found required class 'com.netflix.discovery.EurekaClientConfig' (OnClassCondition)
      - @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration.EurekaClientConfigurationRefresher matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent' (OnClassCondition)

   EurekaServerAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cloud.netflix.eureka.server.EurekaServerMarkerConfiguration$Marker; SearchStrategy: all) found bean 'eurekaServerMarkerBean' (OnBeanCondition)

   EurekaServerAutoConfiguration#eurekaController matched:
      - @ConditionalOnProperty (eureka.dashboard.enabled) matched (OnPropertyCondition)

   EurekaServerAutoConfiguration#peerEurekaNodes matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.cluster.PeerEurekaNodes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EurekaServerAutoConfiguration.EurekaServerConfigBeanConfiguration#eurekaServerConfig matched:
      - @ConditionalOnMissingBean (types: com.netflix.eureka.EurekaServerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   HealthEndpointConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.health.enabled found so using endpoint default (OnEnabledEndpointCondition)
      - @ConditionalOnSingleCandidate (types: org.springframework.boot.actuate.health.HealthIndicatorRegistry; SearchStrategy: all) found a primary bean from beans 'healthIndicatorRegistry' (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#createHealthStatusHttpMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthStatusHttpMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthWebEndpointResponseMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthWebEndpointResponseMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.ServletWebHealthConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnEnabledEndpoint no property management.endpoint.health.enabled found so using endpoint default (OnEnabledEndpointCondition)

   HealthEndpointWebExtensionConfiguration.ServletWebHealthConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthIndicatorAutoConfiguration#healthAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthIndicatorAutoConfiguration#healthIndicatorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthIndicatorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default (OnEnabledEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.http.client.HttpClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.httpclientfactories.apache.enabled) matched (OnPropertyCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#apacheHttpClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.apache.http.impl.client.HttpClientBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#apacheHttpClientFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientConfiguration.ApacheHttpClientConfiguration#connManFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.http.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration#traceRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default (OnEnabledEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'traceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HystrixAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.netflix.hystrix.Hystrix', 'org.springframework.boot.actuate.health.HealthIndicator', 'org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration' (OnClassCondition)

   HystrixAutoConfiguration#hystrixHealthIndicator matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HystrixAutoConfiguration.HystrixMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.hystrix.HystrixMetricsBinder' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.binders.hystrix.enabled) matched (OnPropertyCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.info.enabled found so using endpoint default (OnEnabledEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) found bean 'jacksonObjectMapperBuilder' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration#mappingJackson2XmlHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.binders.jvm.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) found bean 'loadBalancerClient' (OnBeanCondition)

   LoadBalancerAutoConfiguration#loadBalancerRequestFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.LoadBalancerInterceptorConfig#restTemplateCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.logfile.enabled found so using endpoint default (OnEnabledEndpointCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.binders.logback.enabled) matched (OnPropertyCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.loggers.enabled found so using endpoint default (OnEnabledEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration#mappingsEndpoint matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.mappings.enabled found so using endpoint default (OnEnabledEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnEnabledEndpoint no property management.endpoint.metrics.enabled found so using endpoint default (OnEnabledEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)
      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)

   RefreshAutoConfiguration#contextRefresher matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#loggingRebinder matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshAutoConfiguration#refreshScope matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RefreshEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration', 'org.springframework.boot.actuate.health.Health' (OnClassCondition)

   RefreshEndpointAutoConfiguration#refreshScopeHealthIndicator matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.health.RefreshScopeHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   RefreshEndpointAutoConfiguration.RefreshEndpointConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration' (OnBeanCondition)

   RefreshEndpointAutoConfiguration.RefreshEndpointConfiguration#refreshEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) found bean 'contextRefresher'; @ConditionalOnMissingBean (types: org.springframework.cloud.endpoint.RefreshEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledEndpoint no property management.endpoint.refresh.enabled found so using endpoint default (OnEnabledEndpointCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)

   RestTemplateMetricsConfiguration#restTemplateTagConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestartEndpointWithoutIntegrationConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   RibbonAutoConfiguration matched:
      - AllNestedConditions 4 matched 0 did not; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.RibbonPresent @ConditionalOnClass found required class 'com.netflix.ribbon.Ribbon'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.AsyncRestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.AsyncRestTemplate'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.RestTemplatePresent @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'; NestedCondition on RibbonAutoConfiguration.RibbonClassesConditions.IClientPresent @ConditionalOnClass found required class 'com.netflix.client.IClient' (RibbonAutoConfiguration.RibbonClassesConditions)

   RibbonAutoConfiguration#loadBalancerClient matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.client.loadbalancer.LoadBalancerClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RibbonAutoConfiguration#propertiesFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.netflix.ribbon.PropertiesFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RibbonEurekaAutoConfiguration matched:
      - AllNestedConditions 3 matched 0 did not; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.OnEurekaClientEnabled found matching nested conditions @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched, @ConditionalOnProperty (eureka.client.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.EurekaBeans @ConditionalOnBean (types: com.netflix.discovery.EurekaClient; SearchStrategy: all) found bean 'scopedTarget.eurekaClient'; NestedCondition on ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition.Defaults found matching nested conditions @ConditionalOnClass found required class 'com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList', @ConditionalOnBean (types: org.springframework.cloud.netflix.ribbon.SpringClientFactory; SearchStrategy: all) found bean 'springClientFactory', @ConditionalOnProperty (ribbon.eureka.enabled) matched (ConditionalOnRibbonAndEurekaEnabled.OnRibbonAndEurekaEnabledCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.client.serviceregistry.ServiceRegistry; SearchStrategy: all) found bean 'eurekaServiceRegistry' (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration#serviceRegistryEndpoint matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.service-registry.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnProperty (management.metrics.export.simple.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnProperty (management.metrics.binders.files.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnProperty (management.metrics.binders.processor.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnProperty (management.metrics.binders.uptime.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default (OnEnabledEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   UtilAutoConfiguration matched:
      - @ConditionalOnProperty (spring.cloud.util.enabled) matched (OnPropertyCondition)

   UtilAutoConfiguration#inetUtils matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.util.InetUtils; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter matched:
      - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.HiddenHttpMethodFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver; types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration matched:
      - @ConditionalOnProperty (spring.mvc.favicon.enabled) matched (OnPropertyCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WritableEnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.env.EnvironmentEndpoint', 'org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoint.env.post.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) found bean 'environmentManager' (OnBeanCondition)

   WritableEnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.WritableEnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnEnabledEndpoint no property management.endpoint.env.enabled found so using endpoint default (OnEnabledEndpointCondition)

   WritableEnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnEnabledEndpoint no property management.endpoint.env.enabled found so using endpoint default (OnEnabledEndpointCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration#authenticationAuditListener:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.event.AbstractAuthenticationEvent' (OnClassCondition)

   AuditAutoConfiguration#authorizationAuditListener:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.access.event.AbstractAuthorizationEvent' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerJpaDependencyConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Cluster' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.driver.core.Session' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CloudHypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.client.hypermedia.RemoteResource; SearchStrategy: all) did not find any beans of type org.springframework.cloud.client.hypermedia.RemoteResource (OnBeanCondition)

   CloudServiceConnectorsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.java.CloudScanConfiguration' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.couchbase.client.java.Bucket', 'com.couchbase.client.spring.cache.CouchbaseCacheManager' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans of type javax.sql.DataSource (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DiscoveryClientOptionalArgsConfiguration#restTemplateDiscoveryClientOptionalArgs:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'com.sun.jersey.api.client.filter.ClientFilter' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchClientHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticSearchJestHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.searchbox.client.JestClient' (OnClassCondition)

   ElasticSearchRestHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   ElasticsearchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found beans of type 'org.springframework.boot.actuate.env.EnvironmentEndpoint' environmentEndpoint (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) found beans of type 'org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension' environmentEndpointWebExtension (OnBeanCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   EurekaClientAutoConfiguration.EurekaClientConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingScope @ConditionalOnMissingBean (types: org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; SearchStrategy: all) found beans of type 'org.springframework.cloud.autoconfigure.RefreshAutoConfiguration' org.springframework.cloud.autoconfigure.RefreshAutoConfiguration; NestedCondition on EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition.MissingClass @ConditionalOnMissingClass found unwanted class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (EurekaClientAutoConfiguration.OnMissingRefreshScopeCondition)

   EurekaClientConfigServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.config.server.config.ConfigServerProperties' (OnClassCondition)

   EurekaDiscoveryClientConfigServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.cloud.config.discovery.enabled) did not find property 'spring.cloud.config.discovery.enabled' (OnPropertyCondition)

   EurekaDiscoveryClientConfiguration.EurekaHealthCheckHandlerConfiguration:
      Did not match:
         - @ConditionalOnProperty (eureka.client.healthcheck.enabled) did not find property 'eureka.client.healthcheck.enabled' (OnPropertyCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=jsonb) did not find property 'spring.http.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.http.converters.preferred-json-mapper=gson) did not find property 'spring.http.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.core.HazelcastInstance', 'com.hazelcast.spring.cache.HazelcastCacheManager' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointWebExtensionConfiguration.ReactiveWebHealthConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthIndicatorAutoConfiguration#applicationHealthIndicator:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthIndicator,org.springframework.boot.actuate.health.ReactiveHealthIndicator; SearchStrategy: all) found beans of type 'org.springframework.boot.actuate.health.HealthIndicator' diskSpaceHealthIndicator (OnBeanCondition)

   HealthIndicatorAutoConfiguration.ReactiveHealthIndicatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpClientConfiguration.OkHttpClientConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'okhttp3.OkHttpClient' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.Resource' (OnClassCondition)

   HystrixAutoConfiguration.HystrixServletAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet' (OnClassCondition)

   HystrixAutoConfiguration.HystrixWebfluxManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HystrixSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.core.context.SecurityContext' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonAutoConfiguration.JodaDateTimeJacksonConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.fasterxml.jackson.datatype.joda.ser.DateTimeSerializer', 'com.fasterxml.jackson.datatype.joda.cfg.JacksonJodaDateFormat' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.JdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JestAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.searchbox.client.JestClient' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.clients.consumer.KafkaConsumer' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   LoadBalancerAutoConfiguration.RetryInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint:
      Did not match:
         - Log File did not find logging file (LogFileWebEndpointAutoConfiguration.LogFileCondition)

   MailHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' (OnClassCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.SessionFactory' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.ogm.session.Neo4jSession' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   NoopDiscoveryClientAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans of type 'org.springframework.cloud.client.discovery.DiscoveryClient' discoveryClient, compositeDiscoveryClient, simpleDiscoveryClient (OnBeanCondition)

   NoopDiscoveryClientAutoConfiguration.Boot15PortFinderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext' (OnClassCondition)
         - Ancestor org.springframework.cloud.client.discovery.noop.NoopDiscoveryClientAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.jwt.JwtDecoder' (OnClassCondition)

   PauseResumeEndpointsConfiguration#pauseEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PauseResumeEndpointsConfiguration#resumeEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cloud.context.restart.RestartEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.cloud.context.restart.RestartEndpoint (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveLoadBalancerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorCoreAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RefreshAutoConfiguration.JpaInvokerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   RestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   RestartEndpointWithIntegrationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)

   RestartEndpointWithoutIntegrationConfiguration#restartEndpointWithoutIntegration:
      Did not match:
         - @ConditionalOnEnabledEndpoint no property management.endpoint.restart.enabled found so using endpoint default (OnEnabledEndpointCondition)

   RibbonAutoConfiguration#loadBalancedRetryPolicyFactory:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.retry.support.RetryTemplate' (OnClassCondition)

   RibbonAutoConfiguration#ribbonApplicationContextInitializer:
      Did not match:
         - @ConditionalOnProperty (ribbon.eager-load.enabled) did not find property 'ribbon.eager-load.enabled' (OnPropertyCondition)

   RibbonAutoConfiguration.RibbonClientHttpRequestFactoryConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on RibbonAutoConfiguration.OnRibbonRestClientCondition.RibbonProperty @ConditionalOnProperty (ribbon.restclient.enabled) did not find property 'ribbon.restclient.enabled'; NestedCondition on RibbonAutoConfiguration.OnRibbonRestClientCondition.ZuulProperty @ConditionalOnProperty (ribbon.http.client.enabled) did not find property 'ribbon.http.client.enabled' (RibbonAutoConfiguration.OnRibbonRestClientCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.netflix.client.http.HttpRequest' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatcherProviderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnEnabledEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default (OnEnabledEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthIndicatorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.wavefront.WavefrontMeterRegistry' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#localeResolver:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.locale) did not find property 'locale' (OnPropertyCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration

    org.springframework.cloud.client.CommonsClientAutoConfiguration

    org.springframework.cloud.commons.httpclient.HttpClientConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration

    org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration

    org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration

    org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[18:02:50.069] DEBUG [main]o.s.c.e.PropertySourcesPropertyResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
[18:02:50.069] INFO  [main]o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-20000"]
[18:02:50.094] INFO  [main]o.s.b.w.e.t.TomcatWebServer - Tomcat started on port(s): 20000 (http) with context path ''
[18:02:50.095] INFO  [main]o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 20000
[18:02:50.098] INFO  [main]c.i.EurekaServerApplication - Started EurekaServerApplication in 12.52 seconds (JVM running for 14.061)
[18:02:50.224] INFO  [RMI TCP Connection(1)-192.168.124.5]o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[18:02:50.224] INFO  [RMI TCP Connection(1)-192.168.124.5]o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[18:02:50.226] DEBUG [RMI TCP Connection(1)-192.168.124.5]o.s.w.s.DispatcherServlet - Detected StandardServletMultipartResolver
[18:02:50.236] DEBUG [RMI TCP Connection(1)-192.168.124.5]o.s.w.s.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[18:02:50.236] INFO  [RMI TCP Connection(1)-192.168.124.5]o.s.w.s.DispatcherServlet - Completed initialization in 11 ms
[18:02:50.411] DEBUG [RMI TCP Connection(2)-192.168.124.5]o.s.c.e.PropertySourcesPropertyResolver - Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
[18:03:00.000] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:03:30.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:03:50.051] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:03:50.051] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:03:50.051] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:04:00.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:04:30.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:04:50.064] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 14ms
[18:04:50.064] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:04:50.064] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:05:00.001] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:05:30.005] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:05:42.290] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:05:42.301] DEBUG [http-nio-20000-exec-1]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode 
[18:05:42.534] DEBUG [http-nio-20000-exec-2]c.n.d.u.DeserializerStringCache - clearing global-level cache with size 1
[18:05:42.534] DEBUG [http-nio-20000-exec-2]c.n.d.u.DeserializerStringCache - clearing app-level serialization cache with size 9
[18:05:42.534] DEBUG [http-nio-20000-exec-2]c.n.e.r.ApplicationResource - Registering instance localhost:foodie-cart-service:10004 (replication=null)
[18:05:42.535] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - register FOODIE-CART-SERVICE, vip foodie-cart-service, leaseDuration 90, isReplication false
[18:05:42.536] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - No previous lease information found; it is new registration
[18:05:42.536] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:05:42.537] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.AlwaysMatchInstanceStatusRule - Returning the default instance status UP for instance localhost:foodie-cart-service:10004
[18:05:42.538] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V1 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V1 JSON, compact
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 JSON, compact
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 JSON, compact
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP foodie-cart-service V1 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP foodie-cart-service V1 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V2 JSON, full
[18:05:42.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V2 JSON, compact
[18:05:42.542] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, full
[18:05:42.552] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 JSON, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 JSON, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP foodie-cart-service V2 JSON, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP foodie-cart-service V2 JSON, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V1 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V1 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V1 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V1 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP foodie-cart-service V1 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP foodie-cart-service V1 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V2 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application FOODIE-CART-SERVICE V2 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS V2 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : Application ALL_APPS_DELTA V2 XML, compact
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : VIP foodie-cart-service V2 XML, full
[18:05:42.553] DEBUG [http-nio-20000-exec-2]c.n.e.r.ResponseCacheImpl - Invalidating the response cache key : SVIP foodie-cart-service V2 XML, full
[18:05:42.553] INFO  [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Registered instance FOODIE-CART-SERVICE/localhost:foodie-cart-service:10004 with status UP (replication=false)
[18:05:50.065] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:05:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:05:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:06:00.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:06:00.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:06:00.012] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:06:00.045] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:06:12.797] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:06:12.797] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:06:12.798] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:06:12.798] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:06:12.798] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:06:30.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:06:30.013] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:06:42.807] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:06:42.807] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:06:42.807] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:06:42.807] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:06:42.807] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:06:42.828] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 1
[18:06:42.828] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - The instance id localhost:foodie-cart-service:10004 is found with status UP and actiontype ADDED
[18:06:42.830] DEBUG [http-nio-20000-exec-6]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:06:50.065] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:06:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:06:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:07:00.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:07:00.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:07:00.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:07:12.814] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:07:12.814] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:07:12.814] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:07:12.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:07:12.815] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:07:30.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:07:30.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:07:30.014] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:07:42.823] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:07:42.823] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:07:42.823] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:07:42.823] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:07:42.823] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:07:50.065] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:07:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:07:50.065] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:08:00.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:08:00.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:08:00.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:08:12.829] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:08:12.829] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:08:12.830] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:08:12.830] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:08:12.830] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:08:30.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:08:30.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:08:30.102] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:08:42.835] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:08:42.835] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:08:42.835] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:08:42.835] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:08:42.836] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:08:50.066] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:08:50.066] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:08:50.066] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:09:00.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:09:00.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:09:00.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:09:00.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:09:00.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:09:12.842] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:09:12.842] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:09:12.843] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:09:12.843] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:09:12.843] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:09:30.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:09:30.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:09:30.103] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:09:42.847] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:09:42.847] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:09:42.847] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:09:42.847] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:09:42.847] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:09:50.067] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:09:50.067] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:09:50.067] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:10:00.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:10:00.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:10:00.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:10:00.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:10:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:10:12.853] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:10:12.854] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:10:12.854] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:10:12.854] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:10:12.854] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:10:30.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:10:30.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:10:30.104] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:10:42.861] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:10:42.861] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:10:42.861] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:10:42.861] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:10:42.861] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:10:50.067] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:10:50.067] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:10:50.067] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:11:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:11:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:11:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:11:12.866] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:11:12.866] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:11:12.867] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:11:12.867] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:11:12.867] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:11:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:11:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:11:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:11:42.873] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:11:42.873] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:11:42.873] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:11:42.873] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:11:42.874] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:11:50.068] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:11:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:11:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:12:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:12:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:12:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:12:00.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:12:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:12:12.878] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:12:12.878] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:12:12.878] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:12:12.878] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:12:12.878] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:12:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:12:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:12:30.105] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:12:42.884] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:12:42.884] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:12:42.884] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:12:42.884] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:12:42.884] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:12:49.895] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:12:49.895] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:12:50.068] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:12:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:12:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:13:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:13:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:13:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:13:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:13:00.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:13:12.890] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:13:12.890] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:13:12.890] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:13:12.890] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:13:12.890] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:13:30.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:13:30.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:13:30.106] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:13:42.896] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:13:42.896] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:13:42.896] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:13:42.896] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:13:42.896] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:13:50.068] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:13:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:13:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:14:00.107] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:14:00.107] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:14:00.107] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:14:12.902] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:14:12.902] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:14:12.902] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:14:12.902] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:14:12.902] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:14:30.108] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:14:30.108] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:14:30.108] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:14:42.907] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:14:42.907] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:14:42.907] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:14:42.907] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:14:42.907] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:14:50.068] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:14:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:14:50.068] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:15:00.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:15:00.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:15:00.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:15:00.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:15:00.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:15:12.912] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:15:12.912] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:15:12.912] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:15:12.912] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:15:12.912] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:15:30.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:15:30.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:15:30.109] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:15:42.918] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:15:42.918] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:15:42.918] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:15:42.918] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:15:42.918] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:15:50.069] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:15:50.069] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:15:50.069] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:16:00.110] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:16:00.110] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:16:00.110] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:16:00.110] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:16:00.110] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:16:12.924] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:16:12.924] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:16:12.925] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:16:12.925] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:16:12.925] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:16:30.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:16:30.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:16:30.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:16:42.930] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:16:42.930] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:16:42.930] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:16:42.931] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:16:42.931] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:16:50.070] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[18:16:50.070] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:16:50.070] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:17:00.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:17:00.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:17:00.111] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:17:12.935] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:17:12.935] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:17:12.936] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:17:12.936] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:17:12.936] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:17:30.120] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:17:30.120] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:17:30.120] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:17:42.941] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:17:42.941] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:17:42.941] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:17:42.941] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:17:42.942] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:17:49.915] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[18:17:50.071] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:17:50.071] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:17:50.071] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:18:00.121] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:18:00.121] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:18:00.121] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:18:00.121] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:18:00.121] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:18:12.950] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:18:12.950] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:18:12.950] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:18:12.950] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:18:12.950] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:18:30.122] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:18:30.122] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:18:30.122] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:18:42.956] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:18:42.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:18:42.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:18:42.956] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:18:42.957] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:18:50.072] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[18:18:50.072] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:18:50.072] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:19:00.123] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:19:00.123] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:19:00.123] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:19:00.123] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:19:00.123] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:19:12.962] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:19:12.962] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:19:12.962] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:19:12.962] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:19:12.962] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:19:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:19:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:19:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:19:42.967] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:19:42.967] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:19:42.967] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:19:42.967] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:19:42.967] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:19:50.072] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:19:50.072] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:19:50.072] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:20:00.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:20:00.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:20:00.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:20:12.977] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:20:12.977] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:20:12.977] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:20:12.978] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:20:12.978] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:20:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:20:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:20:30.124] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:20:42.985] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:20:42.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:20:42.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:20:42.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:20:42.985] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:20:50.076] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 3ms
[18:20:50.076] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:20:50.076] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:21:00.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:21:00.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:21:00.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:21:00.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:21:00.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:21:12.991] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:21:12.991] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:21:12.991] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:21:12.991] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:21:12.991] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:21:30.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:21:30.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:21:30.125] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:21:42.997] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:21:42.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:21:42.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:21:42.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:21:42.998] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:21:50.076] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:21:50.076] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:21:50.076] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:22:00.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:22:00.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:22:00.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:22:00.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:22:00.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:22:13.002] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:22:13.002] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:22:13.002] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:22:13.002] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:22:13.002] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:22:30.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:22:30.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:22:30.126] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:22:43.007] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:22:43.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:22:43.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:22:43.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:22:43.007] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:22:49.897] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:22:49.897] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:22:50.077] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[18:22:50.077] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:22:50.077] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:23:00.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:23:00.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:23:00.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:23:13.014] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:23:13.014] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:23:13.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:23:13.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:23:13.015] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:23:30.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:23:30.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:23:30.127] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:23:43.021] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:23:43.021] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:23:43.021] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:23:43.021] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:23:43.021] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:23:50.077] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:23:50.077] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:23:50.077] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:24:00.128] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:24:00.128] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:24:00.128] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:24:00.128] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:24:00.128] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:24:13.028] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:24:13.028] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:24:13.029] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:24:13.029] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:24:13.029] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:24:30.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:24:30.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:24:30.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:24:43.034] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:24:43.034] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:24:43.035] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:24:43.035] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:24:43.035] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:24:50.078] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:24:50.078] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:24:50.078] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:25:00.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:25:00.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:25:00.129] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:25:00.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:25:00.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:25:13.045] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:25:13.045] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:25:13.046] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:25:13.046] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:25:13.046] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:25:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:25:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:25:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:25:43.052] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:25:43.052] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:25:43.052] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:25:43.052] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:25:43.052] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:25:50.079] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:25:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:25:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:26:00.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:26:00.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:26:00.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:26:13.059] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:26:13.059] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:26:13.059] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:26:13.059] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:26:13.059] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:26:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:26:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:26:30.130] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:26:43.065] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:26:43.065] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:26:43.065] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:26:43.065] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:26:43.065] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:26:50.079] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:26:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:26:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:27:00.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:27:00.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:27:00.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:27:00.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:27:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:27:13.071] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:27:13.071] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:27:13.071] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:27:13.071] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:27:13.071] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:27:30.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:27:30.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:27:30.131] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:27:43.078] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:27:43.078] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:27:43.078] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:27:43.078] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:27:43.078] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:27:50.079] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:27:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:27:50.079] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:28:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:28:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:28:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:28:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:28:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:28:13.082] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:28:13.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:28:13.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:28:13.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:28:13.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:28:30.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:28:30.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:28:30.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:28:43.087] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:28:43.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:28:43.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:28:43.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:28:43.087] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:28:50.080] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:28:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:28:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:29:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:29:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:29:00.132] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:29:13.092] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:29:13.092] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:29:13.092] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:29:13.092] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:29:13.093] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:29:30.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:29:30.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:29:30.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:29:43.099] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:29:43.099] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:29:43.099] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:29:43.100] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:29:43.100] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:29:50.080] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:29:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:29:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:30:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:30:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:30:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:30:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:30:00.133] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:30:13.105] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:30:13.105] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:30:13.105] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:30:13.105] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:30:13.105] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:30:30.134] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:30:30.134] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:30:30.134] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:30:43.112] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:30:43.112] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:30:43.112] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:30:43.112] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:30:43.112] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:30:50.080] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:30:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:30:50.080] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:31:00.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:31:00.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:31:00.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:31:00.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:31:00.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:31:13.117] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:31:13.117] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:31:13.117] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:31:13.117] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:31:13.117] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:31:30.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:31:30.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:31:30.135] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:31:43.123] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:31:43.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:31:43.123] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:31:43.124] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:31:43.124] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:31:50.081] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:31:50.081] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:31:50.081] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:32:00.136] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:32:00.136] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:32:00.136] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:32:13.130] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:32:13.130] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:32:13.130] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:32:13.130] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:32:13.130] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:32:30.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:32:30.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:32:30.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:32:43.134] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:32:43.134] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:32:43.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:32:43.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:32:43.135] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:32:49.899] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:32:49.899] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:32:49.914] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[18:32:50.081] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:32:50.081] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:32:50.081] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:33:00.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:33:00.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:33:00.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:33:00.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:33:00.137] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:33:13.140] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:33:13.140] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:33:13.140] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:33:13.140] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:33:13.140] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:33:30.138] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:33:30.138] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:33:30.138] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:33:43.146] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:33:43.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:33:43.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:33:43.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:33:43.146] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:33:50.082] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:33:50.082] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:33:50.082] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:34:00.139] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:34:00.139] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:34:00.139] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:34:00.139] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:34:00.139] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:34:13.151] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:34:13.151] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:34:13.151] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:34:13.151] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:34:13.151] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:34:30.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:34:30.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:34:30.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:34:43.155] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:34:43.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:34:43.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:34:43.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:34:43.156] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:34:50.082] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:34:50.082] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:34:50.082] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:35:00.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:35:00.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:35:00.140] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:35:13.160] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:35:13.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:35:13.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:35:13.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:35:13.160] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:35:30.141] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:35:30.141] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:35:30.141] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:35:43.166] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:35:43.166] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:35:43.166] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:35:43.167] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:35:43.167] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:35:50.083] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:35:50.083] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:35:50.083] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:36:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:36:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:36:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:36:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:36:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:36:13.184] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:36:13.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:36:13.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:36:13.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:36:13.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:36:30.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:36:30.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:36:30.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:36:43.192] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:36:43.192] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:36:43.192] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:36:43.192] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:36:43.192] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:36:50.083] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:36:50.083] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:36:50.083] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:37:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:37:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:37:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:37:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:37:00.142] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:37:13.201] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:37:13.201] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:37:13.201] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:37:13.201] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:37:13.201] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:37:30.143] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:37:30.143] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:37:30.143] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:37:43.206] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:37:43.206] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:37:43.206] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:37:43.206] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:37:43.206] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:37:50.084] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:37:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:37:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:38:00.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:38:00.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:38:00.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:38:13.212] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:38:13.212] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:38:13.212] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:38:13.212] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:38:13.212] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:38:30.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:38:30.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:38:30.144] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:38:43.216] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:38:43.216] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:38:43.216] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:38:43.216] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:38:43.216] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:38:50.084] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:38:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:38:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:39:00.145] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:39:00.145] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:39:00.145] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:39:00.145] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:39:00.145] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:39:13.224] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:39:13.224] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:39:13.225] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:39:13.225] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:39:13.225] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:39:30.150] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:39:30.150] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:39:30.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:39:43.231] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:39:43.231] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:39:43.231] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:39:43.231] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:39:43.231] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:39:50.084] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:39:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:39:50.084] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:40:00.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:40:00.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:40:00.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:40:00.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:40:00.151] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:40:13.236] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:40:13.236] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:40:13.236] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:40:13.236] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:40:13.236] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:40:30.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:40:30.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:40:30.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:40:43.242] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:40:43.242] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:40:43.242] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:40:43.242] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:40:43.242] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:40:50.085] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[18:40:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:40:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:41:00.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:41:00.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:41:00.152] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:41:13.248] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:41:13.248] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:41:13.248] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:41:13.248] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:41:13.248] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:41:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:41:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:41:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:41:43.253] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:41:43.253] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:41:43.253] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:41:43.253] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:41:43.253] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:41:50.085] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:41:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:41:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:42:00.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:42:00.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:42:00.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:42:00.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:42:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:42:13.260] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:42:13.260] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:42:13.261] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:42:13.261] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:42:13.261] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:42:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:42:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:42:30.153] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:42:43.270] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:42:43.270] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:42:43.270] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:42:43.271] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:42:43.271] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:42:49.900] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:42:49.900] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:42:50.085] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:42:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:42:50.085] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:43:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:43:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:43:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:43:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:43:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:43:13.277] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:43:13.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:43:13.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:43:13.277] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:43:13.278] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:43:30.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:43:30.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:43:30.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:43:43.284] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:43:43.284] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:43:43.284] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:43:43.284] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:43:43.284] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:43:50.086] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:43:50.086] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:43:50.086] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:44:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:44:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:44:00.154] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:44:13.291] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:44:13.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:44:13.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:44:13.291] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:44:13.292] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:44:30.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:44:30.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:44:30.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:44:43.298] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:44:43.298] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:44:43.298] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:44:43.298] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:44:43.298] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:44:50.086] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:44:50.086] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:44:50.086] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:45:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:45:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:45:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:45:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:45:00.155] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:45:13.303] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:45:13.303] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:45:13.303] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:45:13.303] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:45:13.303] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:45:30.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:45:30.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:45:30.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:45:43.307] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:45:43.307] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:45:43.307] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:45:43.307] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:45:43.307] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:45:50.087] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:45:50.087] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:45:50.087] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:46:00.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:46:00.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:46:00.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:46:00.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:46:00.156] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:46:13.313] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:46:13.313] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:46:13.313] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:46:13.313] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:46:13.313] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:46:30.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:46:30.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:46:30.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:46:43.320] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:46:43.320] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:46:43.320] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:46:43.320] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:46:43.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:46:50.087] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:46:50.087] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:46:50.087] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:47:00.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:47:00.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:47:00.157] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:47:13.327] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:47:13.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:47:13.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:47:13.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:47:13.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:47:30.158] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:47:30.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:47:30.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:47:43.332] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:47:43.332] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:47:43.332] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:47:43.332] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:47:43.332] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:47:49.915] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[18:47:50.088] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:47:50.088] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:47:50.088] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:48:00.158] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:48:00.158] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:48:00.158] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:48:00.158] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:48:00.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:48:13.338] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:48:13.338] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:48:13.338] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:48:13.338] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:48:13.339] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:48:30.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:48:30.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:48:30.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:48:43.344] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:48:43.344] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:48:43.344] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:48:43.344] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:48:43.344] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:48:50.088] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:48:50.088] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:48:50.088] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:49:00.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:49:00.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:49:00.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:49:00.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:49:00.159] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:49:13.348] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:49:13.348] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:49:13.348] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:49:13.348] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:49:13.348] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:49:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:49:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:49:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:49:43.355] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:49:43.355] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:49:43.355] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:49:43.355] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:49:43.355] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:49:50.089] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:49:50.089] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:49:50.089] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:50:00.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:50:00.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:50:00.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:50:13.360] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:50:13.360] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:50:13.360] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:50:13.360] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:50:13.360] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:50:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:50:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:50:30.160] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:50:43.366] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:50:43.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:50:43.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:50:43.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:50:43.367] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:50:50.089] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:50:50.089] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:50:50.089] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:51:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:51:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:51:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:51:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:51:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:51:13.372] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:51:13.372] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:51:13.372] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:51:13.372] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:51:13.372] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:51:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:51:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:51:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:51:43.378] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:51:43.378] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:51:43.378] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:51:43.378] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:51:43.378] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:51:50.090] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:51:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:51:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:52:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:52:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:52:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:52:00.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:52:00.162] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:52:13.382] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:52:13.382] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:52:13.382] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:52:13.382] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:52:13.382] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:52:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:52:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:52:30.161] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:52:43.388] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:52:43.388] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:52:43.388] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:52:43.388] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:52:43.388] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:52:49.902] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[18:52:49.902] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[18:52:50.090] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:52:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:52:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:53:00.162] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:53:00.162] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:53:00.162] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:53:13.394] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:53:13.394] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:53:13.395] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:53:13.395] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:53:13.395] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:53:30.165] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:53:30.165] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:53:30.165] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:53:43.400] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:53:43.400] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:53:43.400] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:53:43.400] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:53:43.400] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:53:50.090] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:53:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:53:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:54:00.166] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:54:00.166] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:54:00.166] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:54:00.167] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:54:00.167] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:54:13.405] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:54:13.405] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:54:13.406] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:54:13.406] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:54:13.406] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:54:30.168] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:54:30.168] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:54:30.168] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:54:43.410] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:54:43.410] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:54:43.410] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:54:43.410] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:54:43.410] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:54:50.090] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:54:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:54:50.090] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:55:00.169] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:55:00.169] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:55:00.169] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:55:00.169] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:55:00.170] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:55:13.415] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:55:13.415] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:55:13.415] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:55:13.415] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:55:13.415] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:55:30.174] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:55:30.174] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:55:30.174] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:55:43.420] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:55:43.420] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:55:43.420] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:55:43.420] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:55:43.420] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:55:50.091] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:55:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:55:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:56:00.175] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:56:00.175] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:56:00.175] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:56:13.424] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:56:13.424] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:56:13.424] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:56:13.425] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:56:13.425] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:56:30.176] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:56:30.176] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:56:30.176] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:56:43.432] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:56:43.432] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:56:43.432] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:56:43.432] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:56:43.432] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:56:50.091] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:56:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:56:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:57:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:57:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:57:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:57:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:57:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[18:57:13.438] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:57:13.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:57:13.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:57:13.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:57:13.438] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:57:30.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:57:30.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:57:30.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:57:43.443] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:57:43.443] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:57:43.443] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:57:43.443] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:57:43.443] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:57:50.091] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:57:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:57:50.091] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:58:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:58:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:58:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[18:58:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[18:58:00.177] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:58:13.448] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:58:13.448] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:58:13.449] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:58:13.449] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:58:13.449] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:58:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:58:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:58:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:58:43.454] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:58:43.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:58:43.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:58:43.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:58:43.454] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:58:50.092] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:58:50.092] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:58:50.092] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[18:59:00.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:59:00.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:59:00.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:59:13.460] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:59:13.460] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:59:13.460] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:59:13.460] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:59:13.460] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:59:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[18:59:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[18:59:30.178] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[18:59:43.466] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[18:59:43.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[18:59:43.466] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[18:59:43.467] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[18:59:43.467] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[18:59:50.093] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[18:59:50.093] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[18:59:50.093] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:00:00.179] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:00:00.179] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:00:00.179] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:00:00.179] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:00:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:00:13.474] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:00:13.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:00:13.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:00:13.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:00:13.474] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:00:30.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:00:30.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:00:30.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:00:43.479] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:00:43.479] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:00:43.479] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:00:43.479] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:00:43.479] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:00:50.093] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:00:50.093] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:00:50.093] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:01:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:01:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:01:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:01:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:01:00.180] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:01:13.483] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:01:13.483] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:01:13.483] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:01:13.483] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:01:13.483] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:01:30.181] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:01:30.181] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:01:30.181] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:01:43.488] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:01:43.488] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:01:43.488] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:01:43.488] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:01:43.488] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:01:50.094] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[19:01:50.094] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:01:50.094] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:02:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:02:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:02:00.183] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:02:13.494] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:02:13.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:02:13.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:02:13.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:02:13.494] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:02:30.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:02:30.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:02:30.183] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:02:43.499] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:02:43.499] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:02:43.499] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:02:43.499] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:02:43.499] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:02:49.904] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:02:49.904] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:02:49.915] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[19:02:50.094] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:02:50.094] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:02:50.094] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:03:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:03:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:03:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:03:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:03:00.182] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:03:13.503] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:03:13.503] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:03:13.503] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:03:13.503] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:03:13.503] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:03:30.183] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:03:30.183] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:03:30.183] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:03:43.509] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:03:43.509] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:03:43.509] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:03:43.509] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:03:43.509] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:03:50.095] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:03:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:03:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:04:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:04:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:04:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:04:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:04:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:04:13.514] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:04:13.514] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:04:13.514] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:04:13.514] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:04:13.514] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:04:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:04:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:04:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:04:43.519] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:04:43.519] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:04:43.520] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:04:43.521] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:04:43.521] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:04:50.095] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:04:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:04:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:05:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:05:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:05:00.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:05:13.526] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:05:13.526] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:05:13.526] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:05:13.526] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:05:13.526] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:05:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:05:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:05:30.184] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:05:43.531] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:05:43.531] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:05:43.532] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:05:43.532] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:05:43.532] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:05:50.095] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:05:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:05:50.095] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:06:00.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:06:00.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:06:00.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:06:00.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:06:00.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:06:13.537] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:06:13.539] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:06:13.539] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:06:13.539] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:06:13.539] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:06:30.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:06:30.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:06:30.185] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:06:43.547] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:06:43.547] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:06:43.548] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:06:43.548] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:06:43.548] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:06:50.096] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[19:06:50.096] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:06:50.096] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:07:00.186] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:07:00.186] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:07:00.186] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:07:00.187] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:07:00.187] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:07:13.551] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:07:13.551] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:07:13.552] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:07:13.552] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:07:13.552] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:07:30.187] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:07:30.187] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:07:30.187] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:07:43.559] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:07:43.559] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:07:43.559] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:07:43.559] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:07:43.559] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:07:50.097] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:07:50.097] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:07:50.097] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:08:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:08:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:08:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:08:13.564] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:08:13.564] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:08:13.564] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:08:13.564] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:08:13.564] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:08:30.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:08:30.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:08:30.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:08:43.572] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:08:43.572] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:08:43.572] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:08:43.572] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:08:43.573] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:08:50.097] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:08:50.097] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:08:50.097] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:09:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:09:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:09:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:09:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:09:00.188] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:09:13.583] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:09:13.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:09:13.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:09:13.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:09:13.583] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:09:30.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:09:30.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:09:30.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:09:43.589] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:09:43.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:09:43.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:09:43.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:09:43.589] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:09:50.098] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:09:50.098] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:09:50.098] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:10:00.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:10:00.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:10:00.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:10:00.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:10:00.189] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:10:13.595] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:10:13.595] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:10:13.595] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:10:13.595] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:10:13.595] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:10:30.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:10:30.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:10:30.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:10:43.602] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:10:43.602] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:10:43.602] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:10:43.602] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:10:43.602] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:10:50.098] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:10:50.098] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:10:50.098] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:11:00.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:11:00.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:11:00.190] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:11:13.607] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:11:13.607] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:11:13.607] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:11:13.607] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:11:13.607] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:11:30.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:11:30.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:11:30.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:11:43.612] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:11:43.612] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:11:43.612] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:11:43.612] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:11:43.612] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:11:50.099] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:11:50.099] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:11:50.099] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:12:00.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:12:00.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:12:00.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:12:00.191] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:12:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:12:13.617] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:12:13.617] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:12:13.617] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:12:13.617] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:12:13.617] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:12:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:12:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:12:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:12:43.621] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:12:43.621] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:12:43.623] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:12:43.624] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:12:43.625] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:12:49.906] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:12:49.906] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:12:50.100] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:12:50.100] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:12:50.100] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:13:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:13:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:13:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:13:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:13:00.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:13:13.631] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:13:13.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:13:13.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:13:13.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:13:13.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:13:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:13:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:13:30.192] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:13:43.636] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:13:43.636] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:13:43.636] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:13:43.636] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:13:43.636] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:13:50.100] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[19:13:50.100] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:13:50.100] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:14:00.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:14:00.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:14:00.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:14:13.641] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:14:13.641] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:14:13.641] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:14:13.641] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:14:13.641] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:14:30.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:14:30.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:14:30.193] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:14:43.647] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:14:43.647] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:14:43.647] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:14:43.647] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:14:43.647] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:14:50.101] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:14:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:14:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:15:00.196] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:15:00.196] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:15:00.196] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:15:00.196] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:15:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:15:13.651] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:15:13.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:15:13.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:15:13.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:15:13.651] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:15:30.196] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:15:30.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:15:30.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:15:43.656] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:15:43.656] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:15:43.656] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:15:43.656] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:15:43.656] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:15:50.101] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:15:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:15:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:16:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:16:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:16:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:16:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:16:00.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:16:13.662] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:16:13.662] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:16:13.662] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:16:13.662] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:16:13.662] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:16:30.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:16:30.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:16:30.197] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:16:43.668] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:16:43.668] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:16:43.669] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:16:43.669] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:16:43.669] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:16:50.101] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:16:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:16:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:17:00.198] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:17:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:17:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:17:13.675] DEBUG [http-nio-20000-exec-10]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:17:13.675] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:17:13.675] DEBUG [http-nio-20000-exec-10]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:17:13.675] DEBUG [http-nio-20000-exec-10]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:17:13.675] DEBUG [http-nio-20000-exec-10]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:17:30.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:17:30.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:17:30.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:17:43.680] DEBUG [http-nio-20000-exec-1]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:17:43.680] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:17:43.680] DEBUG [http-nio-20000-exec-1]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:17:43.680] DEBUG [http-nio-20000-exec-1]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:17:43.680] DEBUG [http-nio-20000-exec-1]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:17:49.916] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[19:17:50.101] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:17:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:17:50.101] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:18:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:18:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:18:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:18:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:18:00.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:18:13.685] DEBUG [http-nio-20000-exec-4]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:18:13.686] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:18:13.686] DEBUG [http-nio-20000-exec-4]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:18:13.686] DEBUG [http-nio-20000-exec-4]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:18:13.686] DEBUG [http-nio-20000-exec-4]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:18:30.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:18:30.199] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:18:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:18:43.691] DEBUG [http-nio-20000-exec-7]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:18:43.691] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:18:43.691] DEBUG [http-nio-20000-exec-7]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:18:43.691] DEBUG [http-nio-20000-exec-7]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:18:43.691] DEBUG [http-nio-20000-exec-7]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:18:50.102] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:18:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:18:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:19:00.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:19:00.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:19:00.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:19:00.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:19:00.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:19:14.351] DEBUG [http-nio-20000-exec-5]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:19:14.351] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:19:14.351] DEBUG [http-nio-20000-exec-5]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:19:14.353] DEBUG [http-nio-20000-exec-5]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:19:14.353] DEBUG [http-nio-20000-exec-5]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:19:30.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:19:30.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:19:30.200] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:19:44.356] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:19:44.356] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:19:44.356] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:19:44.356] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:19:44.356] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:19:50.102] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:19:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:19:50.102] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:20:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:20:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:20:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:20:14.361] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:20:14.362] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:20:14.362] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:20:14.364] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:20:14.364] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:20:30.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:20:30.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:20:30.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:20:44.371] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:20:44.371] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:20:44.372] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:20:44.372] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:20:44.372] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:20:50.103] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:20:50.103] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:20:50.105] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:21:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:21:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:21:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:21:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:21:00.201] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:21:14.377] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:21:14.377] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:21:14.377] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:21:14.377] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:21:14.378] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:21:30.202] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:21:30.202] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:21:30.202] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:21:44.383] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:21:44.383] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:21:44.383] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:21:44.383] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:21:44.383] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:21:50.104] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:21:50.104] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:21:50.104] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:22:00.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:22:00.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:22:00.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:22:00.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:22:00.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:22:14.393] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:22:14.394] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:22:14.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:22:14.396] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:22:14.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:22:30.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:22:30.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:22:30.203] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:22:44.403] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:22:44.403] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:22:44.403] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:22:44.403] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:22:44.403] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:22:49.908] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:22:49.908] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:22:50.105] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:22:50.105] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:22:50.105] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:23:00.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:23:00.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:23:00.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:23:14.411] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:23:14.411] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:23:14.411] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:23:14.411] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:23:14.412] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:23:30.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:23:30.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:23:30.204] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:23:44.417] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:23:44.417] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:23:44.417] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:23:44.417] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:23:44.417] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:23:50.105] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:23:50.105] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:23:50.105] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:24:00.205] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:24:00.205] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:24:00.205] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:24:00.205] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:24:00.205] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:24:14.422] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:24:14.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:24:14.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:24:14.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:24:14.422] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:24:30.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:24:30.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:24:30.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:24:44.427] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:24:44.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:24:44.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:24:44.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:24:44.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:24:50.106] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:24:50.106] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:24:50.106] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:25:00.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:25:00.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:25:00.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:25:00.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:25:00.206] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:25:14.433] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:25:14.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:25:14.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:25:14.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:25:14.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:25:30.207] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:25:30.207] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:25:30.207] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:25:44.437] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:25:44.437] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:25:44.437] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:25:44.437] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:25:44.437] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:25:50.106] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:25:50.106] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:25:50.106] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:26:00.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:26:00.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:26:00.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:26:14.442] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:26:14.442] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:26:14.442] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:26:14.442] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:26:14.442] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:26:30.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:26:30.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:26:30.208] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:26:44.447] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:26:44.447] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:26:44.447] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:26:44.447] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:26:44.447] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:26:50.107] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:26:50.107] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:26:50.107] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:27:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:27:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:27:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:27:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:27:00.210] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:27:14.451] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:27:14.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:27:14.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:27:14.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:27:14.451] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:27:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:27:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:27:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:27:44.456] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:27:44.456] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:27:44.456] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:27:44.456] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:27:44.456] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:27:50.107] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:27:50.107] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:27:50.107] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:28:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:28:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:28:00.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:28:00.210] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:28:00.211] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:28:14.461] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:28:14.461] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:28:14.461] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:28:14.461] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:28:14.461] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:28:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:28:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:28:30.209] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:28:44.466] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:28:44.466] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:28:44.466] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:28:44.467] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:28:44.467] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:28:50.108] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:28:50.108] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:28:50.108] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:29:00.210] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:29:00.210] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:29:00.210] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:29:14.474] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:29:14.474] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:29:14.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:29:14.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:29:14.475] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:29:30.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:29:30.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:29:30.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:29:44.481] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:29:44.481] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:29:44.481] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:29:44.481] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:29:44.481] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:29:50.108] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:29:50.108] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:29:50.108] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:30:00.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:30:00.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:30:00.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:30:00.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:30:00.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:30:14.487] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:30:14.487] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:30:14.487] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:30:14.487] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:30:14.487] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:30:30.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:30:30.214] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:30:30.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:30:44.491] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:30:44.491] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:30:44.491] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:30:44.491] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:30:44.491] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:30:50.109] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:30:50.109] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:30:50.109] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:31:00.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:31:00.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:31:00.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:31:00.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:31:00.215] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:31:14.495] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:31:14.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:31:14.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:31:14.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:31:14.495] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:31:30.216] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:31:30.216] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:31:30.216] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:31:44.501] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:31:44.501] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:31:44.501] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:31:44.501] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:31:44.501] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:31:50.110] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:31:50.110] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:31:50.110] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:32:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:32:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:32:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:32:14.506] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:32:14.506] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:32:14.506] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:32:14.506] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:32:14.506] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:32:30.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:32:30.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:32:30.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:32:44.511] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:32:44.511] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:32:44.511] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:32:44.511] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:32:44.511] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:32:49.911] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:32:49.911] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:32:49.917] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[19:32:50.110] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:32:50.110] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:32:50.110] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:33:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:33:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:33:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:33:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:33:00.217] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:33:14.515] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:33:14.515] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:33:14.515] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:33:14.515] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:33:14.515] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:33:30.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:33:30.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:33:30.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:33:44.521] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:33:44.521] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:33:44.521] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:33:44.521] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:33:44.521] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:33:50.110] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:33:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:33:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:34:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:34:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:34:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:34:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:34:00.218] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:34:14.527] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:34:14.527] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:34:14.527] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:34:14.527] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:34:14.528] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:34:30.219] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:34:30.219] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:34:30.219] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:34:44.532] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:34:44.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:34:44.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:34:44.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:34:44.532] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:34:50.111] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:34:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:34:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:35:00.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:35:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:35:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:35:14.538] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:35:14.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:35:14.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:35:14.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:35:14.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:35:30.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:35:30.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:35:30.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:35:44.542] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:35:44.542] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:35:44.542] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:35:44.542] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:35:44.542] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:35:50.111] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:35:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:35:50.111] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:36:00.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:36:00.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:36:00.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:36:00.220] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:36:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:36:14.546] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:36:14.546] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:36:14.546] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:36:14.546] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:36:14.546] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:36:30.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:36:30.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:36:30.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:36:44.625] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:36:44.625] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:36:44.626] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:36:44.626] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:36:44.626] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:36:50.115] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 4ms
[19:36:50.115] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:36:50.115] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:37:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:37:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:37:00.221] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:37:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:37:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:37:14.633] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:37:14.633] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:37:14.633] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:37:14.633] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:37:14.633] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:37:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:37:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:37:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:37:44.639] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:37:44.639] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:37:44.639] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:37:44.639] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:37:44.639] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:37:50.115] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:37:50.115] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:37:50.115] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:38:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:38:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:38:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:38:14.643] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:38:14.643] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:38:14.643] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:38:14.643] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:38:14.643] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:38:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:38:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:38:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:38:44.649] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:38:44.649] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:38:44.649] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:38:44.650] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:38:44.650] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:38:50.116] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:38:50.116] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:38:50.116] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:39:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:39:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:39:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:39:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:39:00.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:39:14.658] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:39:14.658] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:39:14.658] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:39:14.658] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:39:14.658] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:39:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:39:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:39:30.222] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:39:44.676] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:39:44.676] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:39:44.676] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:39:44.676] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:39:44.676] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:39:50.117] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:39:50.117] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:39:50.118] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:40:00.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:40:00.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:40:00.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:40:00.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:40:00.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:40:14.680] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:40:14.680] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:40:14.681] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:40:14.681] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:40:14.681] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:40:30.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:40:30.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:40:30.223] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:40:44.688] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:40:44.688] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:40:44.688] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:40:44.688] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:40:44.688] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:40:50.117] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:40:50.118] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:40:50.118] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:41:00.224] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:41:00.224] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:41:00.224] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:41:14.702] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:41:14.702] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:41:14.702] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:41:14.702] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:41:14.702] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:41:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:41:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:41:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:41:45.181] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:41:45.181] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:41:45.181] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:41:45.181] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:41:45.181] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:41:50.118] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:41:50.118] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:41:50.118] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:42:00.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:42:00.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:42:00.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:42:15.333] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:42:15.333] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:42:15.333] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:42:15.333] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:42:15.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:42:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:42:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:42:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:42:30.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:42:30.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:42:45.348] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:42:45.348] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:42:45.348] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:42:45.348] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:42:45.348] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:42:49.912] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:42:49.929] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:42:50.119] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:42:50.119] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:42:50.119] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:43:00.225] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:43:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:43:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:43:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:43:00.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:43:15.355] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:43:15.355] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:43:15.355] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:43:15.355] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:43:15.355] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:43:30.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:43:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:43:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:43:45.362] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:43:45.362] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:43:45.362] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:43:45.362] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:43:45.362] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:43:50.119] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:43:50.119] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:43:50.119] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:44:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:44:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:44:00.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:44:15.368] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:44:15.368] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:44:15.368] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:44:15.368] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:44:15.368] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:44:30.226] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:44:30.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:44:30.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:44:45.375] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:44:45.375] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:44:45.376] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:44:45.377] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:44:45.377] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:44:50.120] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:44:50.120] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:44:50.121] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:45:00.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:45:00.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:45:00.227] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:45:15.385] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:45:15.385] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:45:15.386] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:45:15.386] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:45:15.386] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:45:30.228] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:45:30.228] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:45:30.228] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:45:45.395] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:45:45.395] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:45:45.396] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:45:45.396] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:45:45.396] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:45:50.121] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:45:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:45:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:46:00.228] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:46:00.228] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:46:00.234] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:46:00.234] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:46:00.234] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:46:00.234] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:46:00.235] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:46:15.406] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:46:15.406] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:46:15.407] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:46:15.407] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:46:15.407] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:46:30.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:46:30.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:46:30.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:46:45.414] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:46:45.414] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:46:45.414] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:46:45.414] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:46:45.414] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:46:50.121] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:46:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:46:50.123] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:47:00.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:47:00.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:47:00.229] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:47:15.425] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:47:15.426] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:47:15.426] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:47:15.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:47:15.427] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:47:30.230] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:47:30.230] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:47:30.230] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:47:45.433] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:47:45.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:47:45.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:47:45.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:47:45.433] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:47:49.917] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[19:47:50.122] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:47:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:47:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:48:00.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:48:00.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:48:00.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:48:15.441] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:48:15.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:48:15.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:48:15.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:48:15.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:48:30.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:48:30.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:48:30.231] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:48:45.452] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:48:45.452] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:48:45.452] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:48:45.453] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:48:45.454] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:48:50.122] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:48:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:48:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:49:00.232] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:49:00.232] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:49:00.232] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:49:15.462] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:49:15.462] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:49:15.462] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:49:15.462] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:49:15.462] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:49:30.233] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:49:30.234] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:49:45.477] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:49:45.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:49:45.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:49:45.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:49:45.477] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:49:50.122] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:49:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:49:50.122] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:50:00.235] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:50:00.235] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:50:00.235] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:50:15.484] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:50:15.484] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:50:15.484] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:50:15.484] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:50:15.484] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:50:30.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:50:30.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:50:30.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:50:45.489] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:50:45.489] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:50:45.489] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:50:45.489] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:50:45.489] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:50:50.123] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:50:50.123] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:50:50.123] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:51:00.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:51:00.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:51:00.236] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:51:15.496] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:51:15.496] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:51:15.496] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:51:15.496] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:51:15.496] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:51:30.237] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:51:30.237] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:51:30.237] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:51:45.502] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:51:45.502] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:51:45.502] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:51:45.502] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:51:45.502] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:51:50.124] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:51:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:51:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:52:00.237] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:52:00.237] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:52:00.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:52:15.510] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:52:15.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:52:15.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:52:15.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:52:15.510] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:52:30.238] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:52:30.238] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:52:30.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:52:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:52:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:52:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:52:30.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:52:45.516] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:52:45.516] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:52:45.516] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:52:45.516] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:52:45.516] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:52:49.931] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[19:52:49.933] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[19:52:50.124] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:52:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:52:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:53:00.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:53:00.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:53:00.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:53:15.525] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:53:15.525] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:53:15.525] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:53:15.525] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:53:15.525] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:53:30.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:53:30.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:53:30.239] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:53:45.535] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:53:45.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:53:45.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:53:45.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:53:45.535] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:53:50.124] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:53:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:53:50.124] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:54:00.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:54:00.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:54:00.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:54:15.541] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:54:15.541] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:54:15.541] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:54:15.541] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:54:15.541] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:54:30.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:54:30.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:54:30.240] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:54:45.546] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:54:45.546] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:54:45.548] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:54:45.548] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:54:45.548] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:54:50.125] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:54:50.125] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:54:50.125] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:55:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:55:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:55:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:55:15.553] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:55:15.553] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:55:15.556] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:55:15.556] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:55:15.557] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:55:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:55:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:55:30.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:55:30.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:55:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:55:45.562] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:55:45.562] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:55:45.563] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:55:45.563] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:55:45.563] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:55:50.126] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:55:50.126] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:55:50.126] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:56:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:56:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:56:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:56:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:56:00.241] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:56:15.569] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:56:15.569] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:56:15.569] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:56:15.569] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:56:15.569] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:56:30.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:56:30.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:56:30.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:56:45.575] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:56:45.575] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:56:45.576] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:56:45.576] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:56:45.576] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:56:50.127] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:56:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:56:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:57:00.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:57:00.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:57:00.242] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:57:15.586] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:57:15.586] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:57:15.586] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:57:15.587] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:57:15.588] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:57:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:57:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:57:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:57:45.596] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:57:45.596] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:57:45.596] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:57:45.596] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:57:45.596] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:57:50.127] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:57:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:57:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:58:00.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:58:00.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:58:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:58:15.607] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:58:15.607] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:58:15.607] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:58:15.607] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:58:15.607] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:58:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:58:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:58:30.243] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:58:45.614] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:58:45.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:58:45.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:58:45.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:58:45.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:58:50.127] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:58:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:58:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:59:00.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:59:00.246] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[19:59:15.621] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:59:15.621] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:59:15.623] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:59:15.623] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:59:15.623] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:59:30.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[19:59:30.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[19:59:30.244] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[19:59:45.632] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[19:59:45.632] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[19:59:45.633] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[19:59:45.635] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[19:59:45.635] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[19:59:50.127] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[19:59:50.127] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[19:59:50.128] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:00:00.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:00:00.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:00:00.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:00:15.645] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:00:15.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:00:15.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:00:15.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:00:15.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:00:30.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:00:30.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:00:30.245] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:00:45.652] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:00:45.652] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:00:45.652] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:00:45.652] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:00:45.652] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:00:50.128] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:00:50.128] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:00:50.128] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:01:00.246] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:01:00.246] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:01:00.246] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:01:15.658] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:01:15.658] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:01:15.658] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:01:15.658] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:01:15.659] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:01:30.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:01:30.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:01:30.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:01:45.665] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:01:45.665] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:01:45.665] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:01:45.665] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:01:45.665] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:01:50.128] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:01:50.128] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:01:50.128] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:02:00.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:02:00.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:02:00.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:02:00.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:02:00.247] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:02:00.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:02:00.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:02:15.674] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:02:15.674] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:02:15.674] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:02:15.674] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:02:15.674] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:02:30.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:02:30.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:02:30.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:02:45.683] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:02:45.683] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:02:45.683] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:02:45.683] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:02:45.683] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:02:49.918] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[20:02:49.935] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:02:49.937] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:02:50.129] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:02:50.129] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:02:50.129] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:03:00.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:03:00.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:03:00.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:03:15.689] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:03:15.689] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:03:15.689] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:03:15.689] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:03:15.689] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:03:30.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:03:30.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:03:30.248] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:03:45.698] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:03:45.698] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:03:45.698] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:03:45.698] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:03:45.699] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:03:50.130] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:03:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:03:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:04:00.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:04:00.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:04:00.249] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:04:15.706] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:04:15.706] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:04:15.707] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:04:15.707] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:04:15.707] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:04:30.250] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:04:30.251] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:04:30.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:04:45.712] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:04:45.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:04:45.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:04:45.713] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:04:45.714] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:04:50.130] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:04:50.131] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:04:50.131] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:05:00.251] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:05:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:05:15.719] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:05:15.719] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:05:15.719] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:05:15.719] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:05:15.719] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:05:30.251] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:05:30.251] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:05:30.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:05:45.736] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:05:45.736] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:05:45.736] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:05:45.736] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:05:45.736] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:05:50.131] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:05:50.131] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:05:50.131] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:06:00.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:06:00.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:06:00.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:06:15.740] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:06:15.744] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:06:15.745] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:06:15.745] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:06:15.745] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:06:30.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:06:30.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:06:30.252] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:06:45.751] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:06:45.751] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:06:45.751] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:06:45.751] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:06:45.751] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:06:50.132] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:06:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:06:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:07:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:07:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:07:00.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:07:15.756] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:07:15.756] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:07:15.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:07:15.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:07:15.757] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:07:30.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:07:30.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:07:30.253] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:07:45.765] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:07:45.765] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:07:45.765] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:07:45.765] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:07:45.766] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:07:50.132] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:07:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:07:50.132] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:08:00.254] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:08:00.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:08:15.772] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:08:15.772] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:08:15.772] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:08:15.772] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:08:15.772] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:08:30.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:08:30.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:08:30.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:08:45.777] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:08:45.778] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:08:45.778] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:08:45.778] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:08:45.778] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:08:50.133] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:08:50.133] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:08:50.133] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:09:00.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:09:00.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:09:00.255] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:09:15.783] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:09:15.783] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:09:15.784] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:09:15.784] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:09:15.784] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:09:30.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:09:30.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:09:30.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:09:45.795] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:09:45.796] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:09:45.798] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:09:45.801] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:09:45.801] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:09:50.133] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:09:50.133] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:09:50.133] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:10:00.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:10:00.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:10:00.256] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:10:15.808] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:10:15.808] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:10:15.809] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:10:15.809] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:10:15.809] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:10:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:10:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:10:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:10:45.813] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:10:45.813] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:10:45.813] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:10:45.813] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:10:45.813] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:10:50.134] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:10:50.134] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:10:50.134] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:11:00.258] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:11:00.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:11:15.819] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:11:15.819] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:11:15.820] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:11:15.820] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:11:15.820] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:11:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:11:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:11:30.259] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:11:45.826] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:11:45.826] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:11:45.826] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:11:45.826] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:11:45.826] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:11:50.135] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:11:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:11:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:12:00.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:12:00.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:12:00.262] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:12:15.835] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:12:15.835] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:12:15.837] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:12:15.837] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:12:15.837] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:12:30.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:12:30.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:12:30.260] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:12:45.846] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:12:45.846] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:12:45.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:12:45.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:12:45.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:12:49.938] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:12:49.938] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:12:50.134] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:12:50.134] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:12:50.134] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:13:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:13:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:13:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:13:15.868] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:13:15.868] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:13:15.868] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:13:15.868] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:13:15.868] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:13:30.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:13:30.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:13:30.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:13:45.877] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:13:45.877] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:13:45.877] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:13:45.877] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:13:45.877] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:13:50.135] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:13:50.136] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:13:50.136] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:14:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:14:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:14:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:14:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:14:00.261] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:14:00.263] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:14:00.263] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:14:15.890] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:14:15.890] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:14:15.890] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:14:15.891] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:14:15.891] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:14:30.262] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:14:30.262] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:14:30.262] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:14:45.897] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:14:45.897] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:14:45.898] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:14:45.898] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:14:45.898] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:14:50.136] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:14:50.136] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:14:50.136] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:15:00.263] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:15:00.263] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:15:00.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:15:15.904] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:15:15.904] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:15:15.904] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:15:15.904] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:15:15.906] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:15:30.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:15:30.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:15:30.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:15:45.911] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:15:45.912] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:15:45.912] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:15:45.912] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:15:45.912] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:15:50.137] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:15:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:15:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:16:00.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:16:00.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:16:00.264] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:16:15.916] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:16:15.916] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:16:15.917] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:16:15.918] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:16:15.918] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:16:30.265] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:16:30.265] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:16:30.265] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:16:45.923] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:16:45.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:16:45.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:16:45.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:16:45.923] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:16:50.137] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:16:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:16:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:17:00.266] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:17:00.266] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:17:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:17:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:17:00.272] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:17:00.272] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:17:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:17:15.931] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:17:15.932] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:17:15.932] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:17:15.933] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:17:15.934] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:17:30.266] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:17:30.266] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:17:30.266] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:17:45.941] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:17:45.941] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:17:45.941] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:17:45.941] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:17:45.941] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:17:49.918] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[20:17:50.137] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:17:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:17:50.137] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:18:00.267] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:18:00.267] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:18:00.267] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:18:15.951] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:18:15.951] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:18:15.951] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:18:15.951] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:18:15.951] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:18:30.268] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:18:30.268] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:18:30.268] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:18:45.959] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:18:45.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:18:45.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:18:45.960] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:18:45.960] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:18:50.138] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:18:50.138] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:18:50.138] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:19:00.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:19:00.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:19:00.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:19:15.966] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:19:15.966] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:19:15.966] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:19:15.966] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:19:15.966] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:19:30.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:19:30.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:19:30.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:19:45.984] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:19:45.984] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:19:45.987] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:19:45.987] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:19:45.987] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:19:50.138] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:19:50.138] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:19:50.138] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:20:00.269] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:20:00.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:20:00.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:20:15.996] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:20:15.996] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:20:15.996] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:20:15.996] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:20:15.996] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:20:30.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:20:30.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:20:46.003] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:20:46.003] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:20:46.003] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:20:46.003] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:20:46.003] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:20:50.139] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:20:50.139] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:20:50.139] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:21:00.270] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:21:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:21:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:21:16.010] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:21:16.010] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:21:16.011] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:21:16.011] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:21:16.011] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:21:30.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:21:30.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:21:30.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:21:46.019] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:21:46.019] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:21:46.019] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:21:46.019] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:21:46.019] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:21:50.139] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:21:50.141] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:21:50.141] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:22:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:22:00.271] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:22:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:22:16.024] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:22:16.024] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:22:16.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:22:16.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:22:16.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:22:30.272] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:22:30.272] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:22:30.272] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:22:46.030] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:22:46.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:22:46.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:22:46.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:22:46.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:22:49.939] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:22:49.939] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:22:50.140] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:22:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:22:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:23:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:23:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:23:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:23:16.038] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:23:16.038] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:23:16.039] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:23:16.041] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:23:16.041] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:23:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:23:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:23:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:23:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:23:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:23:30.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:23:30.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:23:46.048] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:23:46.048] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:23:46.048] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:23:46.048] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:23:46.048] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:23:50.140] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:23:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:23:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:24:00.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:24:00.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:24:00.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:24:16.057] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:24:16.057] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:24:16.057] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:24:16.057] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:24:16.057] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:24:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:24:30.273] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:24:30.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:24:46.063] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:24:46.063] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:24:46.063] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:24:46.064] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:24:46.064] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:24:50.140] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:24:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:24:50.140] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:25:00.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:25:00.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:25:00.274] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:25:16.070] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:25:16.071] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:25:16.071] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:25:16.071] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:25:16.071] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:25:30.275] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:25:30.275] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:25:30.275] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:25:46.076] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:25:46.077] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:25:46.077] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:25:46.077] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:25:46.077] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:25:50.141] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:25:50.141] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:25:50.141] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:26:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:26:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:26:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:26:16.084] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:26:16.084] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:26:16.084] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:26:16.084] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:26:16.084] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:26:30.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:26:30.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:26:30.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:26:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:26:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:26:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:26:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:26:46.093] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:26:46.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:26:46.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:26:46.093] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:26:46.094] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:26:50.142] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:26:50.142] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:26:50.142] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:27:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:27:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:27:00.276] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:27:16.101] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:27:16.101] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:27:16.102] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:27:16.102] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:27:16.102] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:27:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:27:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:27:30.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:27:46.107] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:27:46.107] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:27:46.107] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:27:46.107] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:27:46.107] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:27:50.143] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:27:50.143] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:27:50.143] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:28:00.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:28:00.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:28:00.277] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:28:16.111] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:28:16.111] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:28:16.111] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:28:16.111] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:28:16.112] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:28:30.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:28:30.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:28:30.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:28:46.116] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:28:46.117] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:28:46.117] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:28:46.117] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:28:46.117] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:28:50.144] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:28:50.146] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:28:50.146] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:29:00.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:29:00.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:29:00.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:29:16.123] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:29:16.124] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:29:16.124] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:29:16.124] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:29:16.124] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:29:30.278] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:29:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:29:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:29:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:29:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:29:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:29:30.285] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:29:46.133] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:29:46.133] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:29:46.133] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:29:46.133] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:29:46.133] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:29:50.145] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:29:50.145] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:29:50.145] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:30:00.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:30:00.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:30:00.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:30:16.136] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:30:16.136] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:30:16.136] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:30:16.136] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:30:16.136] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:30:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:30:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:30:30.279] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:30:46.142] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:30:46.142] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:30:46.142] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:30:46.142] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:30:46.142] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:30:50.146] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:30:50.146] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:30:50.146] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:31:00.280] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:31:00.280] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:31:00.280] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:31:16.148] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:31:16.148] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:31:16.148] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:31:16.148] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:31:16.149] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:31:30.281] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:31:30.281] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:31:30.281] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:31:46.155] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:31:46.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:31:46.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:31:46.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:31:46.155] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:31:50.147] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:31:50.147] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:31:50.147] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:32:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:32:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:32:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:32:16.163] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:32:16.163] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:32:16.163] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:32:16.163] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:32:16.163] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:32:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:32:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:32:30.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:32:46.170] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:32:46.170] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:32:46.170] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:32:46.170] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:32:46.170] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:32:49.923] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[20:32:49.940] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:32:49.940] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:32:50.147] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:32:50.148] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:32:50.148] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:33:00.282] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:33:16.175] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:33:16.175] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:33:16.175] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:33:16.175] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:33:16.175] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:33:30.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:33:30.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:33:30.285] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:33:46.184] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:33:46.184] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:33:46.184] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:33:46.184] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:33:46.184] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:33:50.148] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:33:50.149] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:33:50.149] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:34:00.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:34:00.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:34:00.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:34:16.190] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:34:16.190] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:34:16.190] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:34:16.190] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:34:16.191] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:34:30.283] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:34:30.285] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:34:30.285] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:34:46.196] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:34:46.196] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:34:46.196] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:34:46.196] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:34:46.196] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:34:50.148] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:34:50.148] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:34:50.148] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:35:00.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:35:00.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:35:00.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:35:16.203] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:35:16.203] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:35:16.203] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:35:16.203] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:35:16.203] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:35:30.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:35:30.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:35:30.284] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:35:46.207] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:35:46.207] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:35:46.207] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:35:46.207] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:35:46.207] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:35:50.149] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:35:50.149] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:35:50.149] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:36:00.285] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:36:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:36:16.214] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:36:16.214] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:36:16.214] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:36:16.214] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:36:16.214] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:36:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:36:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:36:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:36:46.220] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:36:46.220] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:36:46.220] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:36:46.220] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:36:46.220] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:36:50.150] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:36:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:36:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:37:00.286] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:37:00.286] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:37:00.286] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:37:16.227] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:37:16.228] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:37:16.228] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:37:16.228] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:37:16.228] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:37:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:37:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:37:30.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:37:46.232] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:37:46.232] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:37:46.232] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:37:46.232] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:37:46.232] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:37:50.150] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:37:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:37:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:38:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:38:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:38:00.287] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:38:16.235] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:38:16.235] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:38:16.235] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:38:16.235] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:38:16.235] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:38:30.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:38:30.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:38:30.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:38:46.241] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:38:46.241] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:38:46.241] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:38:46.242] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:38:46.243] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:38:50.150] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:38:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:38:50.150] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:39:00.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:39:00.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:39:00.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:39:00.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:39:00.288] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:39:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:39:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:39:16.248] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:39:16.248] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:39:16.248] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:39:16.248] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:39:16.248] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:39:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:39:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:39:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:39:46.255] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:39:46.255] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:39:46.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:39:46.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:39:46.256] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:39:50.151] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:39:50.151] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:39:50.151] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:40:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:40:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:40:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:40:16.263] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:40:16.263] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:40:16.263] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:40:16.263] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:40:16.263] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:40:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:40:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:40:30.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:40:46.270] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:40:46.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:40:46.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:40:46.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:40:46.271] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:40:50.151] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:40:50.151] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:40:50.151] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:41:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:41:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:41:00.289] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:41:16.279] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:41:16.279] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:41:16.279] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:41:16.279] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:41:16.279] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:41:30.290] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:41:30.290] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:41:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:41:46.288] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:41:46.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:41:46.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:41:46.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:41:46.289] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:41:50.152] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:41:50.152] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:41:50.152] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:42:00.291] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:42:00.293] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:42:16.296] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:42:16.296] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:42:16.296] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:42:16.296] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:42:16.296] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:42:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:42:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:42:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:42:46.303] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:42:46.303] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:42:46.303] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:42:46.303] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:42:46.303] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:42:49.942] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:42:49.942] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:42:50.153] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:42:50.153] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:42:50.153] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:43:00.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:43:00.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:43:00.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:43:16.312] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:43:16.312] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:43:16.312] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:43:16.312] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:43:16.312] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:43:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:43:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:43:30.292] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:43:46.319] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:43:46.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:43:46.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:43:46.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:43:46.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:43:50.153] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:43:50.153] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:43:50.153] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:44:00.293] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:44:00.293] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:44:00.293] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:44:16.325] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:44:16.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:44:16.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:44:16.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:44:16.325] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:44:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:44:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:44:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:44:46.331] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:44:46.331] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:44:46.331] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:44:46.331] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:44:46.331] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:44:50.154] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:44:50.154] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:44:50.154] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:45:00.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:45:00.295] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:45:00.295] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:45:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:45:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:45:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:45:00.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:45:16.341] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:45:16.341] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:45:16.341] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:45:16.341] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:45:16.341] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:45:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:45:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:45:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:45:46.348] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:45:46.348] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:45:46.348] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:45:46.348] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:45:46.348] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:45:50.154] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:45:50.154] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:45:50.154] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:46:00.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:46:00.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:46:00.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:46:16.355] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:46:16.355] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:46:16.355] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:46:16.355] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:46:16.355] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:46:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:46:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:46:30.294] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:46:46.361] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:46:46.362] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:46:46.362] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:46:46.362] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:46:46.362] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:46:50.155] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:46:50.155] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:46:50.155] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:47:00.295] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:47:00.295] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:47:00.295] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:47:16.368] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:47:16.368] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:47:16.368] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:47:16.369] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:47:16.370] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:47:30.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:47:30.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:47:30.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:47:46.376] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:47:46.376] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:47:46.376] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:47:46.376] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:47:46.376] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:47:49.920] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[20:47:50.155] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:47:50.155] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:47:50.155] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:48:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:48:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:48:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:48:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:48:00.296] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:48:16.381] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:48:16.381] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:48:16.381] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:48:16.381] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:48:16.381] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:48:30.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:48:30.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:48:30.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:48:30.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:48:30.297] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:48:46.385] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:48:46.385] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:48:46.386] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:48:46.386] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:48:46.386] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:48:50.156] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:48:50.156] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:48:50.156] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:49:00.298] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:49:00.298] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:49:00.298] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:49:16.389] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:49:16.389] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:49:16.389] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:49:16.389] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:49:16.389] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:49:30.299] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:49:30.299] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:49:30.299] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:49:46.395] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:49:46.395] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:49:46.395] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:49:46.395] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:49:46.395] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:49:50.157] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:49:50.157] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:49:50.157] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:50:00.300] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:50:00.300] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:50:00.300] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:50:16.401] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:50:16.401] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:50:16.401] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:50:16.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:50:16.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:50:30.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:50:30.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:50:30.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:50:46.406] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:50:46.406] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:50:46.406] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:50:46.406] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:50:46.406] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:50:50.158] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:50:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:50:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:51:00.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:51:00.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:51:00.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:51:00.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:51:00.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:51:16.410] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:51:16.410] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:51:16.410] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:51:16.410] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:51:16.410] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:51:30.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:51:30.301] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:51:30.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:51:30.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:51:30.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:51:46.421] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:51:46.421] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:51:46.421] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:51:46.421] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:51:46.421] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:51:50.158] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:51:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:51:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:52:00.302] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:52:00.302] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:52:00.302] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:52:16.433] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:52:16.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:52:16.434] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:52:16.435] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:52:16.435] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:52:30.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:52:30.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:52:30.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:52:46.439] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:52:46.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:52:46.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:52:46.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:52:46.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:52:49.944] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[20:52:49.944] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[20:52:50.158] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:52:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:52:50.158] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:53:00.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:53:00.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:53:00.303] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:53:16.443] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:53:16.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:53:16.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:53:16.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:53:16.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:53:30.304] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:53:30.304] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:53:30.304] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:53:46.449] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:53:46.449] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:53:46.449] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:53:46.449] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:53:46.450] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:53:50.159] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:53:50.159] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:53:50.159] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:54:00.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:54:00.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:54:00.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:54:00.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:54:00.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:54:16.453] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:54:16.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:54:16.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:54:16.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:54:16.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:54:30.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:54:30.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:54:30.305] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:54:46.467] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:54:46.467] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:54:46.469] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:54:46.469] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:54:46.469] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:54:50.160] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:54:50.160] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:54:50.160] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:55:00.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:55:00.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:55:00.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:55:00.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:55:00.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:55:16.473] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:55:16.473] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:55:16.473] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:55:16.473] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:55:16.473] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:55:30.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:55:30.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:55:30.306] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:55:46.479] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:55:46.479] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:55:46.480] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:55:46.480] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:55:46.480] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:55:50.160] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:55:50.160] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:55:50.160] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:56:00.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:56:00.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:56:00.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:56:16.485] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:56:16.486] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:56:16.486] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:56:16.486] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:56:16.486] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:56:30.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:56:30.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:56:30.307] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:56:46.491] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:56:46.491] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:56:46.491] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:56:46.491] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:56:46.491] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:56:50.161] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:56:50.161] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:56:50.161] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:57:00.308] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:57:00.308] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:57:00.308] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[20:57:00.308] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[20:57:00.308] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:57:16.504] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:57:16.504] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:57:16.504] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:57:16.504] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:57:16.504] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:57:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:57:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:57:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:57:46.510] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:57:46.510] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:57:46.510] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:57:46.510] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:57:46.510] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:57:50.162] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:57:50.164] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:57:50.164] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:58:00.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:58:00.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:58:00.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:58:00.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:58:00.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[20:58:16.520] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:58:16.520] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:58:16.520] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:58:16.520] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:58:16.520] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:58:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:58:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:58:30.309] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:58:46.524] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:58:46.528] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:58:46.528] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:58:46.528] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:58:46.528] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:58:50.162] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[20:58:50.163] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:58:50.163] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[20:59:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:59:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:59:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:59:16.535] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:59:16.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:59:16.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:59:16.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:59:16.536] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:59:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[20:59:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[20:59:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[20:59:46.541] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[20:59:46.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[20:59:46.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[20:59:46.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[20:59:46.541] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[20:59:50.162] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[20:59:50.162] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[20:59:50.162] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:00:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:00:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:00:00.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:00:00.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:00:00.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:00:16.545] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:00:16.546] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:00:16.546] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:00:16.546] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:00:16.546] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:00:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:00:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:00:30.310] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:00:46.553] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:00:46.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:00:46.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:00:46.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:00:46.554] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:00:50.163] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:00:50.163] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:00:50.163] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:01:00.311] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:01:00.311] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:01:00.311] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:01:00.311] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:01:00.311] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:01:16.560] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:01:16.560] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:01:16.560] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:01:16.560] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:01:16.560] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:01:30.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:01:30.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:01:30.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:01:46.569] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:01:46.569] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:01:46.569] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:01:46.569] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:01:46.569] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:01:50.169] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 6ms
[21:01:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:01:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:02:00.312] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:02:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:02:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:02:16.575] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:02:16.576] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:02:16.576] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:02:16.578] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:02:16.578] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:02:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:02:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:02:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:02:46.584] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:02:46.584] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:02:46.584] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:02:46.584] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:02:46.584] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:02:49.920] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[21:02:49.945] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:02:49.945] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:02:50.169] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:02:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:02:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:03:00.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:03:00.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:03:00.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:03:00.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:03:00.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:03:16.590] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:03:16.591] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:03:16.591] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:03:16.591] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:03:16.591] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:03:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:03:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:03:30.313] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:03:46.640] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:03:46.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:03:46.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:03:46.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:03:46.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:03:50.169] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:03:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:03:50.169] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:04:00.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:04:00.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:04:00.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:04:00.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:04:00.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:04:16.687] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:04:16.687] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:04:16.687] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:04:16.687] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:04:16.687] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:04:30.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:04:30.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:04:30.314] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:04:46.697] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:04:46.697] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:04:46.697] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:04:46.699] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:04:46.700] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:04:50.169] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:04:50.170] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:04:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:05:00.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:05:00.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:05:00.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:05:16.706] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:05:16.706] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:05:16.706] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:05:16.706] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:05:16.706] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:05:30.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:05:30.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:05:30.315] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:05:46.712] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:05:46.712] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:05:46.712] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:05:46.712] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:05:46.712] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:05:50.170] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:05:50.170] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:05:50.170] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:06:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:06:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:06:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:06:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:06:00.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:06:16.719] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:06:16.719] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:06:16.719] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:06:16.719] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:06:16.720] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:06:30.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:06:30.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:06:30.316] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:06:46.724] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:06:46.724] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:06:46.725] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:06:46.726] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:06:46.726] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:06:50.171] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:06:50.171] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:06:50.171] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:07:00.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:07:00.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:07:00.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:07:00.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:07:00.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:07:16.739] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:07:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:07:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:07:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:07:16.739] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:07:30.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:07:30.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:07:30.317] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:07:46.744] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:07:46.744] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:07:46.745] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:07:46.745] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:07:46.745] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:07:50.171] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:07:50.171] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:07:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:08:00.318] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:08:00.318] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:08:00.318] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:08:16.748] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:08:16.748] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:08:16.748] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:08:16.748] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:08:16.748] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:08:30.319] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:08:30.319] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:08:30.319] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:08:46.756] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:08:46.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:08:46.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:08:46.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:08:46.756] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:08:50.172] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:08:50.172] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:08:50.172] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:09:00.320] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:09:00.320] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:09:00.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:09:00.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:09:00.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:09:16.761] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:09:16.761] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:09:16.761] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:09:16.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:09:16.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:09:30.320] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:09:30.320] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:09:30.320] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:09:46.768] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:09:46.769] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:09:46.769] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:09:46.769] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:09:46.769] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:09:50.173] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:09:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:09:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:10:00.321] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:10:00.321] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:10:00.321] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:10:00.321] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:10:00.321] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:10:16.772] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:10:16.772] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:10:16.772] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:10:16.772] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:10:16.772] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:10:30.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:10:30.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:10:30.322] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:10:46.777] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:10:46.777] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:10:46.777] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:10:46.778] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:10:46.778] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:10:50.173] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:10:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:10:50.173] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:11:00.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:11:00.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:11:00.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:11:16.781] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:11:16.781] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:11:16.781] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:11:16.781] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:11:16.781] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:11:30.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:11:30.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:11:30.323] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:11:46.786] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:11:46.786] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:11:46.788] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:11:46.788] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:11:46.788] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:11:50.174] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:11:50.174] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:11:50.174] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:12:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:12:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:12:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:12:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:12:00.325] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:12:16.793] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:12:16.793] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:12:16.793] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:12:16.793] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:12:16.793] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:12:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:12:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:12:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:12:46.797] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:12:46.798] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:12:46.798] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:12:46.798] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:12:46.798] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:12:49.947] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:12:49.947] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:12:50.174] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:12:50.174] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:12:50.174] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:13:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:13:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:13:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:13:00.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:13:00.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:13:16.802] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:13:16.802] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:13:16.802] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:13:16.802] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:13:16.804] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:13:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:13:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:13:30.324] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:13:46.808] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:13:46.808] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:13:46.809] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:13:46.809] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:13:46.809] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:13:50.175] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:13:50.175] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:13:50.175] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:14:00.325] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:14:00.325] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:14:00.325] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:14:16.818] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:14:16.818] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:14:16.818] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:14:16.818] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:14:16.818] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:14:30.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:14:30.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:14:30.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:14:46.821] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:14:46.821] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:14:46.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:14:46.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:14:46.825] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:14:50.176] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:14:50.176] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:14:50.176] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:15:00.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:15:00.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:15:00.326] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:15:00.328] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:15:00.328] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:15:16.831] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:15:16.831] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:15:16.831] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:15:16.831] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:15:16.831] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:15:30.327] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:15:30.327] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:15:30.327] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:15:46.840] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:15:46.840] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:15:46.840] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:15:46.840] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:15:46.840] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:15:50.176] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:15:50.176] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:15:50.176] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:16:00.328] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:16:00.328] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:16:00.328] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:16:16.849] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:16:16.849] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:16:16.849] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:16:16.849] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:16:16.850] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:16:30.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:16:30.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:16:30.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:16:30.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:16:30.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:16:46.859] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:16:46.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:16:46.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:16:46.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:16:46.859] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:16:50.176] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:16:50.180] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:16:50.180] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:17:00.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:17:00.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:17:00.329] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:17:16.867] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:17:16.867] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:17:16.867] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:17:16.867] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:17:16.867] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:17:30.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:17:30.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:17:30.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:17:46.874] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:17:46.874] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:17:46.874] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:17:46.874] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:17:46.874] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:17:49.921] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[21:17:50.181] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 5ms
[21:17:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:17:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:18:00.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:18:00.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:18:00.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:18:00.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:18:00.330] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:18:16.880] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:18:16.880] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:18:16.880] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:18:16.881] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:18:16.881] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:18:30.331] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:18:30.331] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:18:30.331] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:18:46.892] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:18:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:18:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:18:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:18:46.892] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:18:50.181] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:18:50.181] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:18:50.181] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:19:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:19:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:19:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:19:16.897] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:19:16.897] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:19:16.898] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:19:16.898] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:19:16.898] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:19:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:19:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:19:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:19:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:19:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:19:46.907] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:19:46.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:19:46.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:19:46.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:19:46.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:19:50.182] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:19:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:19:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:20:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:20:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:20:00.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:20:16.912] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:20:16.912] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:20:16.912] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:20:16.912] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:20:16.912] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:20:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:20:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:20:30.332] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:20:46.919] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:20:46.919] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:20:46.919] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:20:46.919] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:20:46.919] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:20:50.182] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:20:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:20:50.182] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:21:00.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:21:00.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:21:00.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:21:00.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:21:00.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:21:16.925] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:21:16.925] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:21:16.925] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:21:16.925] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:21:16.925] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:21:30.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:21:30.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:21:30.333] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:21:46.930] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:21:46.930] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:21:46.930] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:21:46.930] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:21:46.930] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:21:50.182] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:21:50.183] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:21:50.183] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:22:00.334] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:22:00.334] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:22:00.334] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:22:16.938] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:22:16.938] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:22:16.938] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:22:16.938] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:22:16.938] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:22:30.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:22:30.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:22:30.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:22:30.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:22:30.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:22:46.942] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:22:46.943] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:22:46.943] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:22:46.943] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:22:46.945] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:22:49.948] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:22:49.949] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:22:50.183] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:22:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:22:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:23:00.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:23:00.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:23:00.335] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:23:16.952] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:23:16.952] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:23:16.952] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:23:16.953] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:23:16.953] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:23:30.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:23:30.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:23:30.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:23:46.962] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:23:46.963] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:23:46.963] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:23:46.963] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:23:46.963] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:23:50.183] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:23:50.183] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:23:50.183] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:24:00.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:24:00.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:24:00.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:24:00.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:24:00.336] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:24:16.971] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:24:16.971] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:24:16.971] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:24:16.971] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:24:16.974] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:24:30.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:24:30.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:24:30.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:24:46.979] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:24:46.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:24:46.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:24:46.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:24:46.980] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:24:50.184] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:24:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:24:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:25:00.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:25:00.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:25:00.337] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:25:16.987] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:25:16.988] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:25:16.988] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:25:16.988] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:25:16.988] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:25:30.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:25:30.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:25:30.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:25:30.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:25:30.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:25:46.995] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:25:46.995] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:25:46.995] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:25:46.995] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:25:46.995] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:25:50.184] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:25:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:25:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:26:00.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:26:00.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:26:00.338] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:26:17.002] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:26:17.002] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:26:17.002] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:26:17.002] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:26:17.002] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:26:30.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:26:30.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:26:30.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:26:47.009] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:26:47.011] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:26:47.011] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:26:47.011] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:26:47.011] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:26:50.184] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:26:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:26:50.184] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:27:00.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:27:00.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:27:00.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:27:00.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:27:00.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:27:17.017] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:27:17.017] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:27:17.017] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:27:17.017] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:27:17.017] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:27:30.339] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:27:30.340] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:27:30.340] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:27:47.025] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:27:47.025] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:27:47.025] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:27:47.025] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:27:47.025] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:27:50.185] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:27:50.185] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:27:50.185] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:28:00.340] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:28:00.340] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:28:00.340] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:28:17.031] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:28:17.032] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:28:17.032] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:28:17.032] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:28:17.032] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:28:30.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:28:30.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:28:30.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:28:47.037] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:28:47.037] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:28:47.037] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:28:47.037] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:28:47.037] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:28:50.186] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:28:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:28:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:29:00.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:29:00.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:29:00.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:29:00.341] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:29:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:29:17.043] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:29:17.043] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:29:17.043] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:29:17.043] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:29:17.044] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:29:30.342] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:29:30.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:29:30.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:29:47.050] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:29:47.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:29:47.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:29:47.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:29:47.050] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:29:50.186] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:29:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:29:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:30:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:30:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:30:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:30:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:30:00.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:30:17.057] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:30:17.057] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:30:17.057] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:30:17.057] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:30:17.057] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:30:30.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:30:30.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:30:30.343] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:30:47.067] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:30:47.067] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:30:47.067] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:30:47.067] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:30:47.067] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:30:50.186] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:30:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:30:50.186] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:31:00.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:31:00.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:31:00.346] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:31:17.073] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:31:17.073] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:31:17.073] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:31:17.073] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:31:17.073] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:31:30.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:31:30.344] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:31:30.346] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:31:47.077] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:31:47.077] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:31:47.077] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:31:47.077] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:31:47.077] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:31:50.187] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[21:31:50.188] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:31:50.188] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:32:00.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:32:00.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:32:00.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:32:00.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:32:00.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:32:17.082] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:32:17.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:32:17.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:32:17.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:32:17.082] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:32:30.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:32:30.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:32:30.345] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:32:47.087] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:32:47.087] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:32:47.087] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:32:47.087] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:32:47.087] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:32:49.921] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[21:32:49.951] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:32:49.951] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:32:50.187] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:32:50.187] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:32:50.187] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:33:00.346] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:33:00.347] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:33:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:33:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:33:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:33:17.094] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:33:17.094] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:33:17.094] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:33:17.094] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:33:17.094] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:33:30.347] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:33:30.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:33:30.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:33:47.102] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:33:47.102] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:33:47.102] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:33:47.102] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:33:47.103] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:33:50.188] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:33:50.188] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:33:50.188] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:34:00.347] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:34:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:34:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:34:17.110] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:34:17.110] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:34:17.110] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:34:17.110] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:34:17.110] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:34:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:34:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:34:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:34:47.119] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:34:47.119] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:34:47.120] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:34:47.120] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:34:47.120] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:34:50.189] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:34:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:34:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:35:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:35:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:35:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:35:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:35:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:35:17.125] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:35:17.125] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:35:17.125] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:35:17.125] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:35:17.125] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:35:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:35:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:35:30.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:35:47.133] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:35:47.133] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:35:47.133] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:35:47.133] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:35:47.133] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:35:50.189] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:35:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:35:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:36:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:36:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:36:00.348] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:36:17.138] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:36:17.138] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:36:17.138] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:36:17.138] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:36:17.138] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:36:30.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:36:30.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:36:30.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:36:30.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:36:30.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:36:47.147] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:36:47.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:36:47.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:36:47.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:36:47.147] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:36:50.189] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:36:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:36:50.189] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:37:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:37:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:37:00.349] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:37:17.152] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:37:17.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:37:17.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:37:17.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:37:17.152] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:37:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:37:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:37:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:37:47.159] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:37:47.159] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:37:47.159] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:37:47.159] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:37:47.159] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:37:50.190] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:37:50.190] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:37:50.190] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:38:00.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:38:00.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:38:00.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:38:00.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:38:00.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:38:17.165] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:38:17.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:38:17.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:38:17.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:38:17.165] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:38:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:38:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:38:30.350] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:38:47.172] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:38:47.172] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:38:47.172] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:38:47.172] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:38:47.172] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:38:50.191] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[21:38:50.191] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:38:50.191] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:39:00.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:39:00.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:39:00.351] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:39:17.179] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:39:17.179] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:39:17.180] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:39:17.180] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:39:17.180] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:39:30.353] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:39:30.353] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:39:30.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:39:30.356] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:39:30.356] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:39:47.185] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:39:47.185] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:39:47.185] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:39:47.185] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:39:47.185] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:39:50.192] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:39:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:39:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:40:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:40:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:40:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:40:17.193] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:40:17.193] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:40:17.193] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:40:17.193] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:40:17.193] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:40:30.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:40:30.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:40:30.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:40:47.199] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:40:47.199] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:40:47.199] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:40:47.199] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:40:47.199] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:40:50.192] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:40:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:40:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:41:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:41:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:41:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:41:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:41:00.354] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:41:17.206] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:41:17.206] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:41:17.206] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:41:17.206] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:41:17.206] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:41:30.355] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:41:30.355] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:41:30.355] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:41:47.213] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:41:47.213] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:41:47.213] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:41:47.213] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:41:47.213] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:41:50.192] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:41:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:41:50.192] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:42:00.356] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:42:00.356] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:42:00.356] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:42:17.219] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:42:17.219] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:42:17.219] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:42:17.219] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:42:17.219] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:42:30.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:42:30.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:42:30.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:42:30.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:42:30.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:42:47.225] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:42:47.225] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:42:47.225] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:42:47.225] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:42:47.225] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:42:49.952] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:42:49.954] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:42:50.193] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:42:50.193] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:42:50.193] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:43:00.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:43:00.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:43:00.357] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:43:17.231] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:43:17.231] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:43:17.231] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:43:17.231] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:43:17.232] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:43:30.358] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:43:30.358] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:43:30.358] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:43:47.237] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:43:47.237] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:43:47.237] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:43:47.237] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:43:47.237] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:43:50.194] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[21:43:50.194] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:43:50.194] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:44:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:44:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:44:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:44:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:44:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:44:17.243] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:44:17.243] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:44:17.244] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:44:17.244] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:44:17.244] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:44:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:44:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:44:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:44:47.247] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:44:47.247] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:44:47.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:44:47.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:44:47.248] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:44:50.195] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:44:50.195] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:44:50.195] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:45:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:45:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:45:00.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:45:17.259] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:45:17.259] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:45:17.259] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:45:17.259] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:45:17.259] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:45:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:45:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:45:30.359] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:45:30.360] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:45:30.360] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:45:47.272] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:45:47.272] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:45:47.272] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:45:47.272] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:45:47.272] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:45:50.195] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:45:50.195] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:45:50.195] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:46:00.360] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:46:00.360] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:46:00.360] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:46:17.277] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:46:17.277] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:46:17.278] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:46:17.278] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:46:17.278] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:46:30.361] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:46:30.361] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:46:30.361] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:46:47.288] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:46:47.288] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:46:47.288] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:46:47.288] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:46:47.288] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:46:50.196] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:46:50.196] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:46:50.196] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:47:00.361] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:47:00.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:47:00.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:47:00.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:47:00.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:47:17.293] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:47:17.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:47:17.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:47:17.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:47:17.293] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:47:30.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:47:30.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:47:30.362] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:47:47.301] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:47:47.301] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:47:47.301] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:47:47.301] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:47:47.301] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:47:49.922] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[21:47:50.196] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:47:50.196] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:47:50.196] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:48:00.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:48:00.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:48:00.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:48:17.311] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:48:17.311] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:48:17.311] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:48:17.311] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:48:17.311] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:48:30.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:48:30.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:48:30.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:48:30.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:48:30.363] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:48:47.319] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:48:47.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:48:47.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:48:47.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:48:47.319] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:48:50.197] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:48:50.197] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:48:50.197] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:49:00.364] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:49:00.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:49:00.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:49:17.328] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:49:17.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:49:17.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:49:17.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:49:17.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:49:30.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:49:30.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:49:30.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:49:47.335] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:49:47.335] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:49:47.335] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:49:47.335] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:49:47.335] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:49:50.198] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:49:50.199] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:49:50.199] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:50:00.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:50:00.366] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:50:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:50:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:50:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:50:17.342] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:50:17.342] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:50:17.342] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:50:17.342] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:50:17.342] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:50:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:50:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:50:30.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:50:47.350] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:50:47.350] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:50:47.350] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:50:47.350] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:50:47.350] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:50:50.198] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:50:50.198] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:50:50.198] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:51:00.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:51:00.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:51:00.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:51:17.357] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:51:17.357] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:51:17.357] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:51:17.357] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:51:17.358] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:51:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:51:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:51:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:51:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:51:30.367] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:51:47.363] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:51:47.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:51:47.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:51:47.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:51:47.363] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:51:50.199] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[21:51:50.199] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:51:50.199] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:52:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:52:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:52:00.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:52:17.370] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:52:17.370] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:52:17.370] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:52:17.370] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:52:17.370] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:52:30.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:52:30.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:52:30.368] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:52:47.377] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:52:47.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:52:47.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:52:47.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:52:47.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:52:49.955] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[21:52:49.958] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[21:52:50.200] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:52:50.200] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:52:50.200] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:53:00.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:53:00.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:53:00.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:53:00.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:53:00.370] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:53:17.383] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:53:17.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:53:17.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:53:17.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:53:17.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:53:30.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:53:30.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:53:30.369] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:53:47.387] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:53:47.388] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:53:47.388] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:53:47.388] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:53:47.388] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:53:50.201] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:53:50.201] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:53:50.201] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:54:00.370] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:54:00.370] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:54:00.370] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:54:17.392] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:54:17.392] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:54:17.392] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:54:17.392] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:54:17.392] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:54:30.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:54:30.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:54:30.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:54:30.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:54:30.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:54:47.397] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:54:47.397] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:54:47.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:54:47.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:54:47.398] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:54:50.202] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[21:54:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:54:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:55:00.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:55:00.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:55:00.371] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:55:17.402] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:55:17.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:55:17.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:55:17.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:55:17.402] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:55:30.372] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:55:30.372] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:55:30.372] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:55:47.407] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:55:47.408] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:55:47.408] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:55:47.408] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:55:47.408] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:55:50.203] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[21:55:50.203] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:55:50.203] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:56:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:56:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:56:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:56:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:56:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:56:17.414] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:56:17.414] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:56:17.414] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:56:17.414] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:56:17.414] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:56:30.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:56:30.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:56:30.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:56:47.420] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:56:47.420] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:56:47.420] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:56:47.420] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:56:47.420] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:56:50.204] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:56:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:56:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:57:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:57:00.373] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:57:00.377] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:57:17.428] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:57:17.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:57:17.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:57:17.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:57:17.428] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:57:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:57:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:57:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[21:57:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[21:57:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:57:47.434] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:57:47.434] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:57:47.434] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:57:47.434] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:57:47.434] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:57:50.204] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:57:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:57:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:58:00.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:58:00.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:58:00.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:58:17.439] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:58:17.440] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:58:17.440] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:58:17.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:58:17.441] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:58:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:58:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:58:30.374] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:58:47.446] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:58:47.446] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:58:47.446] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:58:47.446] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:58:47.446] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:58:50.204] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:58:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:58:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[21:59:00.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:59:00.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:59:00.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:59:00.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:59:00.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[21:59:17.452] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:59:17.452] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:59:17.452] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:59:17.452] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:59:17.452] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:59:30.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[21:59:30.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[21:59:30.375] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[21:59:47.460] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[21:59:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[21:59:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[21:59:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[21:59:47.460] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[21:59:50.204] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[21:59:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[21:59:50.204] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:00:00.376] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:00:00.376] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:00:00.376] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:00:17.465] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:00:17.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:00:17.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:00:17.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:00:17.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:00:30.377] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:00:30.377] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:00:30.377] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:00:30.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:00:30.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:00:47.472] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:00:47.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:00:47.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:00:47.474] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:00:47.474] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:00:50.205] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:00:50.205] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:00:50.205] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:01:00.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:01:00.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:01:00.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:01:17.481] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:01:17.481] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:01:17.481] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:01:17.481] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:01:17.481] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:01:30.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:01:30.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:01:30.378] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:01:47.487] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:01:47.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:01:47.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:01:47.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:01:47.488] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:01:50.206] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:01:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:01:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:02:00.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:02:00.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:02:00.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:02:00.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:02:00.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:02:17.494] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:02:17.494] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:02:17.494] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:02:17.494] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:02:17.494] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:02:30.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:02:30.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:02:30.379] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:02:47.500] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:02:47.500] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:02:47.502] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:02:47.502] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:02:47.502] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:02:49.922] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[22:02:49.959] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:02:49.962] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:02:50.206] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:02:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:02:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:03:00.380] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:03:00.380] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:03:00.380] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:03:17.508] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:03:17.508] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:03:17.508] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:03:17.508] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:03:17.508] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:03:30.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:03:30.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:03:30.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:03:30.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:03:30.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:03:47.515] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:03:47.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:03:47.515] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:03:47.516] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:03:47.516] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:03:50.206] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:03:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:03:50.206] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:04:00.381] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:04:00.383] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:04:00.383] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:04:17.522] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:04:17.522] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:04:17.523] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:04:17.523] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:04:17.523] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:04:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:04:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:04:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:04:47.530] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:04:47.530] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:04:47.530] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:04:47.530] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:04:47.530] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:04:50.207] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:04:50.207] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:04:50.207] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:05:00.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:05:00.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:05:00.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:05:00.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:05:00.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:05:17.538] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:05:17.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:05:17.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:05:17.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:05:17.538] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:05:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:05:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:05:30.382] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:05:47.545] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:05:47.545] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:05:47.545] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:05:47.545] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:05:47.545] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:05:50.207] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:05:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:05:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:06:00.383] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:06:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:06:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:06:17.550] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:06:17.551] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:06:17.551] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:06:17.551] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:06:17.551] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:06:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:06:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:06:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:06:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:06:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:06:47.557] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:06:47.558] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:06:47.558] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:06:47.558] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:06:47.558] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:06:50.207] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:06:50.207] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:06:50.207] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:07:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:07:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:07:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:07:17.564] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:07:17.564] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:07:17.564] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:07:17.564] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:07:17.564] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:07:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:07:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:07:30.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:07:47.572] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:07:47.572] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:07:47.572] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:07:47.572] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:07:47.572] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:07:50.208] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:07:50.208] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:07:50.208] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:08:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:08:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:08:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:08:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:08:00.384] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:08:17.579] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:08:17.579] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:08:17.579] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:08:17.579] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:08:17.579] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:08:30.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:08:30.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:08:30.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:08:47.586] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:08:47.586] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:08:47.586] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:08:47.586] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:08:47.586] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:08:50.208] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:08:50.208] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:08:50.208] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:09:00.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:09:00.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:09:00.385] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:09:17.591] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:09:17.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:09:17.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:09:17.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:09:17.591] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:09:30.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:09:30.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:09:30.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:09:30.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:09:30.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:09:47.596] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:09:47.597] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:09:47.597] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:09:47.597] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:09:47.597] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:09:50.209] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:09:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:09:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:10:00.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:10:00.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:10:00.386] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:10:17.603] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:10:17.603] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:10:17.603] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:10:17.603] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:10:17.603] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:10:30.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:10:30.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:10:30.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:10:47.610] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:10:47.610] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:10:47.610] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:10:47.610] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:10:47.610] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:10:50.209] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:10:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:10:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:11:00.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:11:00.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:11:00.387] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:11:17.614] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:11:17.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:11:17.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:11:17.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:11:17.614] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:11:30.388] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:11:30.388] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:11:30.388] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:11:30.388] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:11:30.388] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:11:47.620] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:11:47.620] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:11:47.621] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:11:47.621] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:11:47.621] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:11:50.209] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:11:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:11:50.209] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:12:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:12:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:12:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:12:17.625] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:12:17.625] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:12:17.625] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:12:17.625] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:12:17.625] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:12:30.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:12:30.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:12:30.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:12:30.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:12:30.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:12:47.631] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:12:47.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:12:47.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:12:47.631] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:12:47.632] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:12:49.966] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:12:49.967] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:12:50.210] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:12:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:12:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:13:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:13:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:13:00.389] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:13:17.636] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:13:17.637] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:13:17.637] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:13:17.637] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:13:17.637] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:13:30.390] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:13:30.390] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:13:30.390] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:13:47.640] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:13:47.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:13:47.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:13:47.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:13:47.640] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:13:50.210] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:13:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:13:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:14:00.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:14:00.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:14:00.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:14:17.650] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:14:17.650] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:14:17.650] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:14:17.650] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:14:17.650] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:14:30.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:14:30.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:14:30.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:14:30.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:14:30.391] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:14:47.657] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:14:47.657] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:14:47.657] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:14:47.657] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:14:47.657] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:14:50.210] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:14:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:14:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:15:00.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:15:00.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:15:00.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:15:17.662] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:15:17.662] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:15:17.662] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:15:17.662] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:15:17.662] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:15:30.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:15:30.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:15:30.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:15:30.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:15:30.392] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:15:47.671] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:15:47.671] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:15:47.672] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:15:47.672] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:15:47.672] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:15:50.210] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:15:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:15:50.210] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:16:00.393] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:16:00.393] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:16:00.393] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:16:17.678] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:16:17.678] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:16:17.678] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:16:17.678] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:16:17.678] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:16:30.394] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:16:30.394] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:16:30.394] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:16:47.684] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:16:47.684] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:16:47.684] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:16:47.684] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:16:47.684] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:16:50.211] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:16:50.211] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:16:50.211] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:17:00.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:17:00.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:17:00.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:17:17.690] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:17:17.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:17:17.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:17:17.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:17:17.690] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:17:30.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:17:30.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:17:30.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:17:30.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:17:30.395] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:17:47.694] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:17:47.694] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:17:47.695] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:17:47.695] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:17:47.695] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:17:49.923] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[22:17:50.211] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:17:50.211] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:17:50.211] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:18:00.396] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:18:00.398] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:18:00.398] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:18:17.702] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:18:17.704] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:18:17.704] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:18:17.704] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:18:17.704] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:18:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:18:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:18:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:18:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:18:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:18:47.710] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:18:47.710] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:18:47.710] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:18:47.710] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:18:47.710] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:18:50.212] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:18:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:18:50.212] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:19:00.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:19:00.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:19:00.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:19:17.715] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:19:17.715] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:19:17.717] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:19:17.717] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:19:17.717] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:19:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:19:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:19:30.397] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:19:47.724] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:19:47.725] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:19:47.725] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:19:47.725] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:19:47.725] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:19:50.214] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:19:50.216] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:19:50.216] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:20:00.398] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:20:00.398] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:20:00.398] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:20:17.732] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:20:17.732] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:20:17.732] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:20:17.732] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:20:17.732] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:20:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:20:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:20:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:20:30.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:20:30.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:20:47.738] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:20:47.739] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:20:47.740] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:20:47.740] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:20:47.741] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:20:50.214] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:20:50.214] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:20:50.214] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:21:00.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:21:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:21:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:21:17.750] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:21:17.750] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:21:17.751] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:21:17.752] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:21:17.752] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:21:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:21:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:21:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:21:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:21:30.399] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:21:47.761] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:21:47.761] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:21:47.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:21:47.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:21:47.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:21:50.214] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:21:50.215] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:21:50.215] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:22:00.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:22:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:22:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:22:17.770] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:22:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:22:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:22:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:22:17.770] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:22:30.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:22:30.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:22:30.400] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:22:47.778] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:22:47.778] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:22:47.778] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:22:47.778] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:22:47.778] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:22:49.974] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:22:49.974] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:22:50.216] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:22:50.218] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:22:50.218] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:23:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:23:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:23:00.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:23:17.784] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:23:17.784] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:23:17.784] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:23:17.784] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:23:17.785] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:23:30.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:23:30.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:23:30.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:23:30.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:23:30.401] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:23:47.791] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:23:47.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:23:47.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:23:47.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:23:47.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:23:50.216] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:23:50.216] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:23:50.216] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:24:00.402] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:24:00.402] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:24:00.402] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:24:17.796] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:24:17.796] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:24:17.796] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:24:17.796] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:24:17.796] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:24:30.403] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:24:30.403] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:24:30.403] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:24:30.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:24:30.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:24:47.805] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:24:47.805] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:24:47.805] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:24:47.805] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:24:47.805] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:24:50.217] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:24:50.217] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:24:50.217] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:25:00.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:25:00.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:25:00.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:25:17.813] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:25:17.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:25:17.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:25:17.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:25:17.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:25:30.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:25:30.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:25:30.404] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:25:47.819] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:25:47.819] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:25:47.820] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:25:47.820] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:25:47.820] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:25:50.218] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:25:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:25:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:26:00.405] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:26:00.405] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:26:00.405] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:26:17.824] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:26:17.824] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:26:17.824] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:26:17.824] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:26:17.824] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:26:30.406] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:26:30.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:26:30.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:26:30.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:26:30.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:26:47.830] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:26:47.830] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:26:47.830] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:26:47.830] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:26:47.830] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:26:50.218] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:26:50.218] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:26:50.218] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:27:00.406] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:27:00.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:27:00.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:27:17.837] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:27:17.838] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:27:17.838] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:27:17.838] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:27:17.838] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:27:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:27:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:27:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:27:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:27:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:27:47.842] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:27:47.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:27:47.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:27:47.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:27:47.842] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:27:50.219] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:27:50.219] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:27:50.219] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:28:00.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:28:00.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:28:00.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:28:17.846] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:28:17.846] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:28:17.846] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:28:17.846] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:28:17.846] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:28:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:28:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:28:30.407] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:28:47.867] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:28:47.867] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:28:47.867] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:28:47.867] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:28:47.867] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:28:50.220] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:28:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:28:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:29:00.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:29:00.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:29:00.408] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:29:17.872] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:29:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:29:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:29:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:29:17.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:29:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:29:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:29:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:29:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:29:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:29:47.876] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:29:47.876] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:29:47.876] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:29:47.876] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:29:47.876] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:29:50.220] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:29:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:29:50.220] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:30:00.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:30:00.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:30:00.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:30:17.883] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:30:17.884] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:30:17.884] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:30:17.884] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:30:17.884] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:30:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:30:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:30:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:30:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:30:30.409] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:30:47.888] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:30:47.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:30:47.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:30:47.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:30:47.888] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:30:50.221] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:30:50.221] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:30:50.221] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:31:00.410] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:31:00.410] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:31:00.410] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:31:17.897] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:31:17.897] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:31:17.897] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:31:17.897] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:31:17.897] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:31:30.411] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:31:30.411] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:31:30.411] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:31:47.901] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:31:47.901] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:31:47.901] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:31:47.901] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:31:47.901] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:31:50.221] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:31:50.221] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:31:50.221] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:32:00.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:32:00.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:32:00.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:32:17.905] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:32:17.905] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:32:17.905] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:32:17.905] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:32:17.905] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:32:30.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:32:30.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:32:30.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:32:30.412] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:32:30.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:32:47.910] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:32:47.910] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:32:47.910] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:32:47.910] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:32:47.910] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:32:49.924] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[22:32:49.976] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:32:49.977] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:32:50.222] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:32:50.222] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:32:50.222] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:33:00.413] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:33:00.413] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:33:00.413] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:33:17.917] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:33:17.917] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:33:17.917] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:33:17.917] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:33:17.917] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:33:30.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:33:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:33:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:33:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:33:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:33:47.923] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:33:47.923] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:33:47.923] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:33:47.923] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:33:47.923] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:33:50.223] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:33:50.223] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:33:50.223] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:34:00.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:34:00.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:34:00.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:34:17.933] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:34:17.934] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:34:17.934] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:34:17.934] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:34:17.934] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:34:30.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:34:30.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:34:30.414] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:34:47.936] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:34:47.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:34:47.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:34:47.936] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:34:47.937] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:34:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:34:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:34:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:35:00.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:35:00.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:35:00.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:35:17.944] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:35:17.944] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:35:17.944] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:35:17.944] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:35:17.945] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:35:30.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:35:30.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:35:30.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:35:30.415] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:35:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:35:47.949] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:35:47.949] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:35:47.949] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:35:47.949] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:35:47.950] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:35:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:35:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:35:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:36:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:36:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:36:00.417] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:36:17.958] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:36:17.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:36:17.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:36:17.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:36:17.959] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:36:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:36:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:36:30.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:36:47.963] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:36:47.963] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:36:47.963] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:36:47.963] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:36:47.963] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:36:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:36:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:36:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:37:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:37:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:37:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:37:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:37:00.416] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:37:17.975] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:37:17.975] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:37:17.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:37:17.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:37:17.976] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:37:30.417] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:37:30.417] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:37:30.417] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:37:47.983] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:37:47.983] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:37:47.983] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:37:47.983] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:37:47.983] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:37:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:37:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:37:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:38:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:38:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:38:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:38:17.989] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:38:17.989] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:38:17.989] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:38:17.989] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:38:17.989] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:38:30.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:38:30.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:38:30.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:38:30.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:38:30.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:38:47.997] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:38:47.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:38:47.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:38:47.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:38:47.997] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:38:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:38:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:38:50.224] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:39:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:39:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:39:00.418] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:39:18.001] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:39:18.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:39:18.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:39:18.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:39:18.001] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:39:30.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:39:30.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:39:30.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:39:48.006] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:39:48.006] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:39:48.006] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:39:48.006] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:39:48.009] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:39:50.224] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:39:50.225] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:39:50.225] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:40:00.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:40:00.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:40:00.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:40:00.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:40:00.419] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:40:18.014] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:40:18.014] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:40:18.014] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:40:18.014] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:40:18.014] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:40:30.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:40:30.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:40:30.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:40:48.017] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:40:48.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:40:48.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:40:48.017] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:40:48.018] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:40:50.225] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:40:50.226] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:40:50.226] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:41:00.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:41:00.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:41:00.420] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:41:18.024] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:41:18.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:41:18.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:41:18.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:41:18.024] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:41:30.421] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:41:30.421] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:41:30.421] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:41:30.421] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:41:30.421] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:41:48.031] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:41:48.031] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:41:48.031] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:41:48.031] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:41:48.031] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:41:50.229] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 3ms
[22:41:50.230] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:41:50.230] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:42:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:42:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:42:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:42:18.037] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:42:18.037] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:42:18.037] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:42:18.037] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:42:18.037] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:42:30.422] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:42:30.422] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:42:30.422] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:42:48.046] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:42:48.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:42:48.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:42:48.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:42:48.046] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:42:49.978] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:42:49.979] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:42:50.229] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:42:50.229] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:42:50.229] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:43:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:43:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:43:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:43:00.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:43:00.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:43:18.050] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:43:18.051] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:43:18.051] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:43:18.051] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:43:18.051] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:43:30.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:43:30.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:43:30.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:43:48.057] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:43:48.057] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:43:48.057] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:43:48.057] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:43:48.057] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:43:50.230] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:43:50.230] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:43:50.230] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:44:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:44:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:44:00.423] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:44:18.062] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:44:18.065] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:44:18.065] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:44:18.065] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:44:18.065] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:44:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:44:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:44:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:44:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:44:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:44:48.069] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:44:48.069] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:44:48.070] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:44:48.070] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:44:48.070] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:44:50.231] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:44:50.231] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:44:50.231] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:45:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:45:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:45:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:45:18.080] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:45:18.080] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:45:18.080] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:45:18.080] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:45:18.080] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:45:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:45:30.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:45:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:45:48.086] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:45:48.086] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:45:48.086] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:45:48.086] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:45:48.087] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:45:50.231] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:45:50.231] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:45:50.231] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:46:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:46:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:46:00.424] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:46:18.099] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:46:18.099] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:46:18.099] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:46:18.099] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:46:18.099] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:46:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:46:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:46:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:46:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:46:30.425] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:46:48.106] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:46:48.106] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:46:48.108] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:46:48.108] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:46:48.108] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:46:50.232] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:46:50.232] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:46:50.232] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:47:00.426] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:47:00.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:47:00.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:47:18.114] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:47:18.115] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:47:18.115] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:47:18.115] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:47:18.115] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:47:30.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:47:30.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:47:30.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:47:30.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:47:30.427] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:47:48.121] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:47:48.121] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:47:48.121] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:47:48.121] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:47:48.121] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:47:49.923] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[22:47:50.232] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:47:50.232] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:47:50.232] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:48:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:48:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:48:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:48:18.127] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:48:18.127] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:48:18.127] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:48:18.127] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:48:18.127] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:48:30.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:48:30.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:48:30.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:48:48.134] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:48:48.134] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:48:48.134] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:48:48.134] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:48:48.134] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:48:50.233] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:48:50.233] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:48:50.233] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:49:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:49:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:49:00.428] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:49:18.139] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:49:18.139] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:49:18.140] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:49:18.140] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:49:18.140] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:49:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:49:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:49:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:49:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:49:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:49:48.146] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:49:48.146] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:49:48.146] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:49:48.146] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:49:48.146] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:49:50.233] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:49:50.233] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:49:50.233] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:50:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:50:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:50:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:50:18.149] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:50:18.149] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:50:18.149] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:50:18.149] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:50:18.150] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:50:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:50:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:50:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:50:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:50:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:50:48.155] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:50:48.155] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:50:48.155] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:50:48.155] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:50:48.155] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:50:50.234] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[22:50:50.234] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:50:50.234] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:51:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:51:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:51:00.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:51:18.160] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:51:18.160] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:51:18.160] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:51:18.160] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:51:18.160] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:51:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:51:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:51:30.429] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:51:48.167] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:51:48.167] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:51:48.167] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:51:48.167] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:51:48.167] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:51:50.234] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:51:50.234] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:51:50.235] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:52:00.430] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:52:00.430] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:52:00.430] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:52:18.173] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:52:18.173] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:52:18.173] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:52:18.173] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:52:18.174] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:52:30.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:52:30.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:52:30.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:52:30.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:52:30.433] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:52:48.177] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:52:48.177] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:52:48.177] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:52:48.177] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:52:48.177] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:52:49.980] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[22:52:49.981] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[22:52:50.235] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:52:50.235] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:52:50.235] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:53:00.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:53:00.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:53:00.431] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:53:18.180] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:53:18.181] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:53:18.182] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:53:18.183] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:53:18.185] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:53:30.432] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:53:30.432] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:53:30.432] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:53:30.432] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:53:30.432] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:53:48.193] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:53:48.193] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:53:48.193] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:53:48.193] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:53:48.193] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:53:50.235] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:53:50.235] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:53:50.235] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:54:00.434] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:54:00.434] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:54:00.434] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:54:18.197] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:54:18.197] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:54:18.197] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:54:18.197] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:54:18.198] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:54:30.435] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:54:30.435] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:54:30.435] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:54:48.201] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:54:48.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:54:48.201] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:54:48.202] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:54:48.202] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:54:50.236] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:54:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:54:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:55:00.436] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:55:00.436] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:55:00.436] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:55:18.209] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:55:18.209] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:55:18.209] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:55:18.209] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:55:18.209] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:55:30.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:55:30.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:55:30.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:55:30.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:55:30.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:55:48.212] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:55:48.212] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:55:48.212] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:55:48.213] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:55:48.213] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:55:50.236] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:55:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:55:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:56:00.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:56:00.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:56:00.437] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:56:18.218] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:56:18.218] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:56:18.218] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:56:18.218] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:56:18.218] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:56:30.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:56:30.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:56:30.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:56:30.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:56:30.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:56:48.221] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:56:48.221] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:56:48.221] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:56:48.221] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:56:48.221] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:56:50.236] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:56:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:56:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:57:00.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:57:00.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:57:00.438] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:57:18.229] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:57:18.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:57:18.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:57:18.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:57:18.229] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:57:30.439] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:57:30.439] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:57:30.439] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:57:48.236] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:57:48.236] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:57:48.236] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:57:48.236] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:57:48.236] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:57:50.236] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:57:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:57:50.236] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:58:00.440] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:58:00.440] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:58:00.440] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:58:18.245] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:58:18.245] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:58:18.245] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:58:18.247] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:58:18.247] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:58:30.440] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:58:30.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:58:30.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[22:58:30.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[22:58:30.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:58:48.253] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:58:48.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:58:48.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:58:48.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:58:48.253] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:58:50.237] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:58:50.237] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:58:50.237] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[22:59:00.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:59:00.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:59:00.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:59:18.259] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:59:18.259] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:59:18.259] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:59:18.259] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:59:18.259] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:59:30.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[22:59:30.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[22:59:30.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[22:59:30.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:59:30.441] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[22:59:48.268] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[22:59:48.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[22:59:48.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[22:59:48.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[22:59:48.268] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[22:59:50.237] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[22:59:50.237] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[22:59:50.237] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:00:00.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:00:00.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:00:00.442] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:00:18.274] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:00:18.274] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:00:18.274] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:00:18.274] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:00:18.275] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:00:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:00:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:00:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:00:48.279] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:00:48.279] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:00:48.279] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:00:48.279] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:00:48.280] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:00:50.237] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:00:50.237] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:00:50.241] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:01:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:01:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:01:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:01:18.289] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:01:18.289] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:01:18.289] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:01:18.289] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:01:18.289] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:01:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:01:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:01:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:01:30.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:01:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:01:48.296] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:01:48.296] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:01:48.296] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:01:48.296] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:01:48.296] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:01:50.238] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:01:50.238] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:01:50.238] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:02:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:02:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:02:00.443] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:02:18.300] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:02:18.300] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:02:18.302] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:02:18.302] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:02:18.302] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:02:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:02:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:02:30.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:02:30.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:02:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:02:48.310] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:02:48.310] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:02:48.310] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:02:48.310] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:02:48.310] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:02:49.924] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[23:02:49.982] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:02:49.982] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:02:50.238] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:02:50.238] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:02:50.238] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:03:00.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:03:00.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:03:00.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:03:18.314] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:03:18.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:03:18.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:03:18.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:03:18.314] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:03:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:03:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:03:30.444] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:03:48.321] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:03:48.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:03:48.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:03:48.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:03:48.321] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:03:50.239] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:03:50.239] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:03:50.239] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:04:00.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:04:00.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:04:00.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:04:18.327] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:04:18.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:04:18.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:04:18.327] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:04:18.328] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:04:30.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:04:30.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:04:30.445] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:04:30.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:04:30.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:04:48.333] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:04:48.333] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:04:48.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:04:48.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:04:48.334] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:04:50.239] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:04:50.239] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:04:50.239] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:05:00.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:05:00.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:05:00.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:05:18.340] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:05:18.340] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:05:18.340] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:05:18.340] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:05:18.341] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:05:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:05:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:05:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:05:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:05:30.446] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:05:48.345] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:05:48.345] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:05:48.346] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:05:48.346] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:05:48.346] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:05:50.239] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:05:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:05:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:06:00.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:06:00.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:06:00.449] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:06:18.352] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:06:18.352] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:06:18.352] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:06:18.352] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:06:18.352] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:06:30.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:06:30.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:06:30.447] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:06:48.357] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:06:48.357] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:06:48.357] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:06:48.357] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:06:48.357] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:06:50.240] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:06:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:06:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:07:00.448] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:07:00.448] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:07:00.448] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:07:18.365] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:07:18.365] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:07:18.365] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:07:18.365] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:07:18.365] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:07:30.452] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:07:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:07:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:07:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:07:30.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:07:48.377] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:07:48.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:07:48.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:07:48.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:07:48.377] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:07:50.241] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:07:50.241] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:07:50.241] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:08:00.452] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:08:00.452] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:08:00.452] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:08:18.383] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:08:18.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:08:18.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:08:18.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:08:18.383] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:08:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:08:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:08:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:08:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:08:30.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:08:48.392] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:08:48.392] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:08:48.392] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:08:48.392] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:08:48.392] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:08:50.241] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:08:50.241] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:08:50.241] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:09:00.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:09:00.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:09:00.453] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:09:18.398] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:09:18.398] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:09:18.398] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:09:18.398] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:09:18.398] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:09:30.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:09:30.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:09:30.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:09:48.401] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:09:48.401] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:09:48.401] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:09:48.401] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:09:48.401] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:09:50.242] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:09:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:09:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:10:00.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:10:00.454] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:10:00.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:10:18.406] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:10:18.406] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:10:18.407] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:10:18.407] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:10:18.407] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:10:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:10:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:10:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:10:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:10:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:10:48.412] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:10:48.412] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:10:48.412] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:10:48.412] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:10:48.412] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:10:50.242] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:10:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:10:50.242] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:11:00.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:11:00.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:11:00.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:11:18.418] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:11:18.418] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:11:18.418] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:11:18.418] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:11:18.418] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:11:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:11:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:11:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:11:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:11:30.455] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:11:48.426] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:11:48.426] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:11:48.426] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:11:48.426] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:11:48.426] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:11:50.243] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:11:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:11:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:12:00.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:12:00.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:12:00.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:12:18.430] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:12:18.430] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:12:18.430] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:12:18.430] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:12:18.430] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:12:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:12:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:12:30.456] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:12:48.438] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:12:48.438] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:12:48.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:12:48.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:12:48.439] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:12:49.984] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:12:49.984] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:12:50.243] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:12:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:12:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:13:00.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:13:00.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:13:00.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:13:18.443] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:13:18.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:13:18.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:13:18.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:13:18.443] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:13:30.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:13:30.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:13:30.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:13:30.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:13:30.457] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:13:48.450] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:13:48.450] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:13:48.450] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:13:48.450] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:13:48.450] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:13:50.243] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:13:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:13:50.243] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:14:00.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:14:00.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:14:00.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:14:18.453] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:14:18.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:14:18.453] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:14:18.454] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:14:18.454] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:14:30.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:14:30.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:14:30.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:14:30.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:14:30.458] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:14:48.461] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:14:48.461] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:14:48.461] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:14:48.461] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:14:48.461] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:14:50.244] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:14:50.246] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:14:50.246] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:15:00.459] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:15:00.459] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:15:00.459] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:15:18.465] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:15:18.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:15:18.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:15:18.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:15:18.465] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:15:30.460] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:15:30.460] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:15:30.460] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:15:48.471] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:15:48.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:15:48.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:15:48.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:15:48.472] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:15:50.244] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:15:50.244] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:15:50.244] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:16:00.461] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:16:00.461] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:16:00.461] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:16:18.477] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:16:18.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:16:18.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:16:18.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:16:18.477] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:16:30.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:16:30.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:16:30.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:16:30.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:16:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:16:48.485] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:16:48.485] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:16:48.485] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:16:48.485] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:16:48.485] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:16:50.244] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:16:50.244] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:16:50.244] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:17:00.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:17:00.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:17:00.462] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:17:18.489] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:17:18.489] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:17:18.490] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:17:18.490] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:17:18.490] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:17:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:17:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:17:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:17:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:17:30.463] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:17:48.493] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:17:48.493] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:17:48.493] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:17:48.493] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:17:48.493] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:17:49.924] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[23:17:50.245] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:17:50.245] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:17:50.245] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:18:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:18:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:18:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:18:18.500] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:18:18.500] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:18:18.500] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:18:18.500] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:18:18.500] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:18:30.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:18:30.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:18:30.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:18:48.506] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:18:48.506] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:18:48.506] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:18:48.506] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:18:48.506] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:18:50.246] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:18:50.246] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:18:50.246] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:19:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:19:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:19:00.464] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:19:18.512] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:19:18.512] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:19:18.512] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:19:18.512] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:19:18.512] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:19:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:19:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:19:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:19:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:19:30.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:19:48.517] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:19:48.517] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:19:48.518] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:19:48.518] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:19:48.518] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:19:50.247] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[23:19:50.247] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:19:50.247] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:20:00.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:20:00.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:20:00.465] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:20:18.521] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:20:18.521] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:20:18.521] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:20:18.521] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:20:18.521] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:20:30.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:20:30.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:20:30.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:20:30.466] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:20:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:20:48.524] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:20:48.524] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:20:48.524] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:20:48.524] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:20:48.524] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:20:50.248] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:20:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:20:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:21:00.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:21:00.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:21:00.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:21:18.530] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:21:18.530] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:21:18.530] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:21:18.530] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:21:18.530] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:21:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:21:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:21:30.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:21:48.535] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:21:48.535] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:21:48.535] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:21:48.535] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:21:48.535] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:21:50.248] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:21:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:21:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:22:00.467] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:22:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:22:00.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:22:18.539] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:22:18.539] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:22:18.539] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:22:18.539] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:22:18.539] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:22:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:22:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:22:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:22:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:22:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:22:48.544] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:22:48.544] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:22:48.544] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:22:48.544] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:22:48.544] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:22:49.986] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:22:49.988] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:22:50.248] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:22:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:22:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:23:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:23:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:23:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:23:18.553] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:23:18.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:23:18.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:23:18.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:23:18.553] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:23:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:23:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:23:30.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:23:48.558] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:23:48.558] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:23:48.558] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:23:48.558] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:23:48.558] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:23:50.248] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:23:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:23:50.248] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:24:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:24:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:24:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:24:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:24:00.468] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:24:18.563] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:24:18.563] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:24:18.563] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:24:18.563] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:24:18.563] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:24:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:24:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:24:30.469] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:24:48.572] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:24:48.573] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:24:48.573] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:24:48.573] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:24:48.574] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:24:50.249] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:24:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:24:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:25:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:25:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:25:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:25:18.579] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:25:18.579] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:25:18.579] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:25:18.579] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:25:18.579] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:25:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:25:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:25:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:25:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:25:30.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:25:48.590] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:25:48.592] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:25:48.592] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:25:48.592] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:25:48.592] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:25:50.249] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:25:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:25:50.249] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:26:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:26:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:26:00.470] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:26:18.596] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:26:18.596] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:26:18.596] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:26:18.597] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:26:18.597] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:26:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:26:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:26:30.471] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:26:48.606] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:26:48.606] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:26:48.607] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:26:48.607] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:26:48.607] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:26:50.250] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:26:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:26:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:27:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:27:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:27:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:27:00.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:27:00.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:27:18.612] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:27:18.612] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:27:18.613] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:27:18.614] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:27:18.614] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:27:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:27:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:27:30.472] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:27:48.616] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:27:48.617] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:27:48.617] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:27:48.617] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:27:48.617] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:27:50.250] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:27:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:27:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:28:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:28:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:28:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:28:18.620] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:28:18.620] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:28:18.621] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:28:18.621] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:28:18.621] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:28:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:28:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:28:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:28:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:28:30.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:28:48.625] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:28:48.625] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:28:48.627] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:28:48.628] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:28:48.628] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:28:50.250] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:28:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:28:50.250] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:29:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:29:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:29:00.473] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:29:18.633] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:29:18.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:29:18.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:29:18.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:29:18.633] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:29:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:29:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:29:30.474] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:29:48.640] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:29:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:29:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:29:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:29:48.640] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:29:50.251] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:29:50.251] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:29:50.251] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:30:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:30:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:30:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:30:00.475] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:30:00.477] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:30:18.644] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:30:18.644] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:30:18.644] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:30:18.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:30:18.645] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:30:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:30:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:30:30.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:30:48.649] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:30:48.649] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:30:48.649] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:30:48.649] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:30:48.649] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:30:50.251] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:30:50.251] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:30:50.251] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:31:00.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:31:00.476] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:31:00.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:31:18.654] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:31:18.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:31:18.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:31:18.654] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:31:18.655] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:31:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:31:30.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:31:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:31:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:31:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:31:48.662] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:31:48.662] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:31:48.662] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:31:48.662] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:31:48.662] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:31:50.252] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:31:50.252] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:31:50.252] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:32:00.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:32:00.478] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:32:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:32:18.669] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:32:18.669] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:32:18.669] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:32:18.669] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:32:18.669] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:32:30.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:32:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:32:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:32:48.675] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:32:48.675] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:32:48.675] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:32:48.675] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:32:48.675] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:32:49.925] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[23:32:49.990] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:32:49.991] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:32:50.252] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:32:50.252] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:32:50.252] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:33:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:33:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:33:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:33:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:33:00.479] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:33:18.680] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:33:18.680] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:33:18.681] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:33:18.681] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:33:18.681] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:33:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:33:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:33:30.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:33:48.684] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:33:48.684] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:33:48.684] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:33:48.685] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:33:48.685] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:33:50.253] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:33:50.253] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:33:50.253] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:34:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:34:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:34:00.480] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:34:18.689] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:34:18.689] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:34:18.689] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:34:18.689] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:34:18.690] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:34:30.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:34:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:34:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:34:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:34:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:34:48.696] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:34:48.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:34:48.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:34:48.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:34:48.696] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:34:50.253] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:34:50.253] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:34:50.253] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:35:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:35:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:35:00.481] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:35:18.699] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:35:18.701] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:35:18.701] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:35:18.701] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:35:18.701] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:35:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:35:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:35:30.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:35:48.709] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:35:48.709] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:35:48.709] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:35:48.709] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:35:48.709] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:35:50.255] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 2ms
[23:35:50.255] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:35:50.255] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:36:00.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:36:00.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:36:00.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:36:00.482] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:36:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:36:18.713] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:36:18.713] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:36:18.713] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:36:18.713] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:36:18.713] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:36:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:36:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:36:30.483] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:36:48.722] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:36:48.723] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:36:48.723] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:36:48.723] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:36:48.723] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:36:50.256] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:36:50.256] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:36:50.256] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:37:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:37:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:37:00.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:37:18.729] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:37:18.729] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:37:18.729] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:37:18.729] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:37:18.729] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:37:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:37:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:37:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:37:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:37:30.484] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:37:48.737] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:37:48.737] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:37:48.737] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:37:48.737] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:37:48.737] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:37:50.256] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:37:50.256] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:37:50.256] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:38:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:38:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:38:00.485] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:38:18.743] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:38:18.743] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:38:18.743] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:38:18.744] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:38:18.744] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:38:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:38:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:38:30.486] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:38:48.749] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:38:48.750] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:38:48.750] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:38:48.750] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:38:48.750] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:38:50.257] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:38:50.257] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:38:50.257] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:39:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:39:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:39:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:39:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:39:00.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:39:18.759] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:39:18.759] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:39:18.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:39:18.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:39:18.762] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:39:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:39:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:39:30.487] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:39:48.767] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:39:48.767] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:39:48.767] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:39:48.767] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:39:48.767] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:39:50.257] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:39:50.257] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:39:50.257] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:40:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:40:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:40:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:40:18.775] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:40:18.775] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:40:18.775] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:40:18.775] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:40:18.776] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:40:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:40:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:40:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:40:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:40:30.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:40:48.780] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:40:48.780] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:40:48.780] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:40:48.780] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:40:48.780] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:40:50.257] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:40:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:40:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:41:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:41:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:41:00.490] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:41:18.790] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:41:18.790] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:41:18.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:41:18.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:41:18.791] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:41:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:41:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:41:30.491] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:41:48.797] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:41:48.797] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:41:48.798] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:41:48.798] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:41:48.798] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:41:50.258] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:41:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:41:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:42:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:42:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:42:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:42:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:42:00.492] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:42:18.806] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:42:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:42:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:42:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:42:18.806] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:42:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:42:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:42:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:42:48.813] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:42:48.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:42:48.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:42:48.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:42:48.813] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:42:49.993] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:42:49.994] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:42:50.258] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:42:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:42:50.258] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:43:00.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:43:00.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:43:00.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:43:18.821] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:43:18.821] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:43:18.821] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:43:18.821] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:43:18.821] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:43:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:43:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:43:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:43:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:43:30.493] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:43:48.829] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:43:48.829] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:43:48.830] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:43:48.830] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:43:48.830] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:43:50.259] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:43:50.259] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:43:50.259] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:44:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:44:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:44:00.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:44:18.833] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:44:18.833] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:44:18.833] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:44:18.835] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:44:18.835] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:44:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:44:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:44:30.494] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:44:48.840] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:44:48.840] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:44:48.840] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:44:48.840] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:44:48.841] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:44:50.260] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:44:50.260] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:44:50.260] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:45:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:45:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:45:00.496] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:45:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:45:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:45:18.847] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:45:18.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:45:18.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:45:18.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:45:18.847] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:45:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:45:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:45:30.497] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:45:48.852] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:45:48.852] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:45:48.852] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:45:48.852] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:45:48.852] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:45:50.261] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:45:50.261] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:45:50.261] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:46:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:46:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:46:00.498] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:46:18.866] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:46:18.866] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:46:18.866] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:46:18.866] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:46:18.866] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:46:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:46:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:46:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:46:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:46:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:46:48.871] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:46:48.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:46:48.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:46:48.872] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:46:48.873] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:46:50.261] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:46:50.261] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:46:50.261] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:47:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:47:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:47:00.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:47:18.879] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:47:18.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:47:18.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:47:18.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:47:18.879] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:47:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:47:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:47:30.499] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:47:48.885] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:47:48.885] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:47:48.885] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:47:48.885] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:47:48.885] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:47:49.926] INFO  [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater]c.n.e.r.PeerAwareInstanceRegistryImpl - Current renewal threshold is : 3
[23:47:50.262] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:47:50.262] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:47:50.262] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:48:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:48:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:48:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:48:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:48:00.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:48:18.890] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:48:18.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:48:18.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:48:18.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:48:18.890] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:48:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:48:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:48:30.500] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:48:48.894] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:48:48.894] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:48:48.894] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:48:48.894] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:48:48.894] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:48:50.262] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:48:50.262] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:48:50.262] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:49:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:49:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:49:00.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:49:18.902] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:49:18.902] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:49:18.902] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:49:18.902] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:49:18.902] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:49:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:49:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:49:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:49:30.501] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:49:30.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:49:48.907] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:49:48.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:49:48.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:49:48.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:49:48.907] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:49:50.263] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:49:50.263] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:49:50.263] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:50:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:50:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:50:00.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:50:18.917] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:50:18.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:50:18.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:50:18.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:50:18.918] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:50:30.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:50:30.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:50:30.502] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:50:48.925] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:50:48.925] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:50:48.925] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:50:48.925] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:50:48.925] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:50:50.263] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:50:50.263] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:50:50.263] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:51:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:51:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:51:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:51:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:51:00.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:51:18.932] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:51:18.932] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:51:18.933] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:51:18.933] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:51:18.933] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:51:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:51:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:51:30.503] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:51:48.942] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:51:48.942] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:51:48.942] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:51:48.942] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:51:48.942] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:51:50.264] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:51:50.264] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:51:50.264] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:52:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:52:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:52:00.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:52:18.950] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:52:18.950] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:52:18.951] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:52:18.951] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:52:18.951] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:52:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:52:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:52:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:52:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:52:30.504] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:52:48.954] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:52:48.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:52:48.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:52:48.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:52:48.954] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:52:49.996] DEBUG [Eureka-PeerNodesUpdater]c.n.d.e.EndpointUtils - The availability zone for the given region us-east-1 are [defaultZone]
[23:52:49.996] WARN  [Eureka-PeerNodesUpdater]c.n.e.c.PeerEurekaNodes - The replica size seems to be empty. Check the route 53 DNS Registry
[23:52:50.265] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[23:52:50.265] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:52:50.265] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:53:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:53:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:53:00.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:53:18.964] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:53:18.965] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:53:18.965] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:53:18.965] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:53:18.965] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:53:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:53:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:53:30.505] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:53:48.973] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:53:48.973] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:53:48.973] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:53:48.973] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:53:48.973] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:53:50.265] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:53:50.265] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:53:50.265] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:54:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:54:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:54:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:54:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:54:00.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:54:18.978] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:54:18.978] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:54:18.978] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:54:18.979] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:54:18.979] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:54:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:54:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:54:30.506] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:54:48.983] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:54:48.983] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:54:48.983] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:54:48.983] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:54:48.983] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:54:50.266] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:54:50.266] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:54:50.266] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:55:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:55:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:55:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:55:18.989] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:55:18.989] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:55:18.989] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:55:18.989] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:55:18.989] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:55:30.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:55:30.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:55:30.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:55:30.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:55:30.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:55:48.997] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:55:48.997] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:55:48.998] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:55:48.998] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:55:48.998] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:55:50.266] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:55:50.266] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:55:50.270] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:56:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:56:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:56:00.507] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:56:19.004] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:56:19.004] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:56:19.004] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:56:19.004] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:56:19.004] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:56:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:56:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:56:30.508] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:56:49.018] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:56:49.018] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:56:49.018] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:56:49.018] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:56:49.018] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:56:50.266] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:56:50.266] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:56:50.266] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:57:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:57:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:57:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:57:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:57:00.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS, type=Application, format=JSON} with apps hashcode UP_1_
[23:57:19.024] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:57:19.024] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:57:19.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:57:19.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:57:19.025] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:57:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:57:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:57:30.509] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:57:49.030] DEBUG [http-nio-20000-exec-3]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:57:49.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:57:49.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:57:49.030] DEBUG [http-nio-20000-exec-3]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:57:49.031] DEBUG [http-nio-20000-exec-3]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:57:50.267] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[23:57:50.267] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:57:50.267] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:58:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:58:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:58:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:58:19.038] DEBUG [http-nio-20000-exec-8]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:58:19.038] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:58:19.038] DEBUG [http-nio-20000-exec-8]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:58:19.038] DEBUG [http-nio-20000-exec-8]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:58:19.038] DEBUG [http-nio-20000-exec-8]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:58:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:58:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:58:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.AbstractInstanceRegistry - The number of elements in the delta queue is : 0
[23:58:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - New application cache entry {name=ALL_APPS_DELTA, type=Application, format=JSON} with apps hashcode UP_1_
[23:58:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:58:49.043] DEBUG [http-nio-20000-exec-6]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:58:49.043] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:58:49.044] DEBUG [http-nio-20000-exec-6]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:58:49.044] DEBUG [http-nio-20000-exec-6]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:58:49.044] DEBUG [http-nio-20000-exec-6]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:58:50.269] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 1ms
[23:58:50.269] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:58:50.269] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
[23:59:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:59:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:59:00.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:59:19.052] DEBUG [http-nio-20000-exec-9]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:59:19.052] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:59:19.053] DEBUG [http-nio-20000-exec-9]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:59:19.053] DEBUG [http-nio-20000-exec-9]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:59:19.053] DEBUG [http-nio-20000-exec-9]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:59:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache
[23:59:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS_DELTA V2 JSON
[23:59:30.510] DEBUG [Eureka-CacheFillTimer]c.n.e.r.ResponseCacheImpl - Updating the client cache from response cache for key : Application ALL_APPS V2 JSON
[23:59:49.059] DEBUG [http-nio-20000-exec-2]o.s.c.n.e.s.InstanceRegistry - renew FOODIE-CART-SERVICE serverId localhost:foodie-cart-service:10004, isReplication {}false
[23:59:49.059] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Fetching applications registry with remote regions: false, Regions argument []
[23:59:49.059] DEBUG [http-nio-20000-exec-2]c.n.e.r.AbstractInstanceRegistry - Processing override status using rule: [com.netflix.eureka.registry.rule.DownOrStartingRule, com.netflix.eureka.registry.rule.OverrideExistsRule, com.netflix.eureka.registry.rule.LeaseExistsRule, com.netflix.eureka.registry.rule.AlwaysMatchInstanceStatusRule]
[23:59:49.059] DEBUG [http-nio-20000-exec-2]c.n.e.r.r.LeaseExistsRule - There is already an existing lease with status UP  for instance localhost:foodie-cart-service:10004
[23:59:49.059] DEBUG [http-nio-20000-exec-2]c.n.e.r.InstanceResource - Found (Renew): FOODIE-CART-SERVICE - localhost:foodie-cart-service:10004; reply status=200
[23:59:50.269] INFO  [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task with compensationTime 0ms
[23:59:50.269] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - Running the evict task
[23:59:50.269] DEBUG [Eureka-EvictionTimer]c.n.e.r.AbstractInstanceRegistry - DS: lease expiration is currently disabled.
